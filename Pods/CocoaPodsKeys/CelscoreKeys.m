//
// Generated by CocoaPods-Keys
// on 31/08/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2157], CelscoreKeysData[1200], CelscoreKeysData[1048], CelscoreKeysData[1216], CelscoreKeysData[692], CelscoreKeysData[250], CelscoreKeysData[1436], CelscoreKeysData[1156], CelscoreKeysData[248], CelscoreKeysData[1006], CelscoreKeysData[388], CelscoreKeysData[589], CelscoreKeysData[1906], CelscoreKeysData[2085], CelscoreKeysData[2801], CelscoreKeysData[2566], CelscoreKeysData[1339], CelscoreKeysData[1590], CelscoreKeysData[300], CelscoreKeysData[2575], CelscoreKeysData[1601], CelscoreKeysData[1338], CelscoreKeysData[1740], CelscoreKeysData[1304], CelscoreKeysData[510], CelscoreKeysData[2588], CelscoreKeysData[481], CelscoreKeysData[1453], CelscoreKeysData[1551], CelscoreKeysData[2293], CelscoreKeysData[1769], CelscoreKeysData[2511], CelscoreKeysData[1498], CelscoreKeysData[606], CelscoreKeysData[914], CelscoreKeysData[1268], CelscoreKeysData[1344], CelscoreKeysData[710], CelscoreKeysData[1775], CelscoreKeysData[2258], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2169], CelscoreKeysData[1092], CelscoreKeysData[2120], CelscoreKeysData[507], CelscoreKeysData[2073], CelscoreKeysData[2463], CelscoreKeysData[1662], CelscoreKeysData[562], CelscoreKeysData[53], CelscoreKeysData[2352], CelscoreKeysData[671], CelscoreKeysData[1013], CelscoreKeysData[313], CelscoreKeysData[61], CelscoreKeysData[1727], CelscoreKeysData[297], CelscoreKeysData[1714], CelscoreKeysData[2389], CelscoreKeysData[309], CelscoreKeysData[2680], CelscoreKeysData[1308], CelscoreKeysData[825], CelscoreKeysData[2476], CelscoreKeysData[2024], CelscoreKeysData[2357], CelscoreKeysData[325], CelscoreKeysData[103], CelscoreKeysData[316], CelscoreKeysData[2459], CelscoreKeysData[2154], CelscoreKeysData[2016], CelscoreKeysData[2059], CelscoreKeysData[472], CelscoreKeysData[2806], CelscoreKeysData[2708], CelscoreKeysData[804], CelscoreKeysData[1602], CelscoreKeysData[96], CelscoreKeysData[811], CelscoreKeysData[2139], CelscoreKeysData[1743], CelscoreKeysData[1759], CelscoreKeysData[2790], CelscoreKeysData[795], CelscoreKeysData[847], CelscoreKeysData[1812], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2870] = "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:1RHr4na6Uc16t7sKH4FEWM3OZd1kPYyiLEX3bNjB51DOOiglNqXMxSzp1Vu9520waZ5eEx77iOZASznBmIDuyxzOSrqjoVcenAraO/9Oai-Rc6sI2OHWOjdHVwybmzdScg9KWIdGHDoUbN5t70+/0d8pyhElYydnYo5audTOE17KHUHJqQQ9lEItwtWj8DUn+RHTpNRMnVMIefqKOp/l4YDIcOvNiOy9i2PFNktPOwseUC79FYp3iZY6UQqk6gIpavPrEqHkVm9OGLzC0ewpKZNEsmak5UdnBAJhvJxmGHBOUwvRAsQqPSHYi9lhQ+h7eAc256h7sV1HzmtB0YBJCEuEPqU0je0if3Q9n+aPUaCiN9YU7GDB7FW50tfcigtdikiTUtn+crKtu/Qjzi8bcPc6RKhIBvuV8f8la0SaZGkEnUK0sAF/32B8NbTFUgXprqFqo-5sioauCXznNUGuyoI2lRt12fCxPb5kswO6BqQfgfhltjb8sQ9fHhrObDkoFQ=\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
