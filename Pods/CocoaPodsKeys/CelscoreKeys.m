//
// Generated by CocoaPods-Keys
// on 18/03/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[628], CelscoreKeysData[3097], CelscoreKeysData[2006], CelscoreKeysData[2116], CelscoreKeysData[496], CelscoreKeysData[942], CelscoreKeysData[1994], CelscoreKeysData[1250], CelscoreKeysData[2748], CelscoreKeysData[2326], CelscoreKeysData[914], CelscoreKeysData[1211], CelscoreKeysData[66], CelscoreKeysData[3068], CelscoreKeysData[2433], CelscoreKeysData[2051], CelscoreKeysData[132], CelscoreKeysData[794], CelscoreKeysData[1970], CelscoreKeysData[982], CelscoreKeysData[2174], CelscoreKeysData[58], CelscoreKeysData[2279], CelscoreKeysData[2577], CelscoreKeysData[1029], CelscoreKeysData[1003], CelscoreKeysData[485], CelscoreKeysData[2587], CelscoreKeysData[2147], CelscoreKeysData[2627], CelscoreKeysData[648], CelscoreKeysData[558], CelscoreKeysData[2117], CelscoreKeysData[885], CelscoreKeysData[2075], CelscoreKeysData[1062], CelscoreKeysData[375], CelscoreKeysData[2754], CelscoreKeysData[1640], CelscoreKeysData[54], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[310], CelscoreKeysData[369], CelscoreKeysData[600], CelscoreKeysData[614], CelscoreKeysData[2491], CelscoreKeysData[2847], CelscoreKeysData[106], CelscoreKeysData[840], CelscoreKeysData[2288], CelscoreKeysData[1573], CelscoreKeysData[2644], CelscoreKeysData[2084], CelscoreKeysData[1298], CelscoreKeysData[880], CelscoreKeysData[1616], CelscoreKeysData[213], CelscoreKeysData[1071], CelscoreKeysData[2840], CelscoreKeysData[140], CelscoreKeysData[1036], CelscoreKeysData[2402], CelscoreKeysData[1299], CelscoreKeysData[2460], CelscoreKeysData[759], CelscoreKeysData[2137], CelscoreKeysData[741], CelscoreKeysData[1231], CelscoreKeysData[376], CelscoreKeysData[288], CelscoreKeysData[3018], CelscoreKeysData[2442], CelscoreKeysData[1001], CelscoreKeysData[135], CelscoreKeysData[1281], CelscoreKeysData[1140], CelscoreKeysData[390], CelscoreKeysData[493], CelscoreKeysData[732], CelscoreKeysData[1902], CelscoreKeysData[489], CelscoreKeysData[1385], CelscoreKeysData[1304], CelscoreKeysData[443], CelscoreKeysData[1816], CelscoreKeysData[1502], CelscoreKeysData[171], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "S8wQee5VLG7ejsjyOy6oHrEtjMD0Vi0rBJAQWbKay7btE963uN/U1UPeWF8zdYozEXAys+ul/hcDJEuRbsZC5hTxlgZrl1KgXjalAyr9p0t9sByR6Ic0K4ekDo2u6EsAESA0f50fsTy1-sW5x7z6qcbZsCh4PuNMoGE48vbRHAAcbaL51K1I1qz5MM+g0BHzRjcXZK5uMKrPwJVjJOQiIeNSHWMjHzQm7n+6FZ/Q3fFfVRYFXxIvBBJeA+2dap6rF/7Y0rDpGDuC8lwZ3E4+joOgB2DBvxl8-FGYAkTEzKJvlgp78mKpQ7uhLQAXan5kvojn7LCsSbgOtXem7xr6EX8Viiok6BtQNNVyAzf8oqz31r7Vls0xZpvK92Tkm3Hp5fivwJ1+5U4bSBQHiAZlrlcLkammQyP1No/TOmrexFtpzBUAaeku8W5+T2w2iS2C6JlauXuw8Zu7Dk1mCXxObOVTxrOIGCOYXiX/aA9ip0IPbcBI7p0oD/0J7D/fbNRPFQtcErQlAhRv79OE8ONig0HVTLJfOUCZmd1m4yCSDKRnmjdw9LlacmANUZaCThlauqMHBqdhre1MmoiRR5ya9Yda-brKFx3DJi+SvPe0Nf3iPEBmQS9d0HyzocryBEPBLDB2ST9gncS63GfCuVw6H6muEeeuNePkHpTTpxVOTxb94YvP2jdsFq8Fop8nz05hWmMNkygrWlBpNOBjBtZkGx4mhNQObpyIu3R+y4u+DfhQVwsogb4N5yy-znPQy4Df6NyOvGP6yEPgFvZeurM39du00ml5FOy1P3LE6ObRw6xF8bLACOniDZSN5IuQLOCG1RKT7CE7-cxlsfFHkvOl0aCtO3RDigCs/z6DVRg7iuYtC5l5d6OTyTByLP0urNKQ5qlPKn+GtaQ9UJtYYG2N9R1E2Mywr7dBWCClE0pvdiNHNB6F5sUUOWclMaYtj1yXgKxLzH8Yrplro0jkyE7FqDyrWbpx3HVVtmIiYSs878KeBnEkS1d5+RjmTbPVnrNi/0djUOONqP2p7lbGqDeFjLFF97py45FazR1zoMj571Kq7iIe+cHvw0SPVgNp7nZfzylAOq1wMhdOEe/t5eKbml3alUBxPUi42V9KOtCPhKiioSXp/Syk9FQrtukdVfzqxy+jRS1h+JVFkgF/UGwYVlNBtJeO6bPbZOKx9vIzqYV4sd7rCxYboiKFIy1i+oV+TJQOyCR4zrBOjeu5I4HDuH5SVnqr44gZLTYH9c7WoZivyNubRbRGqy04JHXSj0TuA-ZWeLLtmjj42qTDlN89DmXHac9MKDurHHEthKR72LqyHnc+3RCNDC2uiyiRQTrfRKb3hTWkm5a0LLs/GLt/gIJXax46xJad4tIz7NG7E8GoZ2bzw6SLx5nswcKv60x3RSnsgPpy6iRF9RezzlJRC5WrSVKm1eI6f//a+nO+WYxz0KcVA7vUfu/8yME2d5A0UoLRD/6+SGiYkHe3p3ptzWK1PNWs2I6LfNW1BpKDhGc7hterJqyq8e9vFWVNr8iIAu6YX7uMzi2kV/JKzcYBpju7l8tnwCqL0bAD9:b1AgmgFjKpPnNenwPYN0c+ng+fpxbMYpIY2E0uSmNddPunO/DdxmsK450imOb8BdvluUUr4zZ/nB1WkyusSChxqaNeaOtD7fIZm9fp9WTQGiu7Mz7A4QkWvikZQDIJUU3Y+mqrUSeQKmZpKWKcjH16esWpewpAcOvEXFCWyJvRuO/B5kWHemxqX/mX72iZxYbYg7UDDDiDRwZvQdiee4PWe75JERMWCFxPO6bjG2jM2y/znAYw1FPzIc4LAHTNQ6UUux+gj2WL6lX2y3gC+MQt9RZWzBxBIt0PEZuPj3Elo1A9TvsO1JuoCkB2nEkhF+SnizWHAz1T4C2K/bm+xn2bKXXwba43Spd8IFfQ0hMrhM3sT4rIeE6wpS8DYwJ9cGdwXw6aeSJhrx9EwdGQFAoteifTCuXc/gboef0/BRWUoy2WPGwHmeuofvjMJOzI63v9ygiH3Bg/wsPSCEAmQhLzuEjhuK1Yy1NCiusAuLPOc3xCqXq3VrN9pgeo1dxr0+olsZzKaCLake4SQQ+qbwEjJCWRf1VLE25mAMlLIeMljUixSETfl4Ruqk9FnPEMIcu8r8H9PvIa2Z+YYB/yGvo3xda++BIWvUVTBMIbhEbsjjaURhSFrIoeHAkvReTA2cwuo+MmDvSFZb8up83Wf3RNFPtqdqNThRRc7BzNOFyHZN3z4ykEkBOQXheuxB2KQ6r9t/zwVZsQ1piENKCqIo/BBc3p1y50Or/xYDQa0adOIlcqgIsyruqOPY84GIlkHP88LypPjJhnEMRuklJG6vlvnU4dBMfJEwIT2RSdciIYsdFeY+bZJE7WySb82L1VB9qqZGondVKHo8C1QtF9tbUmSpOgGrzhbns5NDadhIRWg+j5YcVwRJ/kbVjVA+e4m8fh15atwFWfsGnkYX6MpUYa6ELyoXLW/U6Bnls9XhoQRsGW8n1dBybri+N2qLG1vNV5scplNZJRgEqqHFppb1FZBfT+Y9oXM42Wnrtx8VEe+83j5Voi8DAJJ0UK7cKTyVJlwLyY9RZa4PUSDOl1ihdYdWoab6MYYn7c7poiSvBS7gowd+eSOiH7a5hmi1Cc8Rz8tFohtnzGULV3rnWSxKvgt4mk4eCPED1twHsvWViuEEscAhHL147XXLGtz71mj4RXcWeBVwCXR3VBcnpOBZVIb1sRWi5X0yV+HPNTIAd/Dl2Z3T406zNBynodbMCq89iFJh8paJt9ZuCBx8/64d58bvUPS5uSubbUWg+ExzEXFmhqdm5rbO04PWJsdFtkuHUm2mPHk3vuN2PEIcAYvH66oTgkL5DbmAcRlKRm7TWdffADB9y3ldGrjRYu667ttwCzBWjVPxl4c3SN3M/Z7yLiHQDJbVUrpNxopeRA/4T8Gp0ZbpEWU0z7kVcZ+8ku9U913k0BV0uD1uLvPWpdUQ8XLj5oFOvO9omGGf9eh0Wq16nK2oYLUHf+8/MzqvQCJrjqXQysOdtp5UVpJVhL1QNJ9xsZHkUbs163hO5HY/zznKRRtIiZ\\X";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
