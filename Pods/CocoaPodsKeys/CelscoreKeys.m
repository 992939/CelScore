//
// Generated by CocoaPods-Keys
// on 09/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[3049], CelscoreKeysData[1356], CelscoreKeysData[406], CelscoreKeysData[1561], CelscoreKeysData[3067], CelscoreKeysData[3107], CelscoreKeysData[563], CelscoreKeysData[1097], CelscoreKeysData[96], CelscoreKeysData[3026], CelscoreKeysData[1932], CelscoreKeysData[1863], CelscoreKeysData[2256], CelscoreKeysData[2450], CelscoreKeysData[265], CelscoreKeysData[82], CelscoreKeysData[2177], CelscoreKeysData[58], CelscoreKeysData[1078], CelscoreKeysData[1436], CelscoreKeysData[1569], CelscoreKeysData[1654], CelscoreKeysData[2502], CelscoreKeysData[2057], CelscoreKeysData[696], CelscoreKeysData[167], CelscoreKeysData[118], CelscoreKeysData[2867], CelscoreKeysData[2218], CelscoreKeysData[1359], CelscoreKeysData[1548], CelscoreKeysData[577], CelscoreKeysData[2446], CelscoreKeysData[3146], CelscoreKeysData[610], CelscoreKeysData[2542], CelscoreKeysData[1729], CelscoreKeysData[2132], CelscoreKeysData[595], CelscoreKeysData[964], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[975], CelscoreKeysData[47], CelscoreKeysData[1805], CelscoreKeysData[1368], CelscoreKeysData[1941], CelscoreKeysData[623], CelscoreKeysData[689], CelscoreKeysData[148], CelscoreKeysData[2380], CelscoreKeysData[191], CelscoreKeysData[824], CelscoreKeysData[2901], CelscoreKeysData[1215], CelscoreKeysData[1611], CelscoreKeysData[528], CelscoreKeysData[1571], CelscoreKeysData[993], CelscoreKeysData[258], CelscoreKeysData[1749], CelscoreKeysData[3064], CelscoreKeysData[1441], CelscoreKeysData[2692], CelscoreKeysData[2162], CelscoreKeysData[2923], CelscoreKeysData[2463], CelscoreKeysData[1986], CelscoreKeysData[1398], CelscoreKeysData[668], CelscoreKeysData[711], CelscoreKeysData[1053], CelscoreKeysData[2244], CelscoreKeysData[2235], CelscoreKeysData[2181], CelscoreKeysData[393], CelscoreKeysData[1981], CelscoreKeysData[1533], CelscoreKeysData[1927], CelscoreKeysData[2554], CelscoreKeysData[1891], CelscoreKeysData[2779], CelscoreKeysData[959], CelscoreKeysData[1414], CelscoreKeysData[912], CelscoreKeysData[3198], CelscoreKeysData[2280], CelscoreKeysData[498], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3214] = "drXuVyzgciVkeDgr0L8Hu9us2BEw//4NFEJuHPZSiq57x62sb9jncjvDdZlCES6Qn5ctOuFqV6zQ5EOiTrYs/6tNYo8NA5T1bfSKjc0j9oBbLgzSWALnmWATUGAEOg20MeqZAPdcTCLgQWEzIiQ2-TS6GGx66bxpFenCQy6e3MT79oq6r3yuucsVKqVXib2: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
