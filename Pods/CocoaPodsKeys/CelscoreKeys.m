//
// Generated by CocoaPods-Keys
// on 17/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[841], CelscoreKeysData[1477], CelscoreKeysData[604], CelscoreKeysData[112], CelscoreKeysData[3227], CelscoreKeysData[1570], CelscoreKeysData[1689], CelscoreKeysData[2553], CelscoreKeysData[602], CelscoreKeysData[1903], CelscoreKeysData[2073], CelscoreKeysData[3157], CelscoreKeysData[2405], CelscoreKeysData[2756], CelscoreKeysData[2253], CelscoreKeysData[1969], CelscoreKeysData[2124], CelscoreKeysData[2010], CelscoreKeysData[1263], CelscoreKeysData[2477], CelscoreKeysData[2452], CelscoreKeysData[1865], CelscoreKeysData[1060], CelscoreKeysData[1093], CelscoreKeysData[2880], CelscoreKeysData[2470], CelscoreKeysData[1443], CelscoreKeysData[1308], CelscoreKeysData[1962], CelscoreKeysData[1684], CelscoreKeysData[3269], CelscoreKeysData[2081], CelscoreKeysData[446], CelscoreKeysData[1786], CelscoreKeysData[1543], CelscoreKeysData[735], CelscoreKeysData[1181], CelscoreKeysData[2539], CelscoreKeysData[1033], CelscoreKeysData[3308], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2938], CelscoreKeysData[1657], CelscoreKeysData[1664], CelscoreKeysData[700], CelscoreKeysData[3310], CelscoreKeysData[2123], CelscoreKeysData[2533], CelscoreKeysData[596], CelscoreKeysData[1401], CelscoreKeysData[1633], CelscoreKeysData[2016], CelscoreKeysData[1739], CelscoreKeysData[2925], CelscoreKeysData[108], CelscoreKeysData[2020], CelscoreKeysData[1502], CelscoreKeysData[2778], CelscoreKeysData[1914], CelscoreKeysData[65], CelscoreKeysData[128], CelscoreKeysData[3276], CelscoreKeysData[2084], CelscoreKeysData[383], CelscoreKeysData[824], CelscoreKeysData[825], CelscoreKeysData[284], CelscoreKeysData[3021], CelscoreKeysData[965], CelscoreKeysData[2544], CelscoreKeysData[1246], CelscoreKeysData[1227], CelscoreKeysData[739], CelscoreKeysData[3313], CelscoreKeysData[1146], CelscoreKeysData[2663], CelscoreKeysData[425], CelscoreKeysData[1745], CelscoreKeysData[961], CelscoreKeysData[106], CelscoreKeysData[1735], CelscoreKeysData[374], CelscoreKeysData[498], CelscoreKeysData[1027], CelscoreKeysData[2138], CelscoreKeysData[669], CelscoreKeysData[3136], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "Y1qVtTzLBtNv+lD6tplkhYWJaSDqZUZYrfcvWiAbXifgebu0M+PHNebyErY8PsCRw-K7pm/Wn6a0T8roXeN4iEz7jaenLMLkfOSDzlKI+a13dcAzEKGnaeJJJknCrUZG7E0tA7mOhCsb6QJIlW+srqVU1qG0azGkqBsoMrzyaycEest+QE1bdPGFSnqtM82fCrYSw0XxMebIYOMzV1Xi6YaKZx7ZxwAuZaRpLuTw4HsUAVmZzcMRHVtdqKkyv7ZgFAsZBiZURtstwkCRxArVCXcbQGLD4wfoM5y/KDR6Yjgcb9CN/nnDRN5KZaTnAbbQbpmOHy2kytO4QxUn+g7TpHxJjf3OangZ5exaamHO6Ej/Oeb0P/gCLU81KR8Cl0VbsZ/DcPbNogX0ZwBEGwPgnVtFpHkcNPQ8HYsbWsryb1SvDkFoh+r0E5YhfhsYSI2bnrXAUCT0QRg8oty2sqgGLKykxBQbtOBy4C99tU2MtNCSk83s3UaSY7AIbkfStTEpPFR0ckR8a3G2HxdmGrzG1UHSumvk17HbmiSMFf7rcXmEvsETACuiIFLD7GFRYIP3qlNP7lIwRtnLhD5NCFmH-im+H+b0wyQqUNuB49XpkTKZyYF8l8VHux9XgCAJNrSfHRpc3Kgm38eybD0a/ZExH3FvBqyvk6egF5uA13RXlmhXJqdAqusiMcPSYekGeXCNyYaCYavJrRlwDzHMyud3nCNWXu6BPNBjwNu8w+AmQvpbkJL4z8zjyn1U2KSBJwT9iWmenv0bwkAEOXlQ0dhr1beBZgKNKhaBcWmyHD0F+228RaYVLx2eMek1-4JXLvNUcrFFA/pw00sc1w7HhY6lTqV+Qq0AnUM95YbLPEAymlKDxkzStF8i3qEwOB4VmwGe0NlrmZRHfIXxCylynEF9cKSa1Zw+QRB4RCzt68hIMVynLCABvtzj4jTpPOnYT9/cJbKSl9te4U6HxpEPB/ktjbKAl4HuJgrOXCHQ/+GaR8ew0AOf0gT16E6ZEzfw2zMkNV+2AU6LNuIAMC8N2r7YkJUBGf2IOQKuLA4k9dpCKLE9bW3dPN6XcLxtUXX/vZMJPscwM8JllDy/o6ayFQjw5HEss2yk2JteqLR0nGueFkUuOaLUyIfQp4VuPd-cQtzz5fjNLOMFeQPIJyUzdQ7QQCK3o+lT5KDltuMWwyJ9plXw5l5mR8paytHtEpWGamlSEtmw8B7WFhhaC4PWCL0r+MXlKWIJj797uMrYQa2CoW8uREW9Ta4Aj0DpF0keYiSfQf+8w8MlJS293VHQLBT0W1eO0EBVJ1oUfuNTzShbB5Q8XYRVNoiILblQ5WlPoYfjaJeCedQ/V30Iv8m2pW54f/NuVWPBqHHw4ZuhzVQHiNKGNtt+0sEcHJaW+11g+Xu3P9BqICArbOoa1VvMXLDxoqyYtSzYt+CkUWNAm0RihNsgB91uKEnaRy3T/bXQqQCQh04+7XEhdCFUq2k9KyHg3Zt2U0S7p+eFfiLZzsUNY0z8cm2D7jFXh/oaX5HB1lGkyAuzjXo9sMbAXXVTJGH8z33HS8jZWNTkC76A6RRndvhsQUqfWlfh9NtQ9waM31eFwzEJKyJYxjxNRQIljIxfPGDkf6ufyldUG:S/CCfWO4I31gcHxw+be7YeKsP0/kxv-G+Y4hafqiq8b5RQ9qjfYrSf+0P1kYcG5hSvS0Oo7hFPDw2+33+5TF+KZBs8nB6fMwf+IUG0TBL0XCvBWc5f5oPhc5HD4nOG+oH5HT/dMzPv/ihejZSOBZqeeNTdfhzJ9fcda/JAcNfuga/bnluyxe3OUFOoVq7w3ur//yUjyV5vK9C+jGSkwdyGudRtAlbsi3LqEz5YY8x2cwHKTl1zi46AikROkHnsMYQWYFUECBeKzjvsxjRCt9CN3/b9efQ7YkOExpRq007wMqkuG0FGt/lw8+kYOqxRQW5St4hpSxMluIXryYXGZVwfT1G/XSlpkeRn2Anl1F4hqF0O9R3GgJlym4lt68mqdqvRdrLpX1MPbksbLxbnkFyMdWp/+XEZ4vbbZbluuB4YfVgbiA2nSqAWX2S+7wgUWdAe9/yaF4Isn9Gs3sPLrl+ojkzHDagOITLxsc5E9REsfzVQYBPWjckNXx1+FdlsF0vzdqbSLwBTLerl3sm2p64vbckRQp7AibyK0B5ZZxiQr8xSb58TV/XXg+zp6KeYUILQhte2QYmp4yJmGAqfkvdUEJrHGZt48mA1bQJGBAiegrmhjJG7CbLB9ZEjCGD9S+C03T5ujjxnOOXRLk9MYnDYtj61gSRaEyFmE9SDDL9/Vrea27N+R06YVV4NmdRc/DG2cLg+JMoyTDGolZLN8f+znL0cAzbKOX1ZCin6YwAgWN1R2EGd1Jjo1jr6WBukEn86rA+lvVxOEJzvkBSu4hLWR0q8lOYUbpyTpwTbIfb1AxBJrJSAaw+/4HAQjH+WudqBcqeTYiw2CyduuJVNe3geap3loG2bKOsWXZP5iZPNrDdaqiZSNVjLLyn15YqsJ1CERtGvTUl53uV2-vJBe7+A5YvwaAwu+i+dUgtthIvzf1xDKdJwju2fe1/KejALt5dSspxQJCLpV1k8hpKXT406y+ZBMRu3wWAdYBimD50m0JTpQeOHOWYIEpMqmoygxWNJzoU9nx5lLyrgPSm6BkWtdn4NEZ005HkeS7CQx+z9dhYmjAdYm/gsxI3GzxzHwPlGE7PVzGH2QIJ0r0QFFtheytWEa5cNbCPk9Yrf8s9HNBrcHPQbrZTMHReVWgxI/c8FAUHK1ot8iongpRBUd2Dan50VuB1psuB8j5HtDBkkXOlcXdFKGhHXh2ieFQJ9MosepI0+NsNfbWbFiT+WKuRcLMUMNqZdOzUYZu1kxwzlKbMw0eAg2jXG6VtXH7+VzCYJfUiTyssrj8ygRj369Fv3txu86dT24amBMdhVu2g6+rRVgiuRz24Tjnzo4Jjm+vBgaihUE6Pq6si/NnBKZD/e77YN3OPU8cZ5GctcoWPyl5yi411627VfDHZ1rjOTS2RK4OoaJh2nxJymkHYQrv7ZiOqhBKp0OhhUKz5zfqP2VSF4tO0y1AePYGjbrDof/5+EDdyF8kcGXCz+g8CmxQ1UulP904OUcV2JN1GgCxCWTHIZIHHgPiuv2+kNAbfXNRjI2RuqkB2nyGFo3nF3cPQMwj+Ntk35ZLTyy19zioX3FVmV17OUqrbfw/J7lQjYRcOra6TuOhN0cVU1mRju273++Y0ETFs2NLznSnbLDfsI14+9g7RwTn1baaymPKEbTNjd20OrvOvPPKamXfwtFHZTgDKfIg==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
