//
// Generated by CocoaPods-Keys
// on 10/02/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1235], CelscoreKeysData[2037], CelscoreKeysData[2364], CelscoreKeysData[965], CelscoreKeysData[90], CelscoreKeysData[823], CelscoreKeysData[48], CelscoreKeysData[1203], CelscoreKeysData[99], CelscoreKeysData[2557], CelscoreKeysData[616], CelscoreKeysData[2181], CelscoreKeysData[977], CelscoreKeysData[2261], CelscoreKeysData[2307], CelscoreKeysData[913], CelscoreKeysData[1109], CelscoreKeysData[2223], CelscoreKeysData[15], CelscoreKeysData[219], CelscoreKeysData[2123], CelscoreKeysData[1170], CelscoreKeysData[2834], CelscoreKeysData[267], CelscoreKeysData[2084], CelscoreKeysData[1290], CelscoreKeysData[2036], CelscoreKeysData[2416], CelscoreKeysData[1699], CelscoreKeysData[2862], CelscoreKeysData[411], CelscoreKeysData[1745], CelscoreKeysData[1183], CelscoreKeysData[2671], CelscoreKeysData[81], CelscoreKeysData[1984], CelscoreKeysData[690], CelscoreKeysData[2456], CelscoreKeysData[189], CelscoreKeysData[301], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2305], CelscoreKeysData[957], CelscoreKeysData[2436], CelscoreKeysData[1626], CelscoreKeysData[1087], CelscoreKeysData[2714], CelscoreKeysData[2136], CelscoreKeysData[636], CelscoreKeysData[2817], CelscoreKeysData[2628], CelscoreKeysData[2301], CelscoreKeysData[1840], CelscoreKeysData[1570], CelscoreKeysData[1782], CelscoreKeysData[529], CelscoreKeysData[2345], CelscoreKeysData[436], CelscoreKeysData[2865], CelscoreKeysData[205], CelscoreKeysData[2612], CelscoreKeysData[38], CelscoreKeysData[349], CelscoreKeysData[2044], CelscoreKeysData[689], CelscoreKeysData[1531], CelscoreKeysData[1724], CelscoreKeysData[2643], CelscoreKeysData[987], CelscoreKeysData[2506], CelscoreKeysData[1168], CelscoreKeysData[1636], CelscoreKeysData[2489], CelscoreKeysData[111], CelscoreKeysData[1291], CelscoreKeysData[889], CelscoreKeysData[480], CelscoreKeysData[2797], CelscoreKeysData[1452], CelscoreKeysData[184], CelscoreKeysData[959], CelscoreKeysData[2846], CelscoreKeysData[1895], CelscoreKeysData[1355], CelscoreKeysData[1981], CelscoreKeysData[2687], CelscoreKeysData[688], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2870] = "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:98xRIrqsH9rcC75W32yID2DWakRL9216a6L8pFjiCYT5hiOMyXRrMS8ojq6HZ9STdNPjYpVvenzPddiHJ053tsiCap3rwaWJ979eYZp+uzuIgQPqyO/nC8u6O7KEP5C+GX6wEMv7lUMy50hyGWBojb/AEk2wy2C3dTlphokHcOUIqgIr+woYfFFfcxpk1Jm+gCDKclJfrHfKC9b1Ow+G1UZb28ZsKKBt+TmbfcR1DY6MbY=\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
