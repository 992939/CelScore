//
// Generated by CocoaPods-Keys
// on 14/05/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2976], CelscoreKeysData[1824], CelscoreKeysData[2718], CelscoreKeysData[601], CelscoreKeysData[3062], CelscoreKeysData[1902], CelscoreKeysData[1705], CelscoreKeysData[2661], CelscoreKeysData[1353], CelscoreKeysData[1053], CelscoreKeysData[2282], CelscoreKeysData[2489], CelscoreKeysData[2826], CelscoreKeysData[470], CelscoreKeysData[2010], CelscoreKeysData[543], CelscoreKeysData[977], CelscoreKeysData[546], CelscoreKeysData[877], CelscoreKeysData[2241], CelscoreKeysData[1527], CelscoreKeysData[3060], CelscoreKeysData[886], CelscoreKeysData[1921], CelscoreKeysData[2755], CelscoreKeysData[2325], CelscoreKeysData[1388], CelscoreKeysData[708], CelscoreKeysData[1654], CelscoreKeysData[3094], CelscoreKeysData[617], CelscoreKeysData[548], CelscoreKeysData[285], CelscoreKeysData[2611], CelscoreKeysData[69], CelscoreKeysData[1998], CelscoreKeysData[2621], CelscoreKeysData[2970], CelscoreKeysData[2420], CelscoreKeysData[3033], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[471], CelscoreKeysData[810], CelscoreKeysData[2168], CelscoreKeysData[992], CelscoreKeysData[2626], CelscoreKeysData[999], CelscoreKeysData[2997], CelscoreKeysData[2477], CelscoreKeysData[2724], CelscoreKeysData[1134], CelscoreKeysData[77], CelscoreKeysData[2910], CelscoreKeysData[216], CelscoreKeysData[1935], CelscoreKeysData[3044], CelscoreKeysData[2483], CelscoreKeysData[385], CelscoreKeysData[1602], CelscoreKeysData[2318], CelscoreKeysData[1990], CelscoreKeysData[2757], CelscoreKeysData[559], CelscoreKeysData[1001], CelscoreKeysData[2230], CelscoreKeysData[2417], CelscoreKeysData[2720], CelscoreKeysData[434], CelscoreKeysData[1631], CelscoreKeysData[1522], CelscoreKeysData[1803], CelscoreKeysData[49], CelscoreKeysData[792], CelscoreKeysData[491], CelscoreKeysData[1967], CelscoreKeysData[2147], CelscoreKeysData[1987], CelscoreKeysData[309], CelscoreKeysData[489], CelscoreKeysData[629], CelscoreKeysData[2029], CelscoreKeysData[3096], CelscoreKeysData[496], CelscoreKeysData[293], CelscoreKeysData[1047], CelscoreKeysData[261], CelscoreKeysData[227], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "nrKXSFfESame2Q0ySGzoKFn/yIkawmTXnr1ItFUxbm3zeAwjWaF4t/riyv7R+5X3mBfxY9hZ8dW3ldeT0HRiLhQNVbOCSqtfacfaoNtSbAZDwT0fhBkmShCNgVTDPBQwwLQMOJ8JnOZc12eRZ7+cTgI6nkhX2ocXutCnzK4B03zI47DbeXspirdHCZb+E8cIBPYk2mgMrfnRc8GWM5xF5KK28f7FUFiTdrgc9i6ZkfCsDc3I3frmw6f27NHztzSuURP+E6foRgaDBj90Jv+TBbr9ceoFg2IqZ8J2P2rgH/guWc3/ga5+ictv4VMiX4AzPrp+6gnc0oEN9I8O5QSY3p1X4VucqABrtIyvJ0A1awLahklrp6gttKH0on9+5i2CveBPoZm8a/OdaqoPjiilBlIysprdysSqDg86MIKYTnCDkmSqi85pguNOnyVE/WKnEatPbkYT96DsFuxHdaHRxj9uc9U2qqqODe/LsBjvkbmfWtKva/VvY+DgRFyVzTp/fPzlwabPt3OGKJntQgD1PJk07jc3fwmYC7l4dLM/+P1bKKC95VOEYHMRq6aagYVmm5tmLV0CV4tNc7SWgzJhVZ2tzE2cOKPaf+yXewA/4n4ykoBPBynsS1T/pOe0G65UiMIQFPH/ZWbDOjitWvSH+JeP8AkMWnLjWkBK/sJ4Hx9X4YVswaR0EC6l5uysV3IPSWqfJQcdmhgueBOaYvb9Tpon4zVFvxm6caRbs1A8LoJevErEu5MzQ9qoC28dl5eXHtgCa2abzCBclukWi24XO2E48+zf8rNZzc8wpNrSwfshLwHgYUu14IjKbKVTurbHFirMMqbdlCmjR5BRHZ9KdK0D7mJacY3Ap/YLMZz4M0nBK93eRDEMwR91BrHjuZ7HpJTDqQlUw6NHjNLa3mW135MntINM1BvAJ3DNI6KUsPWYzmQKhppok7tbvhNxMJzFmcI6Fo5ILViN0vdmEfw6NPmOx0lncS4tecw9XITsBbArL8tfYb6H8VEQIi4kyiFrM0ueGVtO5Ktt/kqCuIMGoky1MgYuGsNydSC3fmU4s1vzPJIdMVFDGbVbXcgQ0mdiVFvGJq40uXRiSSzaNJBnN9cK+1J2zFD+yg2iF5546CXMfF:QHJYuEtdaPJ1bJlxEiasvi1HkZ3YhxnS9oHJ3vSnPB6IjljbFcjfCz5AS4s3cGrnNFZuxowbO1I1TVJ929b9/Lf9tEfVy0Q4ZDsnJvyIBRkfZ1WF9/+UWW5A9ULyLoKMlEkLbJC24LmWgbH5rXVsHu9225cDwqfLJC7AAf/yaMd+pWozlk164k95cgQfv5l1wV2LUcNWslHzRlY3dllloSVYiObUTln2hWwCZDbbKs/OuAW5qFu1XXTFr3C4jAXSk+aiIQhvFa8EiX27HRayHk5QuDEKvOW12cuKA7PncoMeUSfbex11OkGKPBROaTkzOyeFsdCWvD+N+sHSv7uW+HaGNsUe/6GRUypdItQs85XRxjCjk21wPKgu2knDeRG852Z-IQEKaj3diRhbV+eaDEZxs6ucEVPIDGJLEuOd5rSzTyf0B1VBy4N0iCRNO/NeFsozo5+Ym7VJnX1n+jhbjnOphWA9MA7ns8LMzGR6ed6gxxeB9t/7J8HctePWdNfEphKQV6bMf05jPhWxyI70ieyx7b+hQ6HXi5lwUnorz5BfWcCXbnsDQOLQ/80nFcTOtyotBZAXKE3LvPw7/aqfcgrwPgI8M2R8bVi8nu1IDDeYzg/Dqv4hr57N3QNCJxtkJXtk0ct2fkV45/7JIn0+MSFhlRFS9oZvx/H2uUdzbR/hm2vRUXmPOaLtjg1yxijQ+drW8mvvdxHv8dLZmp9K9bCG9uDyKBO0uNYi4ICkymweAzmf0V1I2Or5Yr74qhd6Re6J18LuppF3PBnLmg8BwF8z3Dw42Igcd8DweWMpo0i3nJpxCmB2nQDjhMT7cWV5-LZbQeNCaqGQQKNlxNyr1GW75neSWm/jMkGYP+YJ7YBrnxt+itYeGnnS58KWIA03Jxkz9tRGr5wcIePRPWmE1BPA0GYSXNBzvCwtCDAW8h5t9/fgu79wKNYmDsTwpllDT5e4qSAiLyg9GQ2juz6sCkg+7mCTrIV2bS7iclrEuqOHA+4OZwkD9dCzNUIJJz12R/zZekfwP-W4YwGmUDGhySxMt4+q5Wao1L8krQH3FligVKjPKitFt4mvL9FP2tgBcGOzRQj-g6T5y+I97uyOnZ1SpATbe4ccEwjYyEu+VnEAkdnMNOtnZAb+RPu2LMoWsnWnI5UGP7haug8efwK2bR4sLCFk+Z/-YtXOB8ebzzak73TjTJFycwgLfTTkrj1M15ya3d0gFKnnx1AOEFdi3WqqSeNMlAncLSGPspor0x2tlhmoraI+WVKsWa5ReJT6XC4Vtue9FuRPABfYpjRzKa8oj2pP68Nn6epZaCIMO+5iJgQYidqdoYi/XWQrV7-ID0SteX5co9iSybFNkIoHJ3K47nSgXc5oG4D4kFqDT54fwl7903vdixqQuOZ/3N2llmhLEt7LaPAO+REwjj/vBUJVXRPrqVuRMNwnnD3M9Osr0gftovrcdWwp+71X6/WpUd6gTxi986lgYQK9CN0a31nH8mQHFHHvsOoSaQBrw1P6hVrqxQzccqYUwY4e3Soc2mQqqBldfzZPyRtwKg5p+iHO7QPRCEIfGl0vAE1jS1NL2MNwN4Q9s1qrgdDt7WOc66GV8IW5R4rF9yIsnRqcOo1fF4xfjgFk3aMteu1aCZMW/SSD7B8u9t6Z8ahyPnI8Q1zQoO0vYcHzTvQUIWBDWd5jZ4nA8pWEEDWSR1geVQY4RBhTZzDG0PCctEYlkwILjI69E4pAoepMlzD87uq9SbbknBNfqE7OWwkbaWfcABeuEz20EVGEfNSxz9i/trK+EJVyLZ57lXfTFVhwe4TP7cC7v0qKIwVc7XJSdPdt3ak5UvWSW0yPcGbi32yW7P9SiZtY11trWmHl8GiaB4X7RgD0zQ+tdgWPwJ8iRh45g7PNWZsCseYindk3qPddNuZCPQYQW8y7Eni5cty8OV98xHbKAufNE6zv0SQ+hD2Yq8\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
