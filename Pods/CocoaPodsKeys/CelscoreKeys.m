//
// Generated by CocoaPods-Keys
// on 27/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2670], CelscoreKeysData[526], CelscoreKeysData[2181], CelscoreKeysData[1788], CelscoreKeysData[1267], CelscoreKeysData[1160], CelscoreKeysData[33], CelscoreKeysData[2713], CelscoreKeysData[291], CelscoreKeysData[2528], CelscoreKeysData[277], CelscoreKeysData[2939], CelscoreKeysData[2480], CelscoreKeysData[962], CelscoreKeysData[402], CelscoreKeysData[895], CelscoreKeysData[240], CelscoreKeysData[596], CelscoreKeysData[650], CelscoreKeysData[841], CelscoreKeysData[65], CelscoreKeysData[1297], CelscoreKeysData[1289], CelscoreKeysData[1291], CelscoreKeysData[634], CelscoreKeysData[801], CelscoreKeysData[625], CelscoreKeysData[1205], CelscoreKeysData[1757], CelscoreKeysData[158], CelscoreKeysData[6], CelscoreKeysData[347], CelscoreKeysData[520], CelscoreKeysData[1977], CelscoreKeysData[2448], CelscoreKeysData[1382], CelscoreKeysData[1328], CelscoreKeysData[445], CelscoreKeysData[1477], CelscoreKeysData[1512], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[914], CelscoreKeysData[70], CelscoreKeysData[1259], CelscoreKeysData[1827], CelscoreKeysData[1988], CelscoreKeysData[1146], CelscoreKeysData[213], CelscoreKeysData[2367], CelscoreKeysData[2912], CelscoreKeysData[522], CelscoreKeysData[1124], CelscoreKeysData[2425], CelscoreKeysData[1816], CelscoreKeysData[1561], CelscoreKeysData[1031], CelscoreKeysData[992], CelscoreKeysData[1224], CelscoreKeysData[1246], CelscoreKeysData[336], CelscoreKeysData[201], CelscoreKeysData[260], CelscoreKeysData[470], CelscoreKeysData[963], CelscoreKeysData[494], CelscoreKeysData[2714], CelscoreKeysData[1885], CelscoreKeysData[2015], CelscoreKeysData[149], CelscoreKeysData[1760], CelscoreKeysData[1435], CelscoreKeysData[620], CelscoreKeysData[2234], CelscoreKeysData[1659], CelscoreKeysData[2349], CelscoreKeysData[529], CelscoreKeysData[2938], CelscoreKeysData[1521], CelscoreKeysData[2024], CelscoreKeysData[1676], CelscoreKeysData[842], CelscoreKeysData[536], CelscoreKeysData[1366], CelscoreKeysData[444], CelscoreKeysData[1015], CelscoreKeysData[774], CelscoreKeysData[257], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2986] = "JRidognYFz2Mr6CqOwk0p+flEJtvIJrJ90tPgtGNLB0ZQPHwwdH6NXO5yo1CIqkdkaM/GEsLjOR+r0hQLt3F1TJkTbDRarD2rbuedeDg7peDd5SMCp21NvwkFFHKIt+3/2MJsnoyzS5VR1VcriVwn98qHswHBoYX1f4econmHUAGmB+3eOS+VIbIsnfAucxoXlugNI5Xj7dAq0BrhDuMitW55cUmMtd+t3eioWojpXxhIjoRf7z6FLzuVSNyU1kLmcN81MXlv/UCVstJHgAcM2Ortm85cOdhLBEbhKl0DiM+30mL6apV3d9uJZoJgTnr+uPOMvG0MVFfJsPu-dI6HBEopoGdaWWkb4qYOVOtGLWTI5BdTzHTFxBy0/bNxxyfcIkI3Xnx7+STCHKkn2rL0HckJO+vSYUkruCPySKxZlqeMYRlz8IbbeReo6wi25MntWMwID8FKf3UVSKYTeZ9rO9LYtQf5N17V/2ouRTnMfrrqb-ROCGEv7z27rrpTPKWunRdhzT52i:S62X4E9/k+JB78uHNYt5JHmB4QyeMk4OM60wNOHbtqHSlaIMwnlwJoNTR9HWAXxZVQLcPz9xglSy2+bZYE7St3PxWDVn5KFMaaUKznA++XlzC2TOySHuTMEra+qgVPX9Oo7PQ6Ix9ioPxJ+foSddP1HpBL1cmFHb+yZTmNihsHxGpS6JYCO6ak3IH6zP1dzsZdK17yeIbwavKXRFx4qVZLfAusKyjSDRsdiV//x/NWZgzDvLQztRgZEIa+16dshqji4j+lZnQ/Pf1EXgElgZR3eL58n0seti1GdIeWT+qHtOxgyAxxQofxb4HWcDkKy0/eGt6a+oItOzgUX0RGCjrFH9lVRwt5OIv3SPMB0wgyKnSlZnxoPyYcDfWsiMm7HABTm6UsRu6N052essLre13EufvzFIj1ywULSUHTmH06XQdyXl+snXZD/9bx3kde3d/wwtOIIWVOIqg7X5aZOH9e8tQkFWq/DnMxTHBF+5k4c11zViwii6Berzb2KkdWO+/bBA3E8f6V5yk8GVdiLRz9zug5Jr8SArCvKMGeZG0mI9Xbs4FfLkxvIdUcnPSwsW5Y4Ef6hmdPPxErLpzcSfD2Z23dwjrqXd8oPf8M8vU5fvHwQs6pIzLFe5R0jv46Joi27NImE2m6r8hCTTVIE08utYCzlgokCsnXBWd2AFEEJbkslz2zj+XMSZS4zqIeWHgBthBZwrwR2oaKJst35bRwz5bDJfn3LR-McFEaoz7HU/n9qr69NnvTKPKq23oz9M8678Sv8sz57Nd9irwr0uNW1W53M9ez7ARihhXKRKy3p87uHaVwKEqW6gDdDVEHaih3GgVZDJgwJaNAZABJI0v+I8wxMjVzHDbbQLiH/8LyiCE3hEkcQWQd2cTxLfgSyJZsZD2o+W9jCUI4SQ9zxdFsJTyft6MTb39aP7SIcSlyJtiuZfZwA87eNmNeujFEv2RaEIHl1YzMaCIMS6qXsOGu5iRlLHaPsuP9+euHcre8cH82gPLotgvwaw2fzyqF2Trqk7Q4PT7QMG94dNIewitG47ItUqWv0Y2gg67lju93xkEApJRQt5x4V5v/AA4nrNPBXahPotblMoU5kcm8f8EOSRiyPeaNlVEAM5PZeE1M2mH3B0fF4lfIlkMnkAA5unD1Y+hfzdmUUsmoYTZ6egAPLeQkJBin/FvhKpMkWEJvXJCKiygKn8Ru+GPyooLGUeARLsJoSxJzeD1U98p5M3H-FFVx7Kgb2T5VSjqFEMZDzBuTg3QE2QgdtQNUXfsJL/V+Kx38/VXqIDn8JZUQk6c/Pyesg8XLVlBZS+8iBMGfpqm5mu67ePygnVM3vqnsyXyXi1FuFezTYXfVtQNC4Lq3TuGmmUBe0errDeOE5NRncotFWpDPCVkENT+ielFHNCBqbkgX0pzLKRpE4v9yVWIZaJyaBp2jfciB4h1wG7xwRdNgTq0rtEuWhIia++Ap6Nt2ACpon1Y6K4rP0sZCvV5sLspTyBubAUp1AirUHs38i2mPpmQpbAQAqmCst3DiwVe3QjfcRGpPed9a/ng5SJ4US17qZ/iE6f5qBaQqqB3xC3S7/lyfi4hxV2JfSM/WAScgFRM5uN/04Swb3nTUxwx1Yvrs6JbCObJe0cMZxNrz85GVTWKYU3bMgMV9wh+Rbv1FnYRX0F0JCPiHit/qDEamYYNsgiOnwbQzVut7d7PNAF/v18CrFTIh3d2t4oQ7ZZGQ/cFWS7p9rWsv630gjIt1cxNARc5MvFXUHhp0ga8or/zKZI1obrwPpQI1foBmZF3KImXIQrSFctsAYMhZFQhnLyV/H6cJIH7K-B9CLyQpbC+Ba1Znjw-4de96asK9V7t2azwe89Sgl55aZXModRVGDR5czCQIrkkDgnTFAju9Gkeu0bu4LJxwzaTVd7BBUpWD0y69ynmosEGtsISojtMx7V9GN90roX1Q/O9Apjwz7+jvC7SEBFhWfZ/ZqA8vVxO8kyc1+e9Fy8skhMw3pXbs30Toxc67hJ7axIhn9lXwbH7agjVAoGs1BxNDjSaK0lpJSymB9sM/DdX+DprEjAGdOybskf1QBo8vusrUh1JQE4V/9Uw5aUpNpb/61N9L438/v8Oq1JIBNWm7xXG9uxXWLX0ojHBh0Lnxt0c78U5mDWM3+dwGJJAZiYTl6sd6iMI8ewhSndfOF0WnY41bety1oOKwWZby4YSw941BJSKz41noda4C6I2XrTX4dYMBHYKcpagrjgfVasp3yRQl0KPVeElKNwJa7C8hjxcfHOA9iEjmJeS4LocY26sPfX1i+zJe9ghaT3O6TvnOg7cRP1huJQLHUOY2rpZlthebB59Rg77/GvZbQaj5PcLW+9MA5J+pTm8Q6X9hwI4LmGLsjt51zhiFy8Fvo+/JuETxpy4U84wRu1iO6GTJdrASgiT8MWVfxMUHF5ao/rv7kP2IePjAuCe8A==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
