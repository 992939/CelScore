//
// Generated by CocoaPods-Keys
// on 11/02/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[44], CelscoreKeysData[231], CelscoreKeysData[1091], CelscoreKeysData[1585], CelscoreKeysData[738], CelscoreKeysData[679], CelscoreKeysData[1996], CelscoreKeysData[3131], CelscoreKeysData[2811], CelscoreKeysData[1976], CelscoreKeysData[2870], CelscoreKeysData[2726], CelscoreKeysData[1287], CelscoreKeysData[1892], CelscoreKeysData[572], CelscoreKeysData[1627], CelscoreKeysData[372], CelscoreKeysData[2589], CelscoreKeysData[1186], CelscoreKeysData[2314], CelscoreKeysData[3144], CelscoreKeysData[2844], CelscoreKeysData[1672], CelscoreKeysData[3287], CelscoreKeysData[1201], CelscoreKeysData[687], CelscoreKeysData[2717], CelscoreKeysData[2489], CelscoreKeysData[1912], CelscoreKeysData[460], CelscoreKeysData[3105], CelscoreKeysData[543], CelscoreKeysData[2604], CelscoreKeysData[598], CelscoreKeysData[3006], CelscoreKeysData[2631], CelscoreKeysData[3306], CelscoreKeysData[2455], CelscoreKeysData[1023], CelscoreKeysData[2977], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1516], CelscoreKeysData[3313], CelscoreKeysData[2301], CelscoreKeysData[1295], CelscoreKeysData[1629], CelscoreKeysData[2933], CelscoreKeysData[273], CelscoreKeysData[2149], CelscoreKeysData[1913], CelscoreKeysData[3155], CelscoreKeysData[814], CelscoreKeysData[616], CelscoreKeysData[2963], CelscoreKeysData[623], CelscoreKeysData[165], CelscoreKeysData[1194], CelscoreKeysData[559], CelscoreKeysData[1697], CelscoreKeysData[3283], CelscoreKeysData[45], CelscoreKeysData[3249], CelscoreKeysData[495], CelscoreKeysData[913], CelscoreKeysData[2066], CelscoreKeysData[2994], CelscoreKeysData[2950], CelscoreKeysData[2033], CelscoreKeysData[1002], CelscoreKeysData[2794], CelscoreKeysData[417], CelscoreKeysData[3253], CelscoreKeysData[284], CelscoreKeysData[423], CelscoreKeysData[1184], CelscoreKeysData[2228], CelscoreKeysData[2757], CelscoreKeysData[601], CelscoreKeysData[1172], CelscoreKeysData[2607], CelscoreKeysData[1230], CelscoreKeysData[1347], CelscoreKeysData[2112], CelscoreKeysData[2536], CelscoreKeysData[88], CelscoreKeysData[1797], CelscoreKeysData[680], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "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:Zi+L/6vGX2onkXbENhKzDnFaYDckjSDxv1dggWmq8WRj5iCiUEIzCIXRMVffwwoPBBV3btg+VqxbdH/wXEqJSVQ/pcvSL1dDBahlD/VQOoxfQIf5JQ7sVBuBzDra0ez-uhr8MIz4zc/NNyzpzjJm9lKRVmsFssdlzBrQZu076w==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
