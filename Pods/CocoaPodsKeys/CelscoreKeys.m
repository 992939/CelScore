//
// Generated by CocoaPods-Keys
// on 24/12/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1826], CelscoreKeysData[2573], CelscoreKeysData[1519], CelscoreKeysData[231], CelscoreKeysData[2888], CelscoreKeysData[2536], CelscoreKeysData[1609], CelscoreKeysData[602], CelscoreKeysData[2171], CelscoreKeysData[3070], CelscoreKeysData[3021], CelscoreKeysData[1283], CelscoreKeysData[514], CelscoreKeysData[2884], CelscoreKeysData[1982], CelscoreKeysData[1085], CelscoreKeysData[3002], CelscoreKeysData[2552], CelscoreKeysData[132], CelscoreKeysData[2922], CelscoreKeysData[2523], CelscoreKeysData[2570], CelscoreKeysData[1155], CelscoreKeysData[516], CelscoreKeysData[2369], CelscoreKeysData[1603], CelscoreKeysData[88], CelscoreKeysData[3094], CelscoreKeysData[638], CelscoreKeysData[1645], CelscoreKeysData[1281], CelscoreKeysData[991], CelscoreKeysData[2242], CelscoreKeysData[64], CelscoreKeysData[2001], CelscoreKeysData[1652], CelscoreKeysData[998], CelscoreKeysData[616], CelscoreKeysData[727], CelscoreKeysData[1897], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[316], CelscoreKeysData[3205], CelscoreKeysData[2598], CelscoreKeysData[456], CelscoreKeysData[1223], CelscoreKeysData[1240], CelscoreKeysData[277], CelscoreKeysData[1853], CelscoreKeysData[96], CelscoreKeysData[765], CelscoreKeysData[2961], CelscoreKeysData[2845], CelscoreKeysData[1900], CelscoreKeysData[129], CelscoreKeysData[715], CelscoreKeysData[205], CelscoreKeysData[2968], CelscoreKeysData[2947], CelscoreKeysData[2809], CelscoreKeysData[307], CelscoreKeysData[1794], CelscoreKeysData[161], CelscoreKeysData[2475], CelscoreKeysData[428], CelscoreKeysData[1739], CelscoreKeysData[811], CelscoreKeysData[2983], CelscoreKeysData[145], CelscoreKeysData[2731], CelscoreKeysData[1469], CelscoreKeysData[1161], CelscoreKeysData[1144], CelscoreKeysData[2664], CelscoreKeysData[2022], CelscoreKeysData[1418], CelscoreKeysData[3199], CelscoreKeysData[1485], CelscoreKeysData[2958], CelscoreKeysData[1634], CelscoreKeysData[410], CelscoreKeysData[3188], CelscoreKeysData[1660], CelscoreKeysData[1514], CelscoreKeysData[566], CelscoreKeysData[3036], CelscoreKeysData[580], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3214] = "7T5zU2ZH5PPPsgby/D14bNP0TDCZqPKJi+7S8LgACDG8sLgag3QwDnAmdQ4nvdyMTXo7JG2tp+RHSApeLl1ijGLQAkJSnsRs1r7EXJ+7TNRZlDrNC/X7OgGT35mLKf0XWdhU96K7DBjMZFjNb9NTs2i4drinOEnv+9vPMyqUhY7cmZ6rvXuWpaFHbKxwZOeIFrlmjH2HGSZqredgnqxnGjMIdR5FLWOofgyR5fvED6utX+FhcefXeq1p37fjVYoRvwKJgMv6dmnmiyF4Gz2ELtNfZbeJXzeOqJFlbTpRUY/z5/rAPPo79i/pG7k7uVWxf6XuggbsruO1iMgC6pLwJM1nhLqaKx3eagCFcZOloJXqCtLisS1a+BpRab+ElzIL/9iDsflPTaS4pQAOhXgew6R8vy0jexzdG9jW6qUj43L4-gvefhTgm0z2lVkyMS3bA/Ojhi/Ce97Rxql1vweLAzbqLVaEy/3RNcPyhe/vhfzxtRvs+rrm40PM1d/ow3F1ToAp85zcuQO1GyeoqrRdGJ5hgJ36BEBEwCbn204zTR9vrN1ZkV5zCr1tqX68kSKy936wc2t0Jbafegv3m//tK56T4WYhre7Q7+g2+4cs5k9/weH7NHuv7jU9rm1U3BMV8ufpdTP71Xr0P7FWeLSbTntaP1YnriH0j6M48CDrj9ItjNMbKlCWkTf0ms5pghuCzZSJ85ORQPCdkI172pEF/IBu1Xh6bDwfmdMCkAoWgTgWMh1gmihmx+lldV1Uj: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
