//
// Generated by CocoaPods-Keys
// on 30/10/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1804], CelscoreKeysData[63], CelscoreKeysData[2218], CelscoreKeysData[39], CelscoreKeysData[489], CelscoreKeysData[44], CelscoreKeysData[408], CelscoreKeysData[2063], CelscoreKeysData[129], CelscoreKeysData[179], CelscoreKeysData[47], CelscoreKeysData[1369], CelscoreKeysData[1095], CelscoreKeysData[2393], CelscoreKeysData[1831], CelscoreKeysData[1221], CelscoreKeysData[438], CelscoreKeysData[2025], CelscoreKeysData[328], CelscoreKeysData[1336], CelscoreKeysData[65], CelscoreKeysData[1609], CelscoreKeysData[1341], CelscoreKeysData[1223], CelscoreKeysData[228], CelscoreKeysData[1459], CelscoreKeysData[1631], CelscoreKeysData[1127], CelscoreKeysData[1809], CelscoreKeysData[1984], CelscoreKeysData[2036], CelscoreKeysData[807], CelscoreKeysData[435], CelscoreKeysData[1566], CelscoreKeysData[1374], CelscoreKeysData[1894], CelscoreKeysData[1296], CelscoreKeysData[699], CelscoreKeysData[1275], CelscoreKeysData[1383], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[732], CelscoreKeysData[263], CelscoreKeysData[114], CelscoreKeysData[1155], CelscoreKeysData[1076], CelscoreKeysData[676], CelscoreKeysData[759], CelscoreKeysData[79], CelscoreKeysData[1391], CelscoreKeysData[843], CelscoreKeysData[204], CelscoreKeysData[2386], CelscoreKeysData[1165], CelscoreKeysData[2056], CelscoreKeysData[659], CelscoreKeysData[1886], CelscoreKeysData[797], CelscoreKeysData[970], CelscoreKeysData[2287], CelscoreKeysData[2002], CelscoreKeysData[671], CelscoreKeysData[1968], CelscoreKeysData[634], CelscoreKeysData[1030], CelscoreKeysData[1469], CelscoreKeysData[157], CelscoreKeysData[325], CelscoreKeysData[113], CelscoreKeysData[1941], CelscoreKeysData[1315], CelscoreKeysData[1794], CelscoreKeysData[713], CelscoreKeysData[88], CelscoreKeysData[2346], CelscoreKeysData[735], CelscoreKeysData[124], CelscoreKeysData[1696], CelscoreKeysData[1522], CelscoreKeysData[2129], CelscoreKeysData[2277], CelscoreKeysData[978], CelscoreKeysData[455], CelscoreKeysData[491], CelscoreKeysData[1041], CelscoreKeysData[1797], CelscoreKeysData[1055], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2410] = "fTnjlIWJFIK8mgGZ/Si021XKFQveJzDXXnbo6X8En74F6Ml25WKc73JO0DI9VHrXBaR1ni5VcRJV8a+-qLHkclLGf5EaaejEjoNPN8c1I9aMANCe29-HMdvLsneG1pmh4bbCdSrDvBHbXqoA5q5y5cnRJdTnj4zBi2E05w80FeoRTQS5MtRsd/a9pn8tEvPSMyvHo0D7zRBhd/H112PJ23F+XyoJVUH0CYTmOO+ElX60LLhjSAaRxVUdNrOm5PvGq0zDEqZsZCIj4bc08Jur4qUJH8zetbZclCCdGAkM7bvflpYlKjWzuH/zYsGUpnuCa4kUx5yV9pyc2jx91SJkbvde6qkmkO+h7UoZ89m9wO5Megaif9vfbR0iOo6DZtsnK2AY8TCmPchhOtdEBoZdObxL0Zzc0gDY9pGoE+OJNsaPdqRR3LP20CfyZrAf7w4K3yqG7SeaVg2YLZOXS6mOYwCe81Wp8qfy41nHCNhRw7D20adoZPyZbpyA0DgeM4CnkUBcIOPee3i8rVVtOnY73DhAbDwRGTHtWksX5aUh0c8QA0QDfUGgI2JecP2W6ACps54h6MsjV/yPw0JB933wSn5fhzEtw2ToZSoF6QXfWIo7Dq8frOZFvxb+VTbtgOTqTGhzdUmPiJsCUH8c2gddKuZAxnxk25U1ku9GsXQp7Kc5WNOSgcmTz8IapnT5USZ9BPb/xHEIK84sB5Gac1lp7LdOUUD7u4C95rKE6JoGvF+BQ21+KAHa41ytDIrLsF/0/aI0h7qufXotH4Ej5lBFZ+KhZbcrWeMRXrUNIu8dPlX9SADarwStMV53rrmfBzrGBHCeB5ORNJi:CABE9Q3GP+hEOINWbUYWnev0KQ4fef2G7E/V8MBcgvG9z/9E3/bh51uaFlhmJBBY7ggqbjBZjhbEmn8GsYgpfBf4KImzxvu5pqN8AgYhRXyPH+ep0aZ4BCCiSIHuwkbGd3cyKB8ROlwAg9Z4QBzqduZAJ9A5AkGjG6WRu6EHufAr9UOIKokW/uTwNN-YqnM/6NwbX181I8VEWplMzRYcYbbfHXb6KLB/MDvnhuhLaaNJpwQF+g1YDT0hn2DApFHm2tpEVYrjAmY1xskdRMhOXcQ4eQQJF96flxFGQQiF7iCVIgmiccWqbyteGTfZ1zDgv8GajACa5htS3A76AuLobAODgq2WO5yxzb0Zbav/Un3UKINA5f3BCkiLjYy87qiqGIWgN0qggHgZJnvTI5VyIW6OqBqrwQhDyCe2xt6bSbEEBTUuAxEDA64i+KKS8asHZedkKE3rGkHDAtgktWGwS1w9MlovHnxMOSQ4njLcaA8ryjXLI90U0EiZ9n7S/QGx7SL6GRRK0AThriF5Vu9ihllqTIhPRccdJ+d1J9BBhbU8sXFPtUl+h+cUeX3IZnWwotABSmcQrfVnCRJIaIjvuTYq/ddbJ4gomBIHGn6eSUbQN3MVc4iHFVgsVNavS1tq+ErdyGCpsyDU4COwvIU87DmOgNTleWPD69kxr/bcyeUbZ4LGNUYD0nOh/voiWuDwkAKA0W9GUI5VyyyghpTENrilvTzQSGdy7JvdAlsyx3Qv/HUK5Hjn042etBGmi8bqWFwi4+MskwxMicMZISFAptOQ39zjUmB+89jbvr4nbiVzdO34oel127D7kmgAUkiEslUilQHxj/BIedUQcotTczxktQPAwvEexsu2Hf6iEaKvcTk9fW6N39g4Bp0PV6svXuH/YdXE5Vwrj7IJ83zaP2NJ/ygJoLQ9E9IvXEygnrAx0iGla+m9REanK6OpIj3r05hUOM6dLG6cZd3hFQB9hvEE4IlrDTL/otanQ2CAPtjszS4i3ao8iyi5yhMLvpPf9vxeGQFLdeH9Qa9kmseOcOjoJ7jVNRqibWXfXcsNyrhORb3mcvk/scUC9fR6ACRJhVB5k5XZy-myqMz8UEVNEBxO1z+YqolJN/dA9LCzM9OPXa40RcwBYFOmNGDFyUzB3lKM3X7S1MwdFxND98IbJXjWfuyCTlNmZEpBD+3ln38DvrEmoHnLbkUPvJkOdFTeJN2YpTFvu5P5SZmo1rh1ReXcB47fDgiZ9OUSrRvbp5c5HzoQ2dxh1ZIs/YMlMKhZi9jbo1wADK8WpQ/xYu9CsQGCDuODcaVvrQanpSCDoJWft6SAaYhllkrZeNH18tjOCVJg2VKRGfGK7fIzfggkzY+SAh9P87wO/T1sbb56Qr2rCsQaO/h0sKVmygTpREuB2dXUuxk31+mI/F/jHRiDvfvkg0MG1KZEzp5-3cLlkPfOVpa70Yiom2YHySaBGsFkEydr8MOMpRRt0YnBp2gRdronQKNvOC-GRAQeFDElv7FZmHA3ankdYb+pmhyg1ohnlfwN+X0IdKoge9OER5vBZo3MGCyJ\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
