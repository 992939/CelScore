//
// Generated by CocoaPods-Keys
// on 07/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[695], CelscoreKeysData[3068], CelscoreKeysData[823], CelscoreKeysData[554], CelscoreKeysData[320], CelscoreKeysData[1426], CelscoreKeysData[2200], CelscoreKeysData[2510], CelscoreKeysData[372], CelscoreKeysData[1639], CelscoreKeysData[1490], CelscoreKeysData[1052], CelscoreKeysData[2939], CelscoreKeysData[45], CelscoreKeysData[338], CelscoreKeysData[1586], CelscoreKeysData[2160], CelscoreKeysData[197], CelscoreKeysData[794], CelscoreKeysData[669], CelscoreKeysData[748], CelscoreKeysData[815], CelscoreKeysData[2872], CelscoreKeysData[2690], CelscoreKeysData[2297], CelscoreKeysData[2884], CelscoreKeysData[2370], CelscoreKeysData[895], CelscoreKeysData[2293], CelscoreKeysData[1489], CelscoreKeysData[1492], CelscoreKeysData[3055], CelscoreKeysData[1447], CelscoreKeysData[2789], CelscoreKeysData[1232], CelscoreKeysData[2280], CelscoreKeysData[2846], CelscoreKeysData[1300], CelscoreKeysData[1341], CelscoreKeysData[3078], CelscoreKeysData[852], CelscoreKeysData[2441], CelscoreKeysData[259], CelscoreKeysData[248], CelscoreKeysData[809], CelscoreKeysData[465], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2318], CelscoreKeysData[473], CelscoreKeysData[1251], CelscoreKeysData[1388], CelscoreKeysData[86], CelscoreKeysData[1401], CelscoreKeysData[2443], CelscoreKeysData[2568], CelscoreKeysData[2041], CelscoreKeysData[1538], CelscoreKeysData[2719], CelscoreKeysData[628], CelscoreKeysData[786], CelscoreKeysData[2104], CelscoreKeysData[622], CelscoreKeysData[183], CelscoreKeysData[2019], CelscoreKeysData[370], CelscoreKeysData[880], CelscoreKeysData[1511], CelscoreKeysData[1385], CelscoreKeysData[1662], CelscoreKeysData[1926], CelscoreKeysData[311], CelscoreKeysData[1886], CelscoreKeysData[445], CelscoreKeysData[1751], CelscoreKeysData[357], CelscoreKeysData[376], CelscoreKeysData[1424], CelscoreKeysData[1435], CelscoreKeysData[597], CelscoreKeysData[1959], CelscoreKeysData[2812], CelscoreKeysData[1590], CelscoreKeysData[2833], CelscoreKeysData[849], CelscoreKeysData[853], CelscoreKeysData[1216], CelscoreKeysData[1413], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "7ZrRPgw3R1pMPMH0zZPJA+cDyv+2JCCgJxTRxdxl2pRZxdCbmf14MGjQgNvdyfSDvxCoyM2B7EUdf5Dr1MyAur7sQph44cPmNTCiKo44JkkxWbAKjKPqqKNQhHAm43qwgA/ryr9dXP+9EsrwoyO9gNyK/tZN6vYALEfG/zXK+OmSXe3Rl083KyBYcr9CHvuXEO0Pvb3NbWB02R4JwK25RSUjP4R1os53K/snRMfnxCojFlPw7Tio4gtf19qK1Tm5WzW2lZr3d3GfROSX9767pj9zcUPn2mBvpURJ+A/5ucWYAiLs9SBB5WB8pdyVvJv6acUqpGjOCDaPWVEY2Ad5pIGcfyl6WO0CKbWS2JFUu1wgCZmIbulK13FTM049fBFZR6qIqlOLMn1YTJEY6r8oYVwYsWrQ44p3s6CpCDdL4b5J3QhTOYPPPMBEQ67PReN6bUuWGa8qOoqrvTrTOc0fEgvvXXeRLk4a2aqvTcggOH2KJqirxCTvuLUdbkcLGREuunYtgN6GxdZn+n2L9rR9dXdQmdhKmSYDMCiVh1g2LBetxSlnEishsW/itc4Pzh97k9/W6+bP0ME7v2kDQzVNxd632TUXY8f9dnrcbOM7SR6G7erpmnfAiTewYu5OCEWVwBz6YMo5RExck2mZ3D3BUzGLwYyt87YQWgpJww2cXjjw0abGBaf9WqTujM5pjbPuP9uMPb5R00uGGFa9s560CTqQi3ahbMSrNY/qQhabSch01kyYVzrkUyNaXWgVElEsCENcsoHMIFu2CPZRb5AywyfpWf-ytqIBsO3PYlLVT6WKtYh95sEl1HP-/4J4EPGbA11Pb7cEZRGmFBN4xKTv85BkEvT8Y9sB9Gz+lYUynMaMA0AC9OnqWdGBdDz7Zm39eD1JJXZmQFCAT3iTFiT5D+uG2FKX+TRpImDui3KYWywFeDFpaK9Mqd8pjz6+XexeA05LD0pBXnNCheDBlBFeHFbtiP1Q9R9Ddi1R5L0vuLxaaBJQ6oNacZgt7nP8FG99N6HRvTipGPq7WqoaXhkHV8MPklDZ0DU4W6WwW9SZ5IF34YnOi2tzbQamKSrivU3u+KygMzuG5HtuKLcgv5AuZVapAmpcwbXNvJJCuzsNRor3qP6qgPEfpjeoAOh0thqceXcNH7ycY1QuRC/7rYhR4UknjnOxCY2WGpJp2eF44O4a2jF0ReEvYQDtrpcnlyr4u/5etcUEdyfXpgca90oKJlBDyI6W/awC8pQwQUqKM2wEuhGIA+tYvhqHYiSiWB1E/r1jpyH3goI2j+f+xHHHb8Gg6GI8nKke9FILfbtM5PHxTiIJtpCBhnN4/Tm0R1vW601ZCyOM7rqLW2bdHMEMbyyjnk5GeYtt6KGhbGVjRaFUE3IwSUdvXr+ga6t4cUccSiaiSPm8370WuE+GYdsLzL6zEBTn04Kh2AH0LmpfIjPf2KAWn3/LZUx5e49KrbFY+TBoLoN+BbKpOoRs39dfal0aa20dk0JF/wAsYkIyqU2b460qMBGx1Guqcr5gjkZkk1sy2mJ3AapRRWL8F1Aa4QuVbUyEbhRM3h9zql9oLQ456fN6Uge1yD910eCtpGhf4yTthQyq+6XheDaRHOdRrIchrpWeHBuh1lr/BXN:9Ju62DdFRMjhThgUlaCgwO8XWJHAqiCXfmrrwv3mtND9x/JOKg8B4+wX0x9f4cyYU0NRsYa+d6jQXv30bngK9cRzBcCArbfTL1iCcsT/+nYUuGbAHJr3yCyvPj3eh0MTMp1XXJby2eJevJ8PvR5+6bL4Iel4S+EB+HU92ufmQu2GhJuUV5lSl7jpRzC+fH/A2yrRzF05tE3vY33RkDEtH0jwiFglR0npF3+P3PZc66hkF0XprEawYdOs4mG98xv3IpJ+VLww5BzzQ2+efFAGKvAsd3kV2G9od6kiQDAlnxtVzwPX9hq8Cue1zt5S3wB2HCyPwttFgPZ/4EWHwVm5UdwpYp+Gru/S8bLjFgIiHdcvzuqCoEY81CI/0GAfma/wQb2Z0S3Gx618oGzO2bY0zpy7umV2ci0cQMWgQrgpy6kCta/oUmjwMVL2lOSozmOUy7702KHPriuCtdoK9hGLTTziAYMfBpJilH1d6E9vIKHon3ZKNIoZp3otp/13Je+WyzvsUp9xea/vmaxB/gfXeOneqPoVARSULd0R46Rjakpy0NcDt9SfXZ11imifIaof7EF8Uil9KuagjIQryHB09Z+QW0TthR6DKK13LPcnGixqZdgqkQgcmHk8m96TZsaL1DSPYPwhOodj0-/A94b9Z3jkgb3IbiFeHAua7M0qPt8niwXYmWT4UQwMZtuYubrrxPq/BFmmr9X2LvMSmQl4Xdbxv453Nc3KjgofK1pCt3OoL0K6Cq2tgZTwZL6x1jFphQCZ1a8cyxU+LhcK9hYT/sWrxASNuSu86a807oDaX7bE42eG373MjjsTdZzxyjmjWlbKKHnWi3TNo8fYpMTfFneFzfSBhvTChQljVf-UkqW6mBMLiwcyDM2mF0a5QB0BVM/bhbiztcaqquknMQIehKPFw3SEgKOvYbduQ9uL7smkwCx72UMXyn54a75ST7ewI80OYiQZUNsjqwbyE4m+W2FCcjFd7JcWs4vCjfPKFAezZWFAxgSVXfkIB4IJ9Fxy4Z+WojtiECg+REDDxf1msqqmx9-1ouksz0Ya6lkF0mnH/oDvugQlZia2tHaPA4gYpQQAlUdgobXBZXRY4K8jweZGXHslUSUVNJMTZr3dMvHwEQfUDbTy7CtUF+Mn9-D11KH3jRUKX4P+m6qBAsKuTYUZvRrQ4alTy13hXL/53jX4JsA+3ra3/WcExpQfH8OkPh6aKox+acIwvvWwbvJ3yhuFscOH4ao28c58YbgTigKgrKq1AI2o9WlQgcyEeBFpI58qilMbeU87S3H7CGo8R+Jz6FlgNPfVQzlcv7KfPfuEf2dBQnMQHhgZylNHvdhoInEOBvdp5j20VQ0qRROD2UG5kB0DXyuEO/oYFbC7X95a3stCgDfuP2tLY7bSB/+jHC4vLOr8c8jkU6lmVXyUsGZIdHQhBD0dJkvKXfVuaR9OoUPQ\\\"";

- (NSString *)description
{
  return [@{
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
            @"kAPIKey": self.kAPIKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
