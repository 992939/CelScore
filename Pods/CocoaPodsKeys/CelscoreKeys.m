//
// Generated by CocoaPods-Keys
// on 03/05/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1091], CelscoreKeysData[713], CelscoreKeysData[735], CelscoreKeysData[904], CelscoreKeysData[980], CelscoreKeysData[3026], CelscoreKeysData[2355], CelscoreKeysData[1924], CelscoreKeysData[608], CelscoreKeysData[212], CelscoreKeysData[1625], CelscoreKeysData[293], CelscoreKeysData[2422], CelscoreKeysData[1368], CelscoreKeysData[1740], CelscoreKeysData[910], CelscoreKeysData[1512], CelscoreKeysData[2558], CelscoreKeysData[404], CelscoreKeysData[1805], CelscoreKeysData[375], CelscoreKeysData[1322], CelscoreKeysData[1959], CelscoreKeysData[93], CelscoreKeysData[2903], CelscoreKeysData[591], CelscoreKeysData[1382], CelscoreKeysData[1215], CelscoreKeysData[83], CelscoreKeysData[951], CelscoreKeysData[2472], CelscoreKeysData[1337], CelscoreKeysData[106], CelscoreKeysData[1011], CelscoreKeysData[2577], CelscoreKeysData[2487], CelscoreKeysData[1381], CelscoreKeysData[2280], CelscoreKeysData[821], CelscoreKeysData[1172], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1893], CelscoreKeysData[2849], CelscoreKeysData[1149], CelscoreKeysData[2745], CelscoreKeysData[2476], CelscoreKeysData[1968], CelscoreKeysData[817], CelscoreKeysData[1599], CelscoreKeysData[2057], CelscoreKeysData[2177], CelscoreKeysData[2448], CelscoreKeysData[1450], CelscoreKeysData[405], CelscoreKeysData[3085], CelscoreKeysData[1696], CelscoreKeysData[2027], CelscoreKeysData[2166], CelscoreKeysData[1934], CelscoreKeysData[3010], CelscoreKeysData[1769], CelscoreKeysData[2534], CelscoreKeysData[2388], CelscoreKeysData[1821], CelscoreKeysData[2661], CelscoreKeysData[2317], CelscoreKeysData[1529], CelscoreKeysData[324], CelscoreKeysData[275], CelscoreKeysData[239], CelscoreKeysData[37], CelscoreKeysData[521], CelscoreKeysData[724], CelscoreKeysData[554], CelscoreKeysData[1209], CelscoreKeysData[1664], CelscoreKeysData[1813], CelscoreKeysData[3027], CelscoreKeysData[563], CelscoreKeysData[1113], CelscoreKeysData[917], CelscoreKeysData[192], CelscoreKeysData[1708], CelscoreKeysData[2234], CelscoreKeysData[1617], CelscoreKeysData[59], CelscoreKeysData[1049], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "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:TdS4eTImWvU1rtrTJtHHGwl8PT06H+OaUclAjGivz1GNLscB5KVY0l//2LXgXQtQSh6K/r+uHunA+0w+X8fgQ/ta1RLVQOQkHx/p2D5VTHfWXL10JAo4VJz6ePtJ81oi13ZAyeN6qo44+hYeHGgzUExdjeGfEl+zmISI4XErApMjlsBD403+caXl+TBKbMM3V+ywqnS1hPT71V3oEQ9S7SUHEBPTvpqnaC+i12o81Kuop3YOYUaJACjzl1ajRXkh9vHwWYhVQrCkSAdBAozq1w4NWbVKtWUr43fo/OnCB3ajVASNBhCakj8cwqHA8Dn1HlbAVoC28kGFqY3l+peAyTXpMJU/LYJhtDpc1lGBxkR6KC5Yn/sN293LKl8Pl/jI+5MVtBXBbMdUa8w9Fujv7WIQMLtv4XkzE8ebqMmHVnlP3OmD7GZNxB0C7aKSXvxAXbeqWOoAlvKnaNnkmHcuF0EHc+nNjyM37hy-6TczcWAuWPOhKBSiVuJyKJvoAlw3n6bbPzvRxOgYppXt8apcmH9DiCRUpdKFStuII1yykHr8rzoN+aiVRize2baq4ArSAlzqwgFLqajBi1sPuPhcQTwA6Jket1pbTAwDSEUN4yW39PUUvfYxI3OONa3xUbIFsWIWqJ6mf/QaQmwgZ/FbutQ0UP6Avv9sGkxu1iaCzvSISZ9sc4aALHWWC9WeehXLKvbeLuTpXEMx80bgMT8s3OD/gic2H2OoDYCQBJ+73cASgMCIxk01aY9miDh8ZFlBVaNBFXgfbJ7+43gqGqi2gUzX0UFxPVQycEtxtfeYA5i7GYLMxC2mUbha8akSzpmJ-XFW1uEg4CO+QY866cHh3KYYJs51WkA63Jx0VexyDkDZjtn/kTfRcJIWuH0/z08a8Czx1YlOR9SdSLwqik0o/+\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
