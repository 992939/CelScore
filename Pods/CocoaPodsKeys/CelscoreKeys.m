//
// Generated by CocoaPods-Keys
// on 24/12/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[48], CelscoreKeysData[930], CelscoreKeysData[2073], CelscoreKeysData[2042], CelscoreKeysData[2305], CelscoreKeysData[1272], CelscoreKeysData[441], CelscoreKeysData[549], CelscoreKeysData[474], CelscoreKeysData[630], CelscoreKeysData[2352], CelscoreKeysData[678], CelscoreKeysData[2877], CelscoreKeysData[3141], CelscoreKeysData[1746], CelscoreKeysData[2923], CelscoreKeysData[442], CelscoreKeysData[1030], CelscoreKeysData[889], CelscoreKeysData[745], CelscoreKeysData[768], CelscoreKeysData[124], CelscoreKeysData[736], CelscoreKeysData[1152], CelscoreKeysData[903], CelscoreKeysData[1166], CelscoreKeysData[1742], CelscoreKeysData[232], CelscoreKeysData[1764], CelscoreKeysData[2805], CelscoreKeysData[2049], CelscoreKeysData[455], CelscoreKeysData[1016], CelscoreKeysData[2488], CelscoreKeysData[1434], CelscoreKeysData[479], CelscoreKeysData[2987], CelscoreKeysData[1320], CelscoreKeysData[2283], CelscoreKeysData[3017], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[3198], CelscoreKeysData[548], CelscoreKeysData[1393], CelscoreKeysData[1754], CelscoreKeysData[2068], CelscoreKeysData[2130], CelscoreKeysData[2332], CelscoreKeysData[2660], CelscoreKeysData[255], CelscoreKeysData[1977], CelscoreKeysData[18], CelscoreKeysData[2106], CelscoreKeysData[329], CelscoreKeysData[2618], CelscoreKeysData[2177], CelscoreKeysData[2565], CelscoreKeysData[1813], CelscoreKeysData[2299], CelscoreKeysData[717], CelscoreKeysData[2517], CelscoreKeysData[900], CelscoreKeysData[1888], CelscoreKeysData[78], CelscoreKeysData[2709], CelscoreKeysData[2606], CelscoreKeysData[3083], CelscoreKeysData[2988], CelscoreKeysData[2948], CelscoreKeysData[293], CelscoreKeysData[1531], CelscoreKeysData[733], CelscoreKeysData[2188], CelscoreKeysData[2178], CelscoreKeysData[600], CelscoreKeysData[395], CelscoreKeysData[1260], CelscoreKeysData[229], CelscoreKeysData[1210], CelscoreKeysData[793], CelscoreKeysData[2742], CelscoreKeysData[2033], CelscoreKeysData[892], CelscoreKeysData[141], CelscoreKeysData[2335], CelscoreKeysData[1070], CelscoreKeysData[3097], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3214] = "RY1nUdixcm+8TnXojmdyqffYGGuxlv0p9i0Sn1vI+LSE9XWJ0ugWbBOo3P7erYbQoetn6tbA13XdVCbArl0QSFNWyPuYQioke1ZkxT8G7lvyD6ZbUkecGv9ExR908ZfKxx0vwqlcsaeEK2vlB59dt+3g9s3LPwWAHmQHv3lI5wB66zD2ZdTuBDHqaA+hexgEMoFLyQynvloZLuAxudVSNADTlGYDtM4O5gb3Yc6NJ0a2Gh7Pwd44xVgr/lte6D318cb7m0hAF/mXEOsfUT/tTJuS+ggg2fmd8lKKC-OqApDhqm4OBWQ+rV6c1kdjr+ZvgWsiCUVUg8Odq0XmBn/tcn3bYKBPNkm9SWqTTIv4uV7j3B9a2EoC4+uEYGM+5iH5TNqwKs9JjY09TMbdnU/bB6u1ryPeYORnwndLF32z6O2Y7RJxgfLSCm8oi0fTOAaPXyqxdaPd+by/mzKJCoECltsCiwbS8kYjP285HBjtW3bjWl2gdFJKgA4E7JXPvZYZxFDTjcaRmnohoXUzM503bFottkQMZ5n3XFJRsYFSp+IJXs2a2tGSM/IcmgVLNuv+IQvd6qsqrIy9o/CGq0UM0DXK-Wboz9prWnkSozNhOR519WH9VcQzHMsSHWuezjdmlru01fIZq1yWyUiYk5gtRTouqJVR39nG0Ftz+qi/ZD1W+BHzKwbo/hZ8BtgwhQyXoTwera79+Kld/-+jF8WTwHrFZFV6jaie9DyVo3SWbyE2+ksdu5W78YCYzi+s9cdzawcS7JVmSrLdGIdXBRTGF31qW1XbL/cr3thNkCt4pmZKM2UPos+IyhC72DhE8RxwLpNs+4ZwY8sC/zgAhP4nRT3WdL9r78n02KBub+nct4ybGf74WPg71/qMM9V6aPS56Qud18jO86+OumXfbeBoYDJaBB6T8xQowyXWaoe93UlsUz3vfTVz+43uMjSjRn2WsBpQKLpSetQhtuae4eNF6n6A3co2VksoKLUzZ0Ro34Ufx4QLILzYrLP12HTycGA9MTW+sElPCMJqYzZPlXICXTQ5TKeWyYPyxDi2GH0g8sUIo86uIjabKCM1Bzhka+d5raNcV85ZoKlEo1ONCsjEhM4j48/hJdm4pkMNdclSdUp9a9ZA75OYtiDFbFdbNeYk8mzTyHuCrtSnaxe5oPLits7VlEpBArHuGOXNntl7dTxaLTa3s657OCkiMzbBbfFG/v+Xy8VLSPCo7//TqJTZKakYAwG8huk69KJELf8O40S81PKTXLJGrO2B6VraHp6W39B6bNbbs3ZSXBhSpLg3yU4ODao5JJ3ktut+iIS95JoH+EgVEC29j/j/nhJMFktszsY/LPrDqoOWvdCZghBIo4JqxmB92LFiv0KYE/CWZg/SVQJfA-Ta4plU8Y5qiKsLC2AE5yGP4+G2WR5uFbt2vGUaBV9LOeKK7HSVaJqkhyJPhjknL2MSSClB4OLcelcmrknaC7wHyaZGDdRMgKtrmhyubvxXWB7mbo5N0jih3dg5f4vOgKt58N9UjsT9MCHq+4RYkSXkTImFkNNef0wwri3weif2QkZYED/VrGqdbXNL6kkbf7X6hUAGvupnHbGMUqUg423tIkZ4lKO8lgfwrqCKzL1Oqnz813rH5IR/m+F+aMSbTaDRFE8LVuuV8NRLOFkRkxX5QFbGbEnDg5jvQG1SlYp/1M7cbKKSnrebboxQt2bz3gz1CITaQPMrWhDnVt8e5O9nzVFGVPAJ/mrCeOkVAVe9QfrGGBdRMIO9vn5ejEPodyopBD4EVEzH5k53v9qf4gVSWHOK3xZIxKGFaegoVoTRu5m1I0SByNjjb713QxoDg2pnZqbVgtb6laCOtp8a4qCb1yHuJNBkYxvqrG+slLtuS13c9iZpu7mxfKhe/0p2SW4Im0eb0DTNKQGez9oqd9FMQYp6vlKwZSj6lRQAon/SePhpEoDrpDTvVubypvI4Ohb2lKeij:oetSNUrOA9kIbP6gNfAAtUcCixpTVTrIApAvnQkwrR/z8wnFmkTPqIS8m5xy6i6PEzcxJXGnP9YKFALKb0A64wLNHcaiDYAwPQt3gypK47nIuDb5d1LckL44xLqUiMmS0aDK7I8K67i5aOMv7PM3TqXGsE9hzK/qYCQ9KeMrzsyMPXeKoLF+p4CR3CNGo1GQ6WHjlrIdfGF/qHknEL879/m/FZpBJZE2p4irvCgdX92jmH6TLrtN2IiDQmIbRNDnEYDYlg4/h7AAOEr8zRBaVe6DzOt0wB8qHv/bl1xP0JRw2aUJcucCWBAI8zpw1yuTkbmmWeF7gh8WqQ1ml6Ptny69CvcLquxxYdtbe1+MvEzhAnMRkHNX0l2+ufbrce4YJmTBG8dLXCguKR02xX4ymfb72qQkSS9a0fww+ooERglU8tocEW0u7mXFzg+oE273gWMz+1nZV6bUcoKOz0rHqwUfQ++RJC3gewSQNd2wWeXc9RUEU2vVY0lXiSIattTf6/tg/spGXPXkO/Mz+wGMpJnSknR7GwVyGuiIptTSWgyrllgJO0HgPLyMIgAs+5C6QECBFgOeS5meiBowMMWKtAGHWJBn8psw3rk6xJoufetwdh2UxvNV4VtEZHRxtwQcdu2iKm3rVYg9CPiq0VljXNH6H2T7WZfrZG3F9xOrKc-ePqDNbd01s9kNMKZUHGyn80g2608xuI+4tA46oe0AmvspH6n-lmCMs/5l/yoTZ0X4/IB3PcLupijibktj0GcCGdCqSz9+owNjtX3falTmp9a6eSF2I1/3AJLKPy3VLjmit3bES6NjbgYh6zQYKUywJatA6LDPfsKjs3FDik2mu7DAY7eQW7NYamw87vZ8QiMg45OxMmg0l+fSysTMffPsey9A3ZBi7Pg0DoEHr+0zGxWDgclJ/jJ48D/yBTIJ/oKjtF0ZFYsDuP0ozR8j28R1oQO6+BGb3n9gDQQGRd5NuHnlUD31mS/QdExHh/+So1cj8bcFgK5MsZm0LV6/kMT2lx6TF60LPWUcrtPPmwn49BmYIKZfYuK0lg3VQNcrF0tkGhq3Z0W4vRsJpTcnlsM/PrMbRapzGL2whxP4v4Z/IQaSapF+gXQcZqAa1hIdzwiWbKmz6Ly6ZihaAR7J/eX7np8wCrzxdhe9jGX7m5bnsI18W/jCcq5LyRvqESO1Derhb/j3g/JKwK1sysHtp2GqrjK1uGaZr3frw22z4=\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
