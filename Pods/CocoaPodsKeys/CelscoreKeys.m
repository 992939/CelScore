//
// Generated by CocoaPods-Keys
// on 06/11/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2211], CelscoreKeysData[1555], CelscoreKeysData[1757], CelscoreKeysData[1032], CelscoreKeysData[678], CelscoreKeysData[825], CelscoreKeysData[1644], CelscoreKeysData[1157], CelscoreKeysData[280], CelscoreKeysData[767], CelscoreKeysData[1613], CelscoreKeysData[1618], CelscoreKeysData[933], CelscoreKeysData[852], CelscoreKeysData[826], CelscoreKeysData[1708], CelscoreKeysData[1943], CelscoreKeysData[339], CelscoreKeysData[1484], CelscoreKeysData[1609], CelscoreKeysData[1885], CelscoreKeysData[643], CelscoreKeysData[2048], CelscoreKeysData[1847], CelscoreKeysData[257], CelscoreKeysData[1593], CelscoreKeysData[1601], CelscoreKeysData[314], CelscoreKeysData[1656], CelscoreKeysData[1451], CelscoreKeysData[2254], CelscoreKeysData[773], CelscoreKeysData[0], CelscoreKeysData[1373], CelscoreKeysData[2135], CelscoreKeysData[600], CelscoreKeysData[864], CelscoreKeysData[410], CelscoreKeysData[2270], CelscoreKeysData[921], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2165], CelscoreKeysData[907], CelscoreKeysData[1783], CelscoreKeysData[1168], CelscoreKeysData[815], CelscoreKeysData[1030], CelscoreKeysData[2007], CelscoreKeysData[666], CelscoreKeysData[123], CelscoreKeysData[1854], CelscoreKeysData[2116], CelscoreKeysData[249], CelscoreKeysData[1954], CelscoreKeysData[2103], CelscoreKeysData[1616], CelscoreKeysData[1687], CelscoreKeysData[1055], CelscoreKeysData[1026], CelscoreKeysData[810], CelscoreKeysData[1794], CelscoreKeysData[656], CelscoreKeysData[190], CelscoreKeysData[1706], CelscoreKeysData[1219], CelscoreKeysData[1048], CelscoreKeysData[1223], CelscoreKeysData[1717], CelscoreKeysData[1694], CelscoreKeysData[519], CelscoreKeysData[384], CelscoreKeysData[1680], CelscoreKeysData[2203], CelscoreKeysData[566], CelscoreKeysData[1208], CelscoreKeysData[65], CelscoreKeysData[2056], CelscoreKeysData[1081], CelscoreKeysData[1645], CelscoreKeysData[2074], CelscoreKeysData[2090], CelscoreKeysData[1832], CelscoreKeysData[453], CelscoreKeysData[1533], CelscoreKeysData[1683], CelscoreKeysData[1189], CelscoreKeysData[2067], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2298] = "2F+y7upn0El3CLVJ1vzBcPU7CEcaKf20Wee3IcNuEKrufY/Ghf6rLXRU+77saGA2h9AH4nevv3ixXAGYVNYdqOuO2YaPAaVRv8EUT/iUZpektZcZC/XMCD0L5lW1y224R/v6waKBXvtbFIrwalwMng/yO9oZDpTEl+GS1wtBjwGRcktru+Y8AHGfE28d7R9J3+vQIoAsAkQc6QLTj0TpYY8tzVqDRDyT2nxQix1j5xf4aCwRa4yLJ9+lP0rbpqtlyOmRi7449vOV29mtt6/wwFwJbMnd9hLd0JpcakhpyDKJGtsQToG+7OBXVPJGvh9Uyo7jrCmiEGHfTE2XaKdlmi12egY80NC40ZMZtSxQ4dcL5vZ5oETLxBMVMyB1vWzP9nqV14TO66yekT+hWngo7rF04n5RJVcvsBahWdMaQo4yH/veTYpE5WGPVsgfGTUvyuEAKaVXQw2KA/B/UJincQO7v2DQn4EEAbNgAiqXLI4y1T4yOYtmFPqFuU/UMM+QPEoSAwf-mHa81A8qSPRNVxnf4RD09bKHD6L4Z1ZSK82zNWqSF3FYOzfPraon4Cq6zl9ygVOwPuRV8fuR2SzqmaVljcv54LOARFZBKEu+76or4+fOG1MSScsD8wE5YPhyed48su3hvGuP0SH+1Ir8e/GgX5-ubuPlt23xGe7NZd1SmLER6mg48/UErn06xRZBPTqWLl4bselSoSFCHWR9uDLgvau9gC5iLYcMFmZeL/xE4VJ/Cdf9df3wVQT2LFgsKFJiDds6jDYZFwWWYA1wQQylOxbZklhR9zn2GJaUj8-kgPJafDNN45A8B6rfFa8bkDsiDVszv0K72G1qUFMB9Wr0IjrjJ7knKEOy85xD9/4bfynPrUq/kXwewdZAtxEWMaZ6JP4PNyvsuEkXOsv7rIGGvPOgqSpoTlUudALuCO3lutARhPhMYfe3SDVIsmW9EiIm6KyjSEtkortZgjkkkBqbAx7CRDDxPfeww0eS12bJQHfFuPr16B6ei85Hs+JxvPbq9lstEzQqo6VblW5YETh14dagFqaew2XA/ikNr+Fr4u3W3EQOerOffc469o3Ei9Jcubb+TXIYCyPp1tqC5iOHplpS4Q4Onb5Gg2qXe4CG5lfoHR+nldOecMRU8707i2BzTYYpcXiAawdvePe5E2/h0SGx9FhG5W+6v6R8nVCtAET542/2sh/H-PSvn5EE787-MJD4bQr9xQerRm1fU/T0QCboxcYcDv+eg2+gmrBHNwdFWUe6kEGigAPMkH11hsBAw+vkerSfa6kJN352UXrESxoSuM0P2GqZjZtXgWYdSSvl689CcB03CvrMSPM1Go6gxqne9Tv2vIElVZaoG/3fhpChDTn4kZX7ZJtadrLVcktiSFSmIhKnOPCY1hYqq6QekvU6TBz2Iyb5Zxf6esvKnDJa9+fui9qCK+kEVuCYEfhzG5hnVnJRyO2liCLG1hX4F/76r+WM9hedc557gFaZ1PkDVMXLd+vQA5Yw0YeNSah9luZgTodKR4/X523ZTUVmQbvZgbdAQ31HufZXN3LZd+GGerHkBzMX2KPkSlit9XK4ZF3AW6UVjeREgWeihAIzlKaZMyngm2oOdZiC77q4eBk40YmpIX9ofKcAtPre0bytjFfEvMQOMeqPuSZjRzuiejOE8RyOcgUkaL/1Re/e6Oh6Hj934yIo8foL0Tb+YZE13mq/T5+CzRUMJsadst04W3lrg4T7HwdGUP4b+N9D4W+6awIBPfaIAOCids6TKrNjjCbq/Qv-ySXEdKgeNf7ia3wmkQeGncIULVaKhb+9P+ELCZf3vbkkREX88rrooxv65sdTH7B8S1H5bg:cQhhsFid1zUX94OwulX3P+Sta7QoCLa/DNOhLFkPOL1sas16IfXZ0c0cC55d06gqH8cOG/3FaWZTAdMrHcduOawRfMl6eOJwocM8vPB4rxiRfreEJc4eSg+6Bvaj6grdMF/+7v8nTH5KDAwZWb3Zsfwjt/nvySuuHtJZX8IHsaExNjaK9BG1obuK0pq1kFjYV9vAuUB9w1el0rOhye8VcbE8hnl1NOCaik+cBQLwZqG0eMLK1Rs1dJ4SdqRrYuhhrMyakdWbYqsy+R2C2Kp1SWfp9uRsfmSN08pPU7zfMPjXIkUlfcfbU7u5CMMh2cJXBPjppwa0Ef/hccMEt32owA2c+cT68i1nTR6j0LQXKkbEYq3Z6DPgJkfOvCe5ib8p5aWihT/AyOEB5sJn+85Wy4NbvbCsqPKuShyNLVplJgtaVN2/TnxCbVw==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
