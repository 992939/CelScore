//
// Generated by CocoaPods-Keys
// on 08/07/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[908], CelscoreKeysData[1992], CelscoreKeysData[2207], CelscoreKeysData[1457], CelscoreKeysData[333], CelscoreKeysData[1787], CelscoreKeysData[1429], CelscoreKeysData[1611], CelscoreKeysData[2486], CelscoreKeysData[1508], CelscoreKeysData[433], CelscoreKeysData[1412], CelscoreKeysData[2172], CelscoreKeysData[543], CelscoreKeysData[2089], CelscoreKeysData[1576], CelscoreKeysData[2531], CelscoreKeysData[1299], CelscoreKeysData[2574], CelscoreKeysData[693], CelscoreKeysData[405], CelscoreKeysData[1552], CelscoreKeysData[898], CelscoreKeysData[284], CelscoreKeysData[1519], CelscoreKeysData[1868], CelscoreKeysData[1894], CelscoreKeysData[529], CelscoreKeysData[1203], CelscoreKeysData[470], CelscoreKeysData[2381], CelscoreKeysData[500], CelscoreKeysData[1700], CelscoreKeysData[677], CelscoreKeysData[750], CelscoreKeysData[1966], CelscoreKeysData[1473], CelscoreKeysData[2538], CelscoreKeysData[2163], CelscoreKeysData[434], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[683], CelscoreKeysData[44], CelscoreKeysData[1677], CelscoreKeysData[973], CelscoreKeysData[261], CelscoreKeysData[1737], CelscoreKeysData[1566], CelscoreKeysData[2035], CelscoreKeysData[784], CelscoreKeysData[1711], CelscoreKeysData[1119], CelscoreKeysData[244], CelscoreKeysData[1323], CelscoreKeysData[140], CelscoreKeysData[1098], CelscoreKeysData[938], CelscoreKeysData[1505], CelscoreKeysData[277], CelscoreKeysData[916], CelscoreKeysData[1486], CelscoreKeysData[119], CelscoreKeysData[1824], CelscoreKeysData[307], CelscoreKeysData[587], CelscoreKeysData[1938], CelscoreKeysData[1833], CelscoreKeysData[900], CelscoreKeysData[1193], CelscoreKeysData[415], CelscoreKeysData[2108], CelscoreKeysData[1470], CelscoreKeysData[2352], CelscoreKeysData[1921], CelscoreKeysData[540], CelscoreKeysData[911], CelscoreKeysData[199], CelscoreKeysData[1430], CelscoreKeysData[2331], CelscoreKeysData[1826], CelscoreKeysData[1994], CelscoreKeysData[1363], CelscoreKeysData[2417], CelscoreKeysData[1012], CelscoreKeysData[1626], CelscoreKeysData[1214], CelscoreKeysData[572], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2642] = "OlkfR9f6N3i9eRKzu9Abq2KsUA/3xB+TFsj6x73bOtKOsMq+zjai7MdN112abaaokG1ETl2jYVNo1zRjl4NiZbdooPeAinvZdf9T4SWfWFOBuXJlTsDnCok164pK0cgAANm4yo61cT8LdjDpy6Llcr3fFhhOQPi0xppHq9g6BhBvGnb1c/rTRFlMve+MSng+S6XI7he1nb8R2Vk1zjdw1dSQAZDyhC5o9yrdTyFNfWjehl9WFM/T0KO+hwiAY/1dJfjXGaxjwK/pMc5lUTV7Hbajc/dq8HWJrw8htfz4HgcQLfCflyobkVGGMWho0quZK5IQj/hvtA9W37+sp4pwuIMG4iEfDuK8CeGETZlMIubcorIHGtso5smdj5hke5BRfmuuHyqx5D45b4m3WvQPdarSREW/kof-N94xugmH86qpyxX022PClYXZzI4P1VelAuHeVBswU4L3lxt1P9gg+yY+cKFJVH9baeLtGQpU9eAM7rSlMdXideyrkQOkjA5e12CunH/PHozp+grGgJ2Szt/dpfmQ-HB9AJAR7v8fvKfafwClPdoIlcSiPmzuc9pYEAb3+UAlutI-jHN/0ok9DmNN0Rh21gC68Bwv2CBX+HvOvazi+KTDPKRZld/jez5vVvDwunbmz+5LP3A+GPpI6ABvXB/adNWt2Tt5DTXPkeVuEn4W7Y1qlyn9pTpfyZEj0wUFj9ZXFQg0wKwC4brGLFyM8+UGuXdVn/wJlYoNE74foI9wHG6ktcKn0tKGkD+dn9UuQAZoR/dGPa+k1p64OYFqTraCymHgw8PFa9x8dA0C26AfrvpGDH6x4kjBqw6HtlrmdPFLWkzW4hfs3qxRpZt+eJL/qySWCc797NpKrDKkVD8wsVEdOxn/OB55NL5D/C975xj1qmvi0O59WmK5-+wELKmS+p6mFXkRNAEl4Uer2Z7oRJ6Se1+TyRWAdRw4ZvllGFfBOIPWueBAbx+RJ7mzKtTRg9tXdeImrfArChn9jOqzu8nv2c6McbPq6AbYoyBWB6PCVnrwp8SosyY61crZsSj8jpVafxkPGcLRVrHdpz/tNFpv6Xu72a9pN63Nwtx2urDfwndnK1WX1vlf0Vqy3FtwRIwdu1ALI9z/SXsDU3ZvlAFhGbjD9r4052MOCGmiwvMlOUWx70Z47+OSXbAQlBRIT0kGTcRKNh1oc9gw1SchizZMbhqH3izhk66NghqLnmpx+S2ZOJLTIjIeVUgelFZ9qnJOydueEnk1xBVm1ijE9Mpi4r9vBeLGuBtrqzWA6YfqJFar+aKe+1/lZWxzRi0i4qyxFpvjXawa81g8ht6NM9dMa+dKFfeXctkmcAvqciWUJCavoifWDrt8pQmAKWc3042ikXByGtj0CCB4+98TbFFEW92ktcuEJhGXoAJuig45pFarN8MHRLIlD0cRjUhreThwEo9R3JUMEhwUtNj2cErgF1zDXpf4sUaAaK0DWkaE4zCAgO7JI9tBXgQP1ZVe3PNLee4TsZMjKUuLM8GOYy3tPpztlSe9Zz9EnEfCfL/MUqjBFvr78dzP+oDIW/gSaAtyDR30lGZ1YCgEpL3FlmDPJqUE13wLqsSrPQNF2urOqJHYWrMOxLZoBlO6nl13XnAqZSAKvJgeTsKNcjhSrvbHTbSuuyU32Y7PxysXM4oZrLBCY-LHBXkpPSiMXG1dVqrLr4Kr2hdrSz42QHu:8U4Px0aztkHqiJ9ijumQ8oN+lsu4eA9QnpahCMSSbkj70PP8rbJIQQENG1bFEDB7OsYgbi5KX/36xN4pevQBofAU3T2d7QwhR9jA5B11Ti8YNKIq9+18SHo4w4ZWqu0az+LgMEzEvpLLC0ovxykVaciac+eYesp1rwRx4Db3ZDTvcTENzvweaaAnyaFSmT+1b+FMky8Sp5lGPLulSfLPFv+mQHArNjT1gr4YAIsAfK8wmm3tA5WM0Zl9Zb+MqdjOnHPsOMWTUu5CZ9zCx/OqbaqxXm0gqzS2wgJwHnkHaTQnZ/PZG2ZT7DTXyJoo7q9q+PX-eHjvvhMOtrc6XURS52ewT3Zl5wJTd1K8NAxbmVqsEf6O1PHExmBiprRf78KE6d7VgLeavTa69dNPZN1nBs3m9GueZ6MM56VqU4oNIig7J1Ul82tNsLfNci1tS61ycq1uCcRPJMj2A/DpihtJ5VT4XbtaKP2HUybLBClkSfVGXnxwHY9lJ3MqDUm3nc56HCn20aEQ5p5JM7A9ejzOgkcQI6rEIi1P/qVmpXp/A/+ZWDg6p/IXNE2DXwuq3VkPXYlDipD7W9tIMws1Hl12Ocheok4EkxuJsENhs+Tiv61bgHf13KLeyV3lixhXeIRU8lA0ln+Ry66aoUw4PGdHbceMjxckPnry1SwBuNYCuab/t1apW1Bi65NE081QShKtsalUFIaHkgDKbKuar/1i9iSvxc3KHeB4ULEv/5Ghxy80E6TYmljAIuonLOhEGkO58wgRj6bpzqM9FOGm9DcDaysty3OXHznYRDkzfANtYjlCi+XxkjAfOI0mPR5z1cXhCxYL5pxzyGfrW4vr7p+8PwygrTGTpn9G8ObsbzEcyxd5r4gGF0sRU2cIvww8XXMHEnQ0/zvq3opX1zyaK3GHartbTMt4vg==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
