//
// Generated by CocoaPods-Keys
// on 31/01/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1288], CelscoreKeysData[1819], CelscoreKeysData[1250], CelscoreKeysData[2881], CelscoreKeysData[1177], CelscoreKeysData[319], CelscoreKeysData[1965], CelscoreKeysData[2075], CelscoreKeysData[1037], CelscoreKeysData[1683], CelscoreKeysData[2438], CelscoreKeysData[2423], CelscoreKeysData[2674], CelscoreKeysData[2258], CelscoreKeysData[1768], CelscoreKeysData[1557], CelscoreKeysData[2536], CelscoreKeysData[184], CelscoreKeysData[2428], CelscoreKeysData[2801], CelscoreKeysData[762], CelscoreKeysData[2712], CelscoreKeysData[3054], CelscoreKeysData[277], CelscoreKeysData[3], CelscoreKeysData[81], CelscoreKeysData[333], CelscoreKeysData[1636], CelscoreKeysData[2568], CelscoreKeysData[434], CelscoreKeysData[2592], CelscoreKeysData[1355], CelscoreKeysData[1457], CelscoreKeysData[264], CelscoreKeysData[1013], CelscoreKeysData[2705], CelscoreKeysData[2676], CelscoreKeysData[2014], CelscoreKeysData[1908], CelscoreKeysData[1062], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2531], CelscoreKeysData[830], CelscoreKeysData[846], CelscoreKeysData[293], CelscoreKeysData[1899], CelscoreKeysData[1880], CelscoreKeysData[2262], CelscoreKeysData[1385], CelscoreKeysData[635], CelscoreKeysData[1060], CelscoreKeysData[2230], CelscoreKeysData[3076], CelscoreKeysData[1065], CelscoreKeysData[1218], CelscoreKeysData[2213], CelscoreKeysData[1620], CelscoreKeysData[157], CelscoreKeysData[1887], CelscoreKeysData[1255], CelscoreKeysData[501], CelscoreKeysData[2723], CelscoreKeysData[2894], CelscoreKeysData[2431], CelscoreKeysData[297], CelscoreKeysData[911], CelscoreKeysData[2844], CelscoreKeysData[1375], CelscoreKeysData[308], CelscoreKeysData[661], CelscoreKeysData[828], CelscoreKeysData[2519], CelscoreKeysData[1003], CelscoreKeysData[2097], CelscoreKeysData[1779], CelscoreKeysData[2099], CelscoreKeysData[66], CelscoreKeysData[3057], CelscoreKeysData[1520], CelscoreKeysData[2841], CelscoreKeysData[1055], CelscoreKeysData[614], CelscoreKeysData[1789], CelscoreKeysData[454], CelscoreKeysData[1854], CelscoreKeysData[2158], CelscoreKeysData[2807], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "oj0O/UMJgNrBDSa9dzL3cnIADKpmm8qbOEMi9omc2VEqXi1Uc/36oq6fEs7yCFMBeC1NVGHaeQaH1qVqdeuceysgMA2Fpf55yx+eS+9xOct+BZVf8RtghZ5AJkul35G09+JKb7OtR/BD9cgmoZOez2tSCfnL8ebA8vJAd8KyP9FPQfAdGx2Eq06Rl14EopPLRHAa/ExxGbTEHvZYWMX7TKsRJl8k5h53PxfkXrDki53BxD0wEMpQdET8f0FKOTw7f34ltHa0TEaQrcrlN/Qil8wShr6NNhYVIn79TevGk-kdY3u06j8e9yWM5DRHGSo6jHWT16cgZeWPsA/V7/FFG5T2zIjF0ivWKsViJNWvRxWcfIALJZKqYjVpVDatF4zwm56wSSgmPEd7iFgIvt321cTIOAs3ykgIdFGBqTsav8Jj1GG9kJYH/5FT9rGyFesdLPJTmg2DPV7Yh/xiQjIV9MNnxft/zUV9jfCk/bOryz0zksw6B/hur7JLXM6k2LVxlUvW48nxwBi59XTsyf6mzDA84FIbGGUjJogx84/TBei8Cbu+KFMrWBmAH1VAYf3FZWrD+Q5MSUUX+5m2ehqvxAZHwAodts+HPuP6Zz8N6KhtlV1pZR5pMK8gN3Q17vrXnFe7jIAStFc+cYEa/825p-WsAd+UYkZlQbL/8+Vj2QjW7WhKV1UiHX5bLew/IPekHuj1bs/uNmE9BlNg6BIfMTIb8DC7eYCgttZ3/07nFDqPXI019ycwtkLJwFa4kBwISrFAHQjUY5yZ+NQecXMjx4EFxKeJP5Q/08M6V8UjQ65p9RI1Gpz6jUhKpkBI9esmAy43oKaOq0vI29-/+/drCZsaOGzk8xjTcRYgk7BPFQcO8n7QPOYVoPVhY/CsIWLAxreklMZyz2+7sbo4QxawMkgcsHQsC7yaJPnAksQYkDCfmkq8pcy2OCz/MXhWjBgrlYnNdVx8sSCt+N/DoUXxQbaUxfFJuQjsnxhe0LYQV0q8+fisGFSPP99VHJUx/KVfie1W1bPiVKJhGbGEa+oZTBVKX9wz7lq0MknS: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
