//
// Generated by CocoaPods-Keys
// on 08/07/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1882], CelscoreKeysData[1899], CelscoreKeysData[734], CelscoreKeysData[2218], CelscoreKeysData[1762], CelscoreKeysData[817], CelscoreKeysData[22], CelscoreKeysData[224], CelscoreKeysData[933], CelscoreKeysData[449], CelscoreKeysData[965], CelscoreKeysData[2312], CelscoreKeysData[953], CelscoreKeysData[1976], CelscoreKeysData[754], CelscoreKeysData[1449], CelscoreKeysData[481], CelscoreKeysData[1534], CelscoreKeysData[1232], CelscoreKeysData[138], CelscoreKeysData[2029], CelscoreKeysData[495], CelscoreKeysData[1490], CelscoreKeysData[2231], CelscoreKeysData[1157], CelscoreKeysData[2386], CelscoreKeysData[631], CelscoreKeysData[634], CelscoreKeysData[1911], CelscoreKeysData[68], CelscoreKeysData[2041], CelscoreKeysData[1480], CelscoreKeysData[1725], CelscoreKeysData[1051], CelscoreKeysData[488], CelscoreKeysData[503], CelscoreKeysData[858], CelscoreKeysData[1149], CelscoreKeysData[693], CelscoreKeysData[281], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1417], CelscoreKeysData[2173], CelscoreKeysData[2025], CelscoreKeysData[2040], CelscoreKeysData[2211], CelscoreKeysData[1955], CelscoreKeysData[819], CelscoreKeysData[746], CelscoreKeysData[536], CelscoreKeysData[815], CelscoreKeysData[2151], CelscoreKeysData[100], CelscoreKeysData[980], CelscoreKeysData[1168], CelscoreKeysData[2120], CelscoreKeysData[669], CelscoreKeysData[438], CelscoreKeysData[462], CelscoreKeysData[1897], CelscoreKeysData[1792], CelscoreKeysData[1972], CelscoreKeysData[412], CelscoreKeysData[164], CelscoreKeysData[866], CelscoreKeysData[338], CelscoreKeysData[1836], CelscoreKeysData[2192], CelscoreKeysData[2105], CelscoreKeysData[480], CelscoreKeysData[996], CelscoreKeysData[421], CelscoreKeysData[387], CelscoreKeysData[1361], CelscoreKeysData[1252], CelscoreKeysData[553], CelscoreKeysData[626], CelscoreKeysData[1862], CelscoreKeysData[751], CelscoreKeysData[1691], CelscoreKeysData[981], CelscoreKeysData[1529], CelscoreKeysData[1786], CelscoreKeysData[1281], CelscoreKeysData[341], CelscoreKeysData[273], CelscoreKeysData[1540], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2410] = "zXjx+kPTd0dhyoBJDu5tGV0kpnB+WFWGCMtJ1VbeSHALBaoJgx17BrvLXBRtiWw7pAjPYOqlyhy/x0XVayQYoAt6fg3WPqaU9ZPP0gGUDt0EGpPFz9fKnEfiYt1EIapEHHDktIEBYVyRQYZOFgpER6gawpJ84JP4CVqsb9fN4Z8MeabBrRt9aJ0iIzli2agJbj4amTJoGaav4e93zEajiPPLAK9Xvy17YF4vs+pfGJBVQkGXDIubrGGhqa6BOQXvPZyRb4yApMlMGb+kv6rmQvfAdPivaKPh4QoEorRhd6BnIvXd/r8+E70yqQvBWrmLlDwPuRN+03RLKp7DxS4yA1gbEkuJ8onRrp5CJSZtTDPS8zw+oVnPQytDpydPUQFLC0V8/cp2TIhocMIFbvbMoGVefziu9F0sAdCBRa97ZDfHD2YWfUjOIteFXxipzStfssugEXmf7bLYjXbZ0Qzsmgpqs4+PWrll-fQjB4tX9Ip1qIw8hnMGeGaj5aUnGG/uUyKwk58eBDW4VWAZqBIaMlxn1BOlT7nTkO+BfdKVR99LvpASEnbo3DDjrG1xvg74ZbXNfBdRzp3GK3rTvpbCdrqlB7MbKae4qJHtQ5do5uJTD54ZTG1HWmPAEPJzRLdHVSzJIU2/XLcty7HVdK/TT8FkY0zyzeR0f9VvCzY4wBEaUFCKtx0dTuggmshBt8bQ3E9kl3haqCGyzuwK70c1K+kis26sLIw0gD63GtdgW+-Z32yb3nrGZE/fy9DLgI9FtOwjJFaGmW0weySRxMjlJf7jP3Z4b8h2l/ULF9MMHixN0qL:E6VtEJvaGZLqteZw4dMRR20pAnkpoUOa6ru8iiNlH0KtUZ5EZo-UA2XwOTipuhImr7z5JiKvKbuct0cp0hooQwHE+0TZ45QNJBd83AkzacA0u2aswzSUubEJHD/lxyTcMoahcJ0tfA9eJ6Xz+MPoi2uedo3mRiOlXO6s80N43ljq8+U1zxWy9NyFAc5Ym0P35pXXDnIqlT2bkxHicBlTXYgsgwz6OdIp9+aATeGwK6CTvhIRIaJU0y8AkKxokOgN9tJoKYmea+NbP8F1NQvlNgZUxxUy38IgpzDSYUcgFib4C7L/lQsG0yVnfaCihjDZFl03EaIUS6OCG5UA8kuUzOqLWpWJ1r/td1PQrLnhhRQW15YAp3ufyto1spPfU35pOBuP73zl4uvn76643XeWl4/fWjoUhesc9Gt84Lbtz+LOomiHZdFR-7ML+eFDYYNKEb6KCQwns3XyrURk32OY72inzMCHc0Kki42n13FFiI8aOg01QU88whdxLU8vcmhFydli2upoSs8YjWF/ldYmTHCgbf1d302vBfgeIRdC/HzryrDpu+32XC6hrAN9m5dfyMH7Q5SgJ+d6wWV4bfsKKnFXQu+/UzSgdLj+m9ZkcMDgfmEDhA0f8rH1cYfzoCO3hXfOC8filzcAvZNw3iuwj5Qqdc7q9hRIxv9/Ih1UUygSY780F9/q/lLDM8+Qiz10EvLCFdxuG8KeSQlTVKiEcmDHfkTDh1ebim8pjPyLMm7cuxanAObCqsityvrvoh3po723gHtxGTagaXQi/9OFYzGHDh2y44Gy6EnqzL1/x8zSi3zInMbK3UdBqFV4ytaBeOT4MeKw7Wxoz7ubJwsW3VrX+5skjjOcl/Y0ots+Nla1bWczGnJZf2/4sKlSHVCHq2zUckWz+H49h2YBo8kYeZnVswixg6bq43tfQUqclb/aesh2hI7OMdyHVEGc+s/e30ximM3gf3aDZsbU79DB+luk9sZf4yHS0topxoYyV0Gujf2xFu1Nbamf+3O34ugWq5FsKy0UmvxAi6KD0zTSF3cpwdhCitbYpvHVcgpMAP0SiW78K1hEp5hl7-mXsSHxqQwVL7KM/fZghD+Y/AbWxuEO0NnF2+QKC7t+AH/CKPfUj4snZuRs6oWIyX/3PGxVOXwF1TfN9gIRjVmwqtl0JcBfLyRdiAq/xHtsc9217r4Cgc/Eb7Q7tBtSR-yA3aL6efKbPAOuenUaBuGgPLyg5vzSZraaJSSZQfru+6v2GCCoLc0BPZfAJ+pwCvlTPx3AWRHOdRXaL9P9dZrBGBVTujz3dTs/sxKoMQusgMxds1so6L87ZWAJIaLdPybDe/cHFLaSkZ6zTxuiwsFSfgiqLt1lSrcBQIOn5VQckM2iualT+GOqYFeaBH7crtE+SslBCpA6YXG8WJge+dHp/3x+9z6OvCDnZaa4b0VQ6Y4UJS4iOt68BBLR2qzMdDk9M9k5sHcOB/B+c4TR6o3OtC+iDo6Gi6bAPyHMX9HPLFkvTRzrXMrLNrUGq/mKr73S1V9c/i2MXYcnu0EVX8G7ayjJI7cYIey19SN1rSe/pReebY0r8AiE1KbQy6x9\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
