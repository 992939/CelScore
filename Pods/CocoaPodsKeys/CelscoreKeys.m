//
// Generated by CocoaPods-Keys
// on 11/02/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1611], CelscoreKeysData[989], CelscoreKeysData[1874], CelscoreKeysData[354], CelscoreKeysData[1123], CelscoreKeysData[2625], CelscoreKeysData[1065], CelscoreKeysData[1070], CelscoreKeysData[686], CelscoreKeysData[568], CelscoreKeysData[46], CelscoreKeysData[1277], CelscoreKeysData[1849], CelscoreKeysData[984], CelscoreKeysData[1911], CelscoreKeysData[1196], CelscoreKeysData[1002], CelscoreKeysData[2038], CelscoreKeysData[1059], CelscoreKeysData[1659], CelscoreKeysData[1099], CelscoreKeysData[2524], CelscoreKeysData[1830], CelscoreKeysData[2511], CelscoreKeysData[136], CelscoreKeysData[2415], CelscoreKeysData[632], CelscoreKeysData[1525], CelscoreKeysData[2160], CelscoreKeysData[1517], CelscoreKeysData[342], CelscoreKeysData[603], CelscoreKeysData[1350], CelscoreKeysData[1632], CelscoreKeysData[692], CelscoreKeysData[882], CelscoreKeysData[1586], CelscoreKeysData[1494], CelscoreKeysData[368], CelscoreKeysData[2358], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1986], CelscoreKeysData[647], CelscoreKeysData[881], CelscoreKeysData[1458], CelscoreKeysData[407], CelscoreKeysData[166], CelscoreKeysData[2124], CelscoreKeysData[1122], CelscoreKeysData[1051], CelscoreKeysData[890], CelscoreKeysData[1139], CelscoreKeysData[2266], CelscoreKeysData[1346], CelscoreKeysData[655], CelscoreKeysData[131], CelscoreKeysData[684], CelscoreKeysData[1884], CelscoreKeysData[2286], CelscoreKeysData[749], CelscoreKeysData[1258], CelscoreKeysData[888], CelscoreKeysData[1459], CelscoreKeysData[1402], CelscoreKeysData[2033], CelscoreKeysData[2084], CelscoreKeysData[157], CelscoreKeysData[2421], CelscoreKeysData[292], CelscoreKeysData[1688], CelscoreKeysData[367], CelscoreKeysData[1214], CelscoreKeysData[1682], CelscoreKeysData[465], CelscoreKeysData[2245], CelscoreKeysData[1777], CelscoreKeysData[1336], CelscoreKeysData[1464], CelscoreKeysData[307], CelscoreKeysData[956], CelscoreKeysData[104], CelscoreKeysData[1259], CelscoreKeysData[2360], CelscoreKeysData[1292], CelscoreKeysData[2157], CelscoreKeysData[1771], CelscoreKeysData[520], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2754] = "c9wnlUUAiUnShMMhl+q0Ry1csOoqnsfGJSLES0my2ixvcR2Ch8MLOqMhPKe6khOpoRx3U2HDISkg516LkN6dLF7MTFgSeRP5o4KQHogl0TwqlF/16peHDCvfzZQUogm09ykdKWyKOJ0a/VNPy2DRINpOVOCPj4nkG7qf1Ws5Phg+y6suEq2hapX+SmgRBa92bWLiQt8xb0/P4A79WvXvYUiI8nduMpz6OJD7E8qFFBr0jbiJqUq2ejbfueaPEqj9r5H6cKDwCMLdsuZavMpOVyW+qCm4S2ndgkep9LQTVb3g4sWnIl5bDAfwfuY6Roz3CW0MlaV7gDIlryfNTXpiPBnRdrQau/lCuIEUU6EWZnnq4uC9uARaN89XYxHgck4/ZbhskeP96XxcJVnWS8JrBjOa2J9F9eVqr0V0HAllQSdCntx4LPmMleXJYxdnJjN96sT/YJ/29P21aTFLpfEO8YWsG1iGYynhwBjuY7w5/mqeJXCajjLBqHsJMUslaSgeYF9Rfjz5cQmw2bNMGEXyZ3x4XjsRnLf0Y0vFTvYqEqvaiWCPMadxjyXps3CfyzOi2GhgWK53/iqYedmp+t+LworYRl4dWzvhkBp0yQYGGm1Y1DM/x4+n/c/RAwCcvQCUc2t1vGZslVFQnGpd76Cy2qth7EU7a10ty7/YkupXNaIcebbT5KLX9pE7PqB87KV/KlRNMuRIRWVQB7mUl5glUVM7w6o2qn/2W9APMtwr4mJGE-tsc5VKFTtQdDuiv8tRnJVyYn+sZM0D/oBgLhLwmPe6AdfAEMzRgPRrAHN2M1muB9pqivZFOMFzmGW88/3Ssy8LcePbte5UphUC4JiBLzjOwIs7q7pyj3KS02mBclUB/iXnH-jtx3bF16:lDMS4xatn/n2hksFeVAtTDLqPBm7TlmiawkGX6zzNLHyaNaMxiO6axUeezcdFsZGH1BVv1xbMq/1tRbMbPy3sctgcJUfE9Lz3aX+dveN6pmxrWvf5yPdW1pOymPxZyJOWdjMeunirGT6IAjkIC+TAVLoVsDgKLtd1quWHyEf9uomXo0x2mnYx7HwvNaSGR03UbjA7U97qQoG+E8+ae/uPU5gL9Ac4pLIF7IR1X7-7ORhTL1v81aNLL13dJkxWAY2WIBXDPxR0wg2ZSIPACu6YJdduI2ZPoT9lWmwr+13gjhuoO3O/YSW5LHXewbsJr7MEl7a1v1h04AdcdeeTOiISQJiHQ7RK5apBBLeibZmnvNDxUf78qKF30hW8P48xcZiXXirfdtzlAKIuL6pN2frYJiT8KnV6Uon7AYpb3Kt18SHOyI8ZfnAJU7+JamDc1nl1QYNOTx8FNM2N3Er3Paq6Taq18RfHpcBDdagG72rFHAS2lPr8yJiEA3inKVeBQZbqAWT9RWn01uI5VjO+iY/NnnNol1b+A9amOK9UDO2cPDnVTJEv5fH6jbe94vLEcrEU/+mysGjZew7o43Rx7X19w/bLSb57yg92u1sArIM7yVaHQZGH+Yjj/jtgdJ6O74vxG4UMLXIswltGmsz9KhteAjVl/S4w0nj+ICP5bXQFeaShIXkpJXR7+UKT/w5lHheh/Id95kXGOUynkSz04l66FCTMhMza39wfnFcmTTaFH55OWAJ0ntwEVu3jeDt0BZPyIT0018s2csstpUpb9dbw8Z86dy/W-0S4YTf+2mptWbQYT76JIn7ZA8DY+K7oP3g8YcmO6f2CRtgibQTViRI/y8Imr/HL42CJRGcYbXj2RcuKfXH6XF1Kj9LvwQXWy2HIT8sbUjNlWvCuSp9NNnaHtA8pJkrNxrJ+xhnCWy7fst9ZMqt8MZBDKBMe3+EDHA+yejEL0GbKYpQzf8dpMcVvyKwDXDOee1zqeJWQqKddnzQHEbLTJtpOGXojGourEGbhJz9fj6Cc047hei/+MiZfSUhOkttIYivtk5Y9KH9uovcPxI9uieG3p1+7YmPvjSCwqhxiD6utAPRlNnmlveHSRAWXCiSYqMqgoaNnT0C33Xs6KrYqamQHQ-OALjlmZbcXFk0h8FYp3WoZG+kI5nOYfw0cHdL1sfSJwD22Ntf04ZH6dC/+ATg7NO7NaWg2783CEAcx+Br7cO7tpWmHtm/exk7d6zn0LbPsxZ4k2+ccr3ygckjVH12nMrQDhE0t/e7qds+ZQNypBXA8jl/rkRM2m6fKsV84RcEnnxshdHr2Fh/jWrS/i+P2R5LLPAQC/RmnCvfTRMehZ-ca0S9wJOfXLTWjNBtTxG0fjP4xiF7jhd5yIsbXhybkCuUCQ8InIwgqzaiS/T5B+cEZSy56uxYZCs4rQaNMAurGgC6y2dvzfDeHb4S9ryljlqeBFFP9ac5lCz4UKgDuboH+P6JkcBLUWj4QXf7RqZedik/U+PgXGxYYflEF36JetXJVr5kkMQU1xiZ9f0qvwSGZ1hznxtDN0kcBZwsZTpIVoMxj/as3Un3zm0hl+ScCx5siwJznbVI6gPhuIMyjbH10q56umB182ir9kntXB1dM8sghfEWbUNMqWmYPEqayyTRCLgya+4k46LtxBF0MXtO+iNjfddTp+FK1d3gtKk5HCHm/CmcY15I5pn3j46i1hyAgCD89BHitvl6Ln67xDlldCZoNo9sd30nOkWZF1AkKin7f3j/nlg3CYYPkWy/jlIR59nRIowtE3EG68nugazHI4OUxJlfQKW1klKrPsS68Jq93hLhBHMtr/AXhRT5d8z/l7nK0QdzJ9sq/\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
