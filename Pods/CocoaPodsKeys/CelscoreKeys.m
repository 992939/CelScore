//
// Generated by CocoaPods-Keys
// on 14/11/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2422], CelscoreKeysData[630], CelscoreKeysData[1569], CelscoreKeysData[1651], CelscoreKeysData[1567], CelscoreKeysData[2578], CelscoreKeysData[1602], CelscoreKeysData[1429], CelscoreKeysData[1065], CelscoreKeysData[1347], CelscoreKeysData[613], CelscoreKeysData[419], CelscoreKeysData[1648], CelscoreKeysData[681], CelscoreKeysData[2611], CelscoreKeysData[413], CelscoreKeysData[2267], CelscoreKeysData[2333], CelscoreKeysData[1282], CelscoreKeysData[1051], CelscoreKeysData[924], CelscoreKeysData[1716], CelscoreKeysData[1535], CelscoreKeysData[1397], CelscoreKeysData[1467], CelscoreKeysData[2652], CelscoreKeysData[967], CelscoreKeysData[1407], CelscoreKeysData[2086], CelscoreKeysData[1275], CelscoreKeysData[2622], CelscoreKeysData[2506], CelscoreKeysData[2246], CelscoreKeysData[134], CelscoreKeysData[1676], CelscoreKeysData[1084], CelscoreKeysData[1730], CelscoreKeysData[338], CelscoreKeysData[443], CelscoreKeysData[881], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1593], CelscoreKeysData[939], CelscoreKeysData[1941], CelscoreKeysData[465], CelscoreKeysData[1987], CelscoreKeysData[548], CelscoreKeysData[1961], CelscoreKeysData[252], CelscoreKeysData[767], CelscoreKeysData[2750], CelscoreKeysData[594], CelscoreKeysData[1843], CelscoreKeysData[1477], CelscoreKeysData[1595], CelscoreKeysData[1524], CelscoreKeysData[576], CelscoreKeysData[421], CelscoreKeysData[1181], CelscoreKeysData[634], CelscoreKeysData[645], CelscoreKeysData[1841], CelscoreKeysData[454], CelscoreKeysData[2258], CelscoreKeysData[1935], CelscoreKeysData[2138], CelscoreKeysData[1632], CelscoreKeysData[1097], CelscoreKeysData[2606], CelscoreKeysData[162], CelscoreKeysData[1309], CelscoreKeysData[532], CelscoreKeysData[731], CelscoreKeysData[2047], CelscoreKeysData[639], CelscoreKeysData[867], CelscoreKeysData[1420], CelscoreKeysData[111], CelscoreKeysData[2579], CelscoreKeysData[514], CelscoreKeysData[1196], CelscoreKeysData[798], CelscoreKeysData[275], CelscoreKeysData[792], CelscoreKeysData[2508], CelscoreKeysData[2326], CelscoreKeysData[26], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2870] = "SeB8QkfzGaXEiI3XASWFexwm0ecs3N4X216cmolEYs+Muh6UbMKhEgtA/5zlc3i52fwYVv5ZAusmm1luNxx3ysPgew2SYFcBJqpULgyBzYtmHiCciFIrt226ymjGxgHEHqmCYHT69VH3Kv9ehAIHE8WGJ6dRxdaPJO-BY5z7YGihOUK1rW7i2W7COgefpDinv3ZoU0jpkHoa0KiBdETOeIUoP4+JJVuKe6LycxbAIN2EEjMVgmLVI0PO6Xc3-l6YuxNf+/hVyjMn2QR9TW3aaxDDOODA6YHuR/erFmvcIpkh/EPE3UiEqLxwyPF6K63c0gDvEV4N25n9qbXL1653stMyqi3+WOyJUgPUL4d+ZVbm2kpb3UN+ltLJIaoPTUZGvfhwMg+N38vKMG5W8Vj0MVA/rdl1aYVzB8Hife34TvFqjxFG4O2QImoHiB+ubEMhL9Ua4t9O3FvLe3cyZeON0qGO8NFuyBe9GuPAA84HeWI/T/92sxQPq2ZarfDt6ZHBGX1LOzDvLWSNH+raVQilah+VjzmTJYNYHTejs3vHy6pQjlk8RJu3dywDNsOomaA3e1SEtUvlhyF7HgHtKxdg1ldfbd5p2ytXaR11Z2VPg1DoxjyK+rtn2eXiXt-M2D2-LoZHm7PH12tIBM+iX8J0Bzo66PjXcK5UaCYhaAi2i9VVKAKSm3FeERPcvCNwO5gqzrMcVr5IdVvsjP3a55gdzgevB+Y8HNNzoEVDSXvOmSD/00SdWPuKPQtkfBynogi1ZggdXTraZTbdVWEWKqJNrrSn2VsgGK8BwEjMFhPxQLi3GSUXcLlKlup8pmOpH+wKlSUO2ue8Vh0dQpX5vvYCg5B1GpSg6Prtvzo95JUrSpxNQ93dsPkYElR74t7AB5fB9WZ+QHA0sRsa56SSKT1Y6I+NJVjKa4tPcRHZSvwZbC/s+dz9s8bBK+5c6f6Y8q7I3ikDw4RAVQcJsYT02s9YEuy52Q/AJcgFX4bhyzYEpSPmfOl4Ojmimoo05cL1Uh0NegRIB8PECTeeQJTUd0znd9HCErPy+4tzIj8G9jlWebWQSfvTmQmrzwu7n5Iqj+/cr6Pn/2GNQ5NlziYbMDIb+Fwh7BcL/T5WD9YpMPrs48UAb8eRKowZfKrxpid6Wxhf0rVLB1IDH7tTw5t7bDK6jQks7HWwqbpEEtlI8gHuxv7+0hgLr2Zq6zRiLbeauREwlcx0rUAaLtfWNcYYppnYKc7XAWO0TsCHmURuHhMaFiGF2KyF5OTCgAhonr+Y0eaEv09QKRJ6v9mkrE4R5tM0MHxR/iCsn935eeh2c6Pis2WzD+2KHsgXQKHsUS4TnZnTE3SsywwC+Myq2j20xIgSUgSbNAY8qdej64uujBYEc7PxqE8rSHdub8mrCkUxpJHJXs7WwlZ5Sd5A137bu4arDYC8tA9BDclTIutMTA3M8HigabmieFKyy7B6BmlON7BfSksGU8W5FfQp6oIRmrryMg+3bRnJPmapUzOhtxDnQt1OEFoCQY4TdgOfRNJztHi9Emytrs0qhGsSjDiPzut2tixgqOSQi6i7kw8ZTZkoWhYIx2PumllH3BQuIuPdGL0kR70B9mzbIA09prhCEa/Xpeiq7N4suZTs4/sOl4/up3jfi3T4AHREZqdKZ2o5w4PK1qg3xDV6SvzQ9uESi3O/cF4G5nNmxH8v95OFIkUnXPrXihaV3HbX8Z3QykswXwHrITKsRkj+B5/ZSqDPX1ltB6Zh6x7w0mSaDKE003r7ZmDsRN5010J0MuOaGbGKO/nh1Em0p9Y0tyrzuMCEkNZb6kzgbEXZKIaoUs91b7RjwUCXUoBUX1F0lRpdTuBfI0+9jvOy0S4jgXk86jStu+klyBPmnDtQ/OClgDyNU+5lB/ZqpuMnligNVEoDfcN7kW3L9nSdwONMeMancp0-QNn2+-9iKvP72vCLHuvEfk9SutP8XB1jq4PIHf+nS5RuHAJI65jaucIFtSw7ZfJ5OpUTeGcf0Eg6z85nn/KKQqCwg5vUX3B2BlMKWbF4rQtuXfUfLmJCRubCAFrpASaLUuXPq2/B/C6eRfZ+gSLOW7MUIg8sEiBBzHjA7nhYdBKVOn1v2Wzh05LZGYAb0inJiEyHdG6Mhv4fmHG8wbamsjO4ZzdHHIeqq3cgiTSnaHTInJ5xkVE38qkK+m9UD0qKvnQ9ybtTfTPOJc+x484n4fboH+IIIwuw1BQadY6Q1JIQgzJFCK7wwC2sBl9pF1sX7EbCVKRw+SAfar6+/EzTIJVssasQ8vXCjGPvRceq9q7claDMDExm6FlrmXNG8NSwbzc3bY6Y/ZGP4l0zOPQ5T4CYZMDFs37gx+CBryUNy5Kta6yl26kijvbYZqsGVu4AylPG/8F+lmnzFqrjxDiTaqhQjVSzwOtaAtUtne04aSywzM/B/w4Cyv3v1pyRdAmLMeMebTxhKfgz1MR5WM2g0NdaiTblsgAd3LaXcsEG73MLfbPEgqHhHZwK+idS1ZY3rQtg/Nyj2URAalbbJBjIvQfziiVK2zpChjK4LgJgN+Mw6KErisJ4EfMW8bmbIOmBrq6bgLtb2JjNsLYmCnJ82iBR17z4kx99zPMrLn/auWgvbyn3jXyd2v1CQYHZuv07oOK/b0s/4DXGe0H0FDN9Bn77jLJ3WAWQeo8KCRklzT9SBgjxvkRtncpa/O5lWtiqxY4D3ds+qy/0xtlHBsKojGFwyJq9Z5XjzRNmSINiWt4rDg:V68YZtChAS85DwDxMuVLRoS2cysPHFFTpGBh2AB9noWq6wqi0jhmtVv2bspSmSHEIKOsJIbEbwlmqsovOgkD31qw3gxZwzzb1lkqU0h7Aawpg7BCY6lU=\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
