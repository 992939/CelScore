//
// Generated by CocoaPods-Keys
// on 09/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1165], CelscoreKeysData[1454], CelscoreKeysData[3076], CelscoreKeysData[1157], CelscoreKeysData[2743], CelscoreKeysData[3215], CelscoreKeysData[1330], CelscoreKeysData[1520], CelscoreKeysData[3304], CelscoreKeysData[2051], CelscoreKeysData[3069], CelscoreKeysData[1559], CelscoreKeysData[1682], CelscoreKeysData[2528], CelscoreKeysData[647], CelscoreKeysData[3269], CelscoreKeysData[1429], CelscoreKeysData[205], CelscoreKeysData[108], CelscoreKeysData[1264], CelscoreKeysData[357], CelscoreKeysData[3273], CelscoreKeysData[2658], CelscoreKeysData[2219], CelscoreKeysData[1281], CelscoreKeysData[2122], CelscoreKeysData[11], CelscoreKeysData[2170], CelscoreKeysData[439], CelscoreKeysData[116], CelscoreKeysData[3021], CelscoreKeysData[2085], CelscoreKeysData[0], CelscoreKeysData[1243], CelscoreKeysData[2826], CelscoreKeysData[71], CelscoreKeysData[465], CelscoreKeysData[2986], CelscoreKeysData[38], CelscoreKeysData[567], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[477], CelscoreKeysData[1696], CelscoreKeysData[3230], CelscoreKeysData[3072], CelscoreKeysData[1421], CelscoreKeysData[2709], CelscoreKeysData[3047], CelscoreKeysData[1920], CelscoreKeysData[2671], CelscoreKeysData[1002], CelscoreKeysData[3137], CelscoreKeysData[1240], CelscoreKeysData[486], CelscoreKeysData[1806], CelscoreKeysData[161], CelscoreKeysData[2401], CelscoreKeysData[1183], CelscoreKeysData[714], CelscoreKeysData[2541], CelscoreKeysData[1497], CelscoreKeysData[2825], CelscoreKeysData[2720], CelscoreKeysData[1265], CelscoreKeysData[1341], CelscoreKeysData[2696], CelscoreKeysData[1388], CelscoreKeysData[2038], CelscoreKeysData[2265], CelscoreKeysData[3233], CelscoreKeysData[1944], CelscoreKeysData[2180], CelscoreKeysData[2586], CelscoreKeysData[1689], CelscoreKeysData[86], CelscoreKeysData[788], CelscoreKeysData[2824], CelscoreKeysData[2093], CelscoreKeysData[3068], CelscoreKeysData[1629], CelscoreKeysData[2794], CelscoreKeysData[220], CelscoreKeysData[1308], CelscoreKeysData[1804], CelscoreKeysData[209], CelscoreKeysData[2342], CelscoreKeysData[1206], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "2ht2NKFZH22A0fFSfxTkCIieullaOKNfD4NYDau+faS8Y9jmDp5roYne+obrXhY65ZgeGswjfzW9IRnRrZA0nc-ICjF4ftAten2L/56jrQR/97GCdvmXY2Q7l59YBzEodsTTNEjYYM/SKJ31qNZ/WxELf1cCf8K4Ydy+eAIZnpQBUrycbDTQMFisT93LRJ25f/TkmciJnCajilU0c1I16/bKBZXk89AT0BIXswOiXf1pouZ4/PMsvWmL4zwCwSrlkOdjQ6BnW+8bVVRXhafcSjMlD1I2Xde74pf9zWJOQc/ozWlLJX4QGdMD1SQPmLxyM9EoYIrlpsTSTxG33eAt1prgkOAOKOYTBZwuWalmyKi4i8Sf0o1Ax96EItOqw9/MZc116f0baAQ445jQP+aOFxWRZHToc6Uy8fGY89eNQATWEfyRO/4OVitMdOComq8dPad7gSvPgrTyTLq+YK/IN7Awr1wlyuiA5fRjWL8zwzmJnh0od9bF/YuTYFHrKsjH2CgB1HoKzfE1ksG9Sgc4a4Zbx0dATHLs5MUwOo3lHhnyst7qjRrWDjtPVCGKSSwuS+JlqlymB83wVMHzC93IEdh3eApd5JlbnTafnJtR1HbVc2hVhmfgs+GjsJOsgzovylD7yvgrj2jJp5xyEnIcVIZqSe7qtky9Z8icbtgW0Pz/xefTVKt7WFLgid5O4fyW50/q6nTnjabmKGqujAKzDKovyFhfHhZWLN4uSPArUNv5VgmmCbop5PdanUb3GNx+xR1yZdOSKOQlFmKX1SQY9BPVVSDOZ/P5itp14SbJ0tgJwqL4Qg3sHm8Gq4g9s1FkqFSRjYY8tJS97Vj+IyAMoJiFzKf9/X3L9eB8bHtiPvgfPQ4gd4k4WhaMuXFvQvTB05T37GVYe2ESEdOni8p0r0sikKJ8ksaKLbAyvnVgwLYT57CjoGvBCFgDFMVO2kEZRnLx3oYDrq5Mmq92G9Cj2vvPfribCscY2+oHCCqSCG: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-NN-XyGzVAOWs9pf6iZuxBbVJ7lIKu5lsPF6G9SYVw88R3c+7zzlp/IYQRC5X3R7jB2Q/5kjekbVu4XMileqww+uvFZ2gFTQ==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
