//
// Generated by CocoaPods-Keys
// on 04/02/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2181], CelscoreKeysData[1309], CelscoreKeysData[1750], CelscoreKeysData[1346], CelscoreKeysData[607], CelscoreKeysData[910], CelscoreKeysData[888], CelscoreKeysData[1222], CelscoreKeysData[971], CelscoreKeysData[1673], CelscoreKeysData[609], CelscoreKeysData[958], CelscoreKeysData[875], CelscoreKeysData[887], CelscoreKeysData[1585], CelscoreKeysData[462], CelscoreKeysData[1315], CelscoreKeysData[261], CelscoreKeysData[1075], CelscoreKeysData[966], CelscoreKeysData[2207], CelscoreKeysData[1396], CelscoreKeysData[565], CelscoreKeysData[1670], CelscoreKeysData[1511], CelscoreKeysData[1842], CelscoreKeysData[1066], CelscoreKeysData[364], CelscoreKeysData[401], CelscoreKeysData[1851], CelscoreKeysData[1394], CelscoreKeysData[745], CelscoreKeysData[1971], CelscoreKeysData[974], CelscoreKeysData[1787], CelscoreKeysData[1807], CelscoreKeysData[1825], CelscoreKeysData[1090], CelscoreKeysData[1004], CelscoreKeysData[1925], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[219], CelscoreKeysData[954], CelscoreKeysData[957], CelscoreKeysData[321], CelscoreKeysData[938], CelscoreKeysData[6], CelscoreKeysData[878], CelscoreKeysData[1650], CelscoreKeysData[2099], CelscoreKeysData[1942], CelscoreKeysData[1279], CelscoreKeysData[1769], CelscoreKeysData[2282], CelscoreKeysData[1735], CelscoreKeysData[1471], CelscoreKeysData[1949], CelscoreKeysData[1880], CelscoreKeysData[1110], CelscoreKeysData[589], CelscoreKeysData[2266], CelscoreKeysData[290], CelscoreKeysData[160], CelscoreKeysData[394], CelscoreKeysData[1142], CelscoreKeysData[164], CelscoreKeysData[393], CelscoreKeysData[1145], CelscoreKeysData[1175], CelscoreKeysData[662], CelscoreKeysData[1203], CelscoreKeysData[270], CelscoreKeysData[1106], CelscoreKeysData[1465], CelscoreKeysData[215], CelscoreKeysData[2046], CelscoreKeysData[314], CelscoreKeysData[37], CelscoreKeysData[1838], CelscoreKeysData[548], CelscoreKeysData[510], CelscoreKeysData[2248], CelscoreKeysData[1819], CelscoreKeysData[1108], CelscoreKeysData[748], CelscoreKeysData[415], CelscoreKeysData[1768], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2298] = "1JE7desUgbsjUK7kRlp0ln4pjLQNr6W+BDuK4cD999RQfjxtMaqNk5TGc4MnBuDflvcElJ5+HZl2CdUhDQ5y7++CqJiRPjK5dumEKEQSA1I4hdyL7WNc8KT64XvlQQsBBbau+lpovplpLCXb4rRVePmBhuP9XKdb9rSz49nCKkjfAWLim1g2z4ZSyJVgnHG8jf1mpkXRNCQIwzxe/kH3DvW-A5GuLfzqrA1NtHa+6DrbDcgLwZUfHqyFTvnP47i6OGl8GlyAT97Ji2aKdmZjOZIiV5k9SrFWAp1UdeT8cRYSbAWJU7rMmRR29I1LbWP2weBKEx70cId1y5lToSkyfrPFyeHnGQ2eWqD8UgHMyVNsJn6Ah6s4w+bzLoCfeYPxJg7iVVd/H4bymHs+9MbUNRQq1OFmns16WvX2hL2ollrNFm5nONqAQgpXmQFUYaGG8GBnz7CXg4/EHqYVg4vTu9L+1ZUe5DK6Hq6zGxHFDi/oPRwHy7FqUzHnPuJ16h0t67cycHCnANa2ZSOl73yeJFgXYaSydS+odt261u6L0MFEN9EdQhpRs9s2VrewJMuRL2xVMoVsbT6wg-5DmxkH7UGw+K4H5yJ77296hatQhA7svVZ7KGvdeKtbkwtFhvc3CRMvCSDdRIMXfdPBsV8ACK-pcC7HBW9gJI72p1Ch5bmy61NAwum368nmbV98pdZ0JBPMArjXafbe90tBSe0T86rrekoHfuxca8Mwp+Sz8dQt19KJVsr43zk2fxoHxEi5fTiWnJrGCycL4DpR3b9VnrexzWbSQfkDqfQdvKaihC0WR0n4tYF+aPLmb7qcH+3zy+A4F2y+itd6iJHqX9Q3AgIpiijvk3bmP52/LcN19NEAQntHkLxLNtc907RYGxW6sTkgzDW+bImX7J6Vm4UT7HHVdQCK2Q4lLbAAGuFRMMap+XhHQ1J6qyOcPdsGY-iOHCbjPkyTfRTbTYTiiixZIQatPe1x0uZGZjQ8ycAuwxgju6b2dPOzCY0KogzVvC8SwcS+dfHP+ORaUzrLQnK0VTR0kWTRXfN0/fOPydvZkxAP1EKEbV89y+Fs0OwIEYsbV75k7XVA9mAbeD4FNS8Q2fb9qNSM0EzRrRQnmk9S42fRN8OGcUFzkv-UL5fBySne5URVbFqANMI0FZPBdL1fTor9kknIvjNP857KoImXFcX/fjfY2Q69dIOvkXdNlTHqcYPVOyYChA1xYrxYqS9Gb/ftPH4y+dKB3WrSVMGTWyPQ9288yL+NCozEMn9sgD2dNAlHRVYCKthCc4nbU93sSlDCFHRpTXhWZ7gfirlhwuw4a/fLnlMW0/6TqE4+LXHuxVEhilUOVFV5/hsCnv0MFhv7kryMBjOo5Q30nCxOTfP1HA4GFSnJ8xIeWlFz4c/6XVJ2LtRNDhl6iKkEocVsQktmgRFHS32OzzlS+tJizJdOtuLbduu/iCemQf15tKqdZl3dNwWq11F9gvppGgL9R4WUiiGz7DTRhWKygvCO9bqqXA28Brec+E0k//5RFoCr4hu4kJMKjw18FQClXnuIWweHDvPDKeNjwfyJlnaYh0yQrA1q6rjrJSfRI73Avux28Y78A6r5N+PdvwTCny5u/XwN1v23hNuYSV6IySet51SMJXNoyr-eaLL+sUNHrqVa8FYL4f8l0smpGoi5Y5mip2jXX9tc+WFJ2A71ZuaNbp5kkRLVCIPtgK0uEd6D6dZ75UiORJBdLaLivN/QFQdrvBwd9K/YFaMLWSkz3JL9c0abBjGUMbUHADDpQic9mOKa9ZK5NnN4slk6O54jg/x5BcADNDIaqZi6HKfua9WicTeJBObYeKeiWogaj+DYeyNNB5CUYVH74x+oPu1lbw7kE0VBeC6PdMkkxgl5bpEuiKh/yWFk6d+02+Mz7DTalmHOpEtyUPyUEp1kxLwNpU4A7V:x7lwwReymnnkjb9utLVTNRsSlBJ029/iNLJjF1EgT6qwRuRugzNIBfpAh1inR4RRYF/UNJ5f67tjH1LwO/hp31Io5ZhnzyH1qg5Ukjd9rgJVo97XMWlHNr5NkUjyBBc9BxSGw/Xxs21OE6RTSqpVccPu+7AS15bUckc6CGMhHaII5pDrJ3qJeTxUQvlA/DX8DiDKcvj4C4Xn6krjsBgtS8NhYrxFMYjwgbYhSgSjmUfLOA07HW+3c8YBAkBtvOncLHIAEusGaeCfBMthE9e8VPmHTFEObDPNZkXp5tyWRXQXws42N8cOcZ2B7C31BTKocCv7gUtokpwpl3piVLx8+xHqxrXoRFQ==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
