//
// Generated by CocoaPods-Keys
// on 08/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1380], CelscoreKeysData[963], CelscoreKeysData[2636], CelscoreKeysData[3014], CelscoreKeysData[3121], CelscoreKeysData[1771], CelscoreKeysData[1978], CelscoreKeysData[886], CelscoreKeysData[2100], CelscoreKeysData[91], CelscoreKeysData[820], CelscoreKeysData[1150], CelscoreKeysData[1554], CelscoreKeysData[227], CelscoreKeysData[1552], CelscoreKeysData[500], CelscoreKeysData[2200], CelscoreKeysData[1905], CelscoreKeysData[2184], CelscoreKeysData[1122], CelscoreKeysData[1291], CelscoreKeysData[1806], CelscoreKeysData[1403], CelscoreKeysData[2609], CelscoreKeysData[2537], CelscoreKeysData[3129], CelscoreKeysData[3092], CelscoreKeysData[1209], CelscoreKeysData[2508], CelscoreKeysData[2050], CelscoreKeysData[2388], CelscoreKeysData[3091], CelscoreKeysData[3315], CelscoreKeysData[927], CelscoreKeysData[2939], CelscoreKeysData[1251], CelscoreKeysData[921], CelscoreKeysData[2587], CelscoreKeysData[1884], CelscoreKeysData[962], CelscoreKeysData[1480], CelscoreKeysData[208], CelscoreKeysData[1354], CelscoreKeysData[2102], CelscoreKeysData[1618], CelscoreKeysData[855], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[40], CelscoreKeysData[1989], CelscoreKeysData[1682], CelscoreKeysData[1964], CelscoreKeysData[908], CelscoreKeysData[2676], CelscoreKeysData[1340], CelscoreKeysData[1800], CelscoreKeysData[876], CelscoreKeysData[3101], CelscoreKeysData[1210], CelscoreKeysData[2747], CelscoreKeysData[1030], CelscoreKeysData[3146], CelscoreKeysData[3007], CelscoreKeysData[1738], CelscoreKeysData[3286], CelscoreKeysData[2650], CelscoreKeysData[1724], CelscoreKeysData[2113], CelscoreKeysData[2346], CelscoreKeysData[2463], CelscoreKeysData[2186], CelscoreKeysData[3113], CelscoreKeysData[8], CelscoreKeysData[475], CelscoreKeysData[1559], CelscoreKeysData[1279], CelscoreKeysData[3232], CelscoreKeysData[2408], CelscoreKeysData[2208], CelscoreKeysData[2219], CelscoreKeysData[406], CelscoreKeysData[1083], CelscoreKeysData[2729], CelscoreKeysData[2331], CelscoreKeysData[980], CelscoreKeysData[1111], CelscoreKeysData[27], CelscoreKeysData[223], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "R916AapNO5sKc7GMqh3eXS1lEsRuZXqon6gdjHap0s2OcQkyCSooUdQPTZLJjGwbj9MlReSAeHdBidRCFh4hhAdXURE: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-OPYXstvhXYWyHFtgF2XUZ/q+57-s9stzQ60X4qw+ltQwKi0EkSY/1lGhsONaAe23666RaslczeRk4+np3IKfv3H/CAa8afOW0c30ALXUr9ZFTFgUs5pVNUX9EJpCtDgV+FX1IO6VaiA90fjjlGdcaqxZwlX6nAIORxcuk7ETpw2Lf626HDti+9AJZqPuWY4UmPq0l/c3zmdg1uSwF7lh5EAj7bkM4Z37K2xPNTvV9QcbhmMNFKCqrVgop/BOQDNrzNg932lsZ6f2x+T9BDr7oH9Pv5/BaeRHbBcfDx9C+Q2V1de3ruVA9cLC58Sc4WTeHbdlQX5K19O/Glbz2KbOIMcp1O4M250MZSs7wiUmsKbUpSmkYS0263GsWyN5h932h3lzs8FAp/xxZrHATY7we2J4E5LyVv8aE7Ryi3xnXXgKr8QRjBExZRBb5RgDSXxCqTepo8V3THAh/42OguofmwjSO6eXf+i4+85yywj/BC1sQGI5BZbx8TD8FVOUkXuaDrJMGr24epvCDcxIx8skp7RT9tps5dhQCbgJDCMXwRWGzRqTocRHiyFnwg8T72NS5/T5soDF3hPRXUWaAZ2P2Sb4zExGtE94NUR/I6G62JTzovMlFLiQL+RiJB/4I9tTWV/ypVvm6O0fxeTXxK+6FYDw/OC8htTzgx5zfVMO05azDHCEmHx4UqqVw5aEUdv9cfMj2IN/wqzQ==\\\"";

- (NSString *)description
{
  return [@{
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
            @"kAPIKey": self.kAPIKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
