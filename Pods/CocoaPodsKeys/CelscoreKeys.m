//
// Generated by CocoaPods-Keys
// on 14/07/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[839], CelscoreKeysData[531], CelscoreKeysData[2008], CelscoreKeysData[1150], CelscoreKeysData[806], CelscoreKeysData[1730], CelscoreKeysData[218], CelscoreKeysData[478], CelscoreKeysData[2234], CelscoreKeysData[1282], CelscoreKeysData[1965], CelscoreKeysData[714], CelscoreKeysData[1042], CelscoreKeysData[1822], CelscoreKeysData[1521], CelscoreKeysData[203], CelscoreKeysData[1585], CelscoreKeysData[196], CelscoreKeysData[294], CelscoreKeysData[2062], CelscoreKeysData[1182], CelscoreKeysData[2043], CelscoreKeysData[30], CelscoreKeysData[376], CelscoreKeysData[511], CelscoreKeysData[2154], CelscoreKeysData[618], CelscoreKeysData[1871], CelscoreKeysData[322], CelscoreKeysData[355], CelscoreKeysData[1838], CelscoreKeysData[849], CelscoreKeysData[1300], CelscoreKeysData[1101], CelscoreKeysData[721], CelscoreKeysData[1818], CelscoreKeysData[281], CelscoreKeysData[571], CelscoreKeysData[1970], CelscoreKeysData[190], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[942], CelscoreKeysData[545], CelscoreKeysData[1576], CelscoreKeysData[351], CelscoreKeysData[650], CelscoreKeysData[1278], CelscoreKeysData[1467], CelscoreKeysData[2], CelscoreKeysData[1462], CelscoreKeysData[1823], CelscoreKeysData[1749], CelscoreKeysData[150], CelscoreKeysData[1292], CelscoreKeysData[1955], CelscoreKeysData[1046], CelscoreKeysData[1090], CelscoreKeysData[1397], CelscoreKeysData[607], CelscoreKeysData[726], CelscoreKeysData[1993], CelscoreKeysData[1221], CelscoreKeysData[461], CelscoreKeysData[859], CelscoreKeysData[2073], CelscoreKeysData[2109], CelscoreKeysData[815], CelscoreKeysData[270], CelscoreKeysData[1247], CelscoreKeysData[400], CelscoreKeysData[659], CelscoreKeysData[32], CelscoreKeysData[172], CelscoreKeysData[1530], CelscoreKeysData[542], CelscoreKeysData[192], CelscoreKeysData[350], CelscoreKeysData[2218], CelscoreKeysData[120], CelscoreKeysData[1422], CelscoreKeysData[1331], CelscoreKeysData[964], CelscoreKeysData[85], CelscoreKeysData[1008], CelscoreKeysData[2246], CelscoreKeysData[644], CelscoreKeysData[1874], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2298] = "Jd-RrQ1LkyxudiAZCmYq5y/guRRe0094ag2S0xPZ2SgYFaIiw8hpaOiaIvaS02Fr9ohYaJw9Fx+sPtu/GtiF9aFXcygYKXs7A2b+hBHpIiuyYDaSJo9dQvI/bK14OhlQnMd8QmELLVthTOr1SRFGMe0+dQ9sREptUhwSbYE0dNer8Cdb7KHvMUt5CvbyBOPM98LSl6VbVKjYtzQxWQ1Aq0TpEO0jnKR8khxhZ2nncXhPtgPpIBwdoPA9jg+kpP2Un7xoNwLQT98apq5B/WU81wG80KiDjRJSAP6z6d9eH4TDTq+W8z+CNr6vyJXdZ9s7hLMF+w3c4FU/9gZK5fM6SBRFlhATzh1eiOLYZR8mBs9P6Lv6PIkDf8Qp8vlm2jySX7A69lwdrHpWjupK-g53iISuJJ6U008agWtY9xP/hpc+YCXzqnWVY7hOO44qAzHOqFRRdB2z5LQBw9kgGXOBVytYVUb+YvYPxIUjjVspXzixrne01ZzwxZN+OB7PLOFOTE7uRaXaoUkfj79dqJfXQ+emHJEp7W-WhsZyQpXIUBl2+BB+pJnTnpkbcqg5eketeYD9KkDKfNgd4UXs63/10GCxkk1nwC6b4K6L4fJ2PwAPnKa8PqKUlrPH3C/TBjEPIUDf6AMOYbaKzZGIhla9HH6e62CgascNb+a5XPeEP6PIfXw79c1kiy/XVUy9VmGTaiBG5VCvFGisVc/HW9YJ2m-76cC0eIG0+NyZd2xJWBow7RNDZ4ndzyj4prjjCLQYRnRgO/L2+GlVKD5/gPkZOskfCtuKNfvIftnidq7LCHjuELt4lB6DXVsLTBC9BowVgdE0qB801oIIhbMY8dolDCDjjCebyNuoazmFmiyqDXXkjQtGVGQmmhdvVkxeykheUWxWUXQbBVIC5CxqyJLkYAjDAofXQwkFVY2c+f6xX4H1GbugQCzbNHRJKRLvjZ5tqeUG8e1o1hFY52gctgzhDJTBiu009OywD5Yb6JccgO34m+kc2nCP5LFSNF6OKMtRi5Sumd82oKbq+UnWdZAcgqdzMktHa51vPvRNZnIVidtjaQd+r3aRANpcwEdUbaEgr8e65GyiUON1GTcAcBwCOVjAxJqrzXF+Iaik9X+gYGdKhFmLcbPo2Ig3XPlkfhEMsNEwVD4nQiTeIju+WSOTE+Vp2uw0ENaYSZPI7dBZEGtv1gQnVgbdqGJJlETOwnU/sCOlF1H0lRhJretDd3W0Lucr/NMyfGx984WZpF16GUqwuPY60iWlssKrmkwu/ms6TJsuBe25VV548vG9M5Cx2WnsNYJ2WvtPFaCSsoINz0gyctP/9WJ0KsCp9On0YmhzA5rNlGAotqlWWr0E714Vt8mW2gY/SIlHjXOgoIK55fby9kT6BiSs3ewuB7AZjRTIKNn+zX0mxtubzW1ZPxl8+udhbXUFwG9ezgyFJ/G1EpW3Tq22LiJaFb1Vm3utXcQpmZYU2EEawgBwEAkyMvmywdo0ZQZBrsHu5Y1AuLjzD+DcppUYCr90MRwQ1cffU4lsuhQwQ/Km5jfPGqqBZvRsdW6VO6MGxRkZr12lN31u-qPQJ8SkWfwV93YH84Srpcue26m5+Fa3WwMZKIS4t9QaH3wH1+jh2XJ5ufntPy7qYIG4pQvqexyd8gwtz1qdO23jcvTSWdnrSTYzJb+Z0jp8Ucapg6JlEk3aa/caLtSklSpFy5UW0BrQinWy4YLqtco3NA6jRHADM72AJ5Bw936A3dQyAfCdThjNytI5HO9QzFvjez2qRHvrQwOGbVygY390qxhfkN6cjMFtHy3SeppNo8v7bQjf6/9:K/RdMHh5EVDbwcn+wikGuqEvtuf9lFwjJkMK6JMshujF8UpJZfcDKHCQwQDuPKxwvbrptng3t65gvvX1X+PyI/FdO/iajybg0GzB/fDsCXO413hG77WXUlrd6f0fWbc7sgDdgYhedjcE327pLauWzDVy/morRiGCjTpsvNTAr7s94mGjWuBOZahcwbCqv4rOhGLK0IdzUVraaqDg07attqaehMU8K8Hv7mJHtNsW74Gy5Iy8zj0U6d0mL-1J3wEXzjGnUcbGfLLRFVRMX/DjkqamIlz4V4EawCh+dAdhLeVCdJ6qfD2FonHSUsf/Db99/otDa/GJ+mefeeyJxjZGH6lhfWRitBmKqQdnS06c0sv3Gra8fTDLJvCUAAZK94daHJeXpo0q3sc2jM/9ueSTE4IrFNb6CDokGOtHtx1R0CIkr55x4v+6dTJSXD0CPadk1lkmdo6o9PGovD8+EVGj9w==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
