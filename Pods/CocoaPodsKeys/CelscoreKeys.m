//
// Generated by CocoaPods-Keys
// on 09/10/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[599], CelscoreKeysData[1590], CelscoreKeysData[963], CelscoreKeysData[645], CelscoreKeysData[1980], CelscoreKeysData[2128], CelscoreKeysData[1806], CelscoreKeysData[435], CelscoreKeysData[616], CelscoreKeysData[2564], CelscoreKeysData[2691], CelscoreKeysData[890], CelscoreKeysData[357], CelscoreKeysData[1118], CelscoreKeysData[2535], CelscoreKeysData[1432], CelscoreKeysData[1830], CelscoreKeysData[102], CelscoreKeysData[272], CelscoreKeysData[377], CelscoreKeysData[1947], CelscoreKeysData[2298], CelscoreKeysData[2037], CelscoreKeysData[104], CelscoreKeysData[2878], CelscoreKeysData[3018], CelscoreKeysData[1608], CelscoreKeysData[2665], CelscoreKeysData[1571], CelscoreKeysData[138], CelscoreKeysData[2420], CelscoreKeysData[1730], CelscoreKeysData[1359], CelscoreKeysData[1932], CelscoreKeysData[304], CelscoreKeysData[1148], CelscoreKeysData[1008], CelscoreKeysData[665], CelscoreKeysData[2221], CelscoreKeysData[1819], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1409], CelscoreKeysData[2595], CelscoreKeysData[1424], CelscoreKeysData[2853], CelscoreKeysData[1468], CelscoreKeysData[314], CelscoreKeysData[1178], CelscoreKeysData[2470], CelscoreKeysData[1439], CelscoreKeysData[2272], CelscoreKeysData[2829], CelscoreKeysData[2164], CelscoreKeysData[1814], CelscoreKeysData[131], CelscoreKeysData[2806], CelscoreKeysData[1639], CelscoreKeysData[6], CelscoreKeysData[1402], CelscoreKeysData[302], CelscoreKeysData[1586], CelscoreKeysData[621], CelscoreKeysData[1864], CelscoreKeysData[1706], CelscoreKeysData[249], CelscoreKeysData[1120], CelscoreKeysData[2950], CelscoreKeysData[2010], CelscoreKeysData[63], CelscoreKeysData[507], CelscoreKeysData[393], CelscoreKeysData[731], CelscoreKeysData[1997], CelscoreKeysData[2090], CelscoreKeysData[1425], CelscoreKeysData[2522], CelscoreKeysData[1156], CelscoreKeysData[2836], CelscoreKeysData[1881], CelscoreKeysData[295], CelscoreKeysData[2345], CelscoreKeysData[428], CelscoreKeysData[846], CelscoreKeysData[1164], CelscoreKeysData[321], CelscoreKeysData[491], CelscoreKeysData[1024], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "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:f3eU1OPBnCJjLhdW9PiOUi2qU8BoveIcASQ0i6JRS2ysUllChbJ0aQ1oLChQY/m2ywslds8H07qo941tmRS71mpkOZ+GvWB9xBxV6ILSC42c45HEFy+Z9Rc94ABLT4pmILdzNKzwqAQPLn16smUnnnDXua1PmmW8ApWSUZeTfJJJi/wybmmKhFms7VCTS5R2fRaPs-3c3LdGpKyqy9q9tf7cSD3YVaYHqkESU+ps8L7VoKyO1wRkEltHI9yfst8KAbkFCsrZACywQ0IzakGhI3oRLnnQTOiJwEFsZj7ssZujlNRC8i867gmVTFyTLKfr65sfM1ZbaNufQTixanGBJvsbZhbbtT0bn3FwRHpwcvKOiFavYiJ1YcazwtcMIVM8pKvGqpR4JjlMD1ZcVwY6NC9JhLfkO9zXrx2fOeJDVFVChu0tLIC+Cq9586l4I7TPOxx6XvRYkO8y0lSfANHJRdDTUO71svMY4DaZdZkccRJeXNFealNgevazN5z9kBiGFxAAPS5TjmdCjZrNZOMwtdouYcy2QCm7J+qhtBO1pJUtdP2HNqzct3OFAgAJHf3vj0DgexWyiD2onHOYvHZjc9KH9vf03O9+G5qrOrRxrSkxhsMNgIVNjQeu3rVPjY9QyqzXM9n0FT3pLuS82E74iNtk4dgPGGz1SHPlA4clfWN1rA1I1R+MC+WQA2FLq4BSE6Mp+IvMYH24dUnfNkiE9NyX0ZPxMhQyLhyEPV1T5e7Z7Sbkky0h/0vAiqutAwySS8YFT1WtongTrb9PfkTl+pEipG67L3/mWqcuCbIOdg+9b4e2VrZsFc2\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
