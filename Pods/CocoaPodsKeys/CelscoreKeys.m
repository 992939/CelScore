//
// Generated by CocoaPods-Keys
// on 14/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[458], CelscoreKeysData[2741], CelscoreKeysData[1254], CelscoreKeysData[251], CelscoreKeysData[2687], CelscoreKeysData[401], CelscoreKeysData[2672], CelscoreKeysData[1046], CelscoreKeysData[1538], CelscoreKeysData[2494], CelscoreKeysData[385], CelscoreKeysData[3082], CelscoreKeysData[686], CelscoreKeysData[2419], CelscoreKeysData[1321], CelscoreKeysData[3221], CelscoreKeysData[1308], CelscoreKeysData[1058], CelscoreKeysData[1552], CelscoreKeysData[365], CelscoreKeysData[2940], CelscoreKeysData[2616], CelscoreKeysData[1488], CelscoreKeysData[751], CelscoreKeysData[2980], CelscoreKeysData[2352], CelscoreKeysData[2854], CelscoreKeysData[2689], CelscoreKeysData[1049], CelscoreKeysData[3068], CelscoreKeysData[345], CelscoreKeysData[195], CelscoreKeysData[2466], CelscoreKeysData[1396], CelscoreKeysData[3118], CelscoreKeysData[1109], CelscoreKeysData[2723], CelscoreKeysData[2991], CelscoreKeysData[1102], CelscoreKeysData[2133], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[3216], CelscoreKeysData[1775], CelscoreKeysData[974], CelscoreKeysData[2121], CelscoreKeysData[373], CelscoreKeysData[2580], CelscoreKeysData[1466], CelscoreKeysData[1662], CelscoreKeysData[2053], CelscoreKeysData[1388], CelscoreKeysData[1469], CelscoreKeysData[2348], CelscoreKeysData[3242], CelscoreKeysData[2644], CelscoreKeysData[2955], CelscoreKeysData[2691], CelscoreKeysData[1161], CelscoreKeysData[2414], CelscoreKeysData[2569], CelscoreKeysData[1205], CelscoreKeysData[860], CelscoreKeysData[1724], CelscoreKeysData[1935], CelscoreKeysData[70], CelscoreKeysData[536], CelscoreKeysData[1298], CelscoreKeysData[2498], CelscoreKeysData[1545], CelscoreKeysData[2719], CelscoreKeysData[1877], CelscoreKeysData[2181], CelscoreKeysData[1904], CelscoreKeysData[2668], CelscoreKeysData[60], CelscoreKeysData[1525], CelscoreKeysData[3087], CelscoreKeysData[3055], CelscoreKeysData[1836], CelscoreKeysData[1311], CelscoreKeysData[1051], CelscoreKeysData[2975], CelscoreKeysData[2596], CelscoreKeysData[40], CelscoreKeysData[1174], CelscoreKeysData[1796], CelscoreKeysData[2496], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "xPdLgRsykcjOF83Pe7wS45ALBXndW+kzzcBbZT+h2ZxpWWrA//lAFlHNIOER-qBbchQSkt-GE6frI/9G8SCfUz6xu6FMDnbq0hDD6KnZiE0+jh+zyXi7cMrBwKiGSx0fa9XrrU8DlA09mxjiCTkS65GEjYnCNdl6DIxJO17HnMGO7124M4qD68DOdIlWjRebc8Dd3ycCaBvbY3n2g5NQ2Wsc7o0aKQxzQAwP2SimIx/VRk0kMsOwZsBFL6WE5/47SlYN51SpzangMF2q4VMA/hc4RKagKbMbIcRMMD06N0pq4MQXTEwpxc6X2zn46eKko/nL94qnQ0QHsK6KooLoFGB5snWZLT5ZWkEg7uwXd5s9Syx/u0MJwapi91nu8GNEv2DRFWISyz9/KoMg56dmA5C8h72ZKsZ2W1Jg+18RxnfJRi0FP2FIyC5pO/JjYgTDjcaCKQnZLI0Xm1DkSCosQJuMjg+42mpm5skV3QTsefiSIhCeZle/gGgLRmncsia04iXr+WgubCYdIsOV9gD1r0664RvBI31Rud1GwNi6IfOZ4WV+l3m70yguadRU4AtQUeBciqwaAD7CaM4GQkXuW97GJH/D4DZH/FPo02hqsNN/47T+QIiw8d0oJE3YS9RHaCD4ymdAlZRhcgcjxLRdm+s99WRdytN2AzRIl2HC53mk/aA3a6pGFEycLsTX1zhaRD9bMoKL4ZHBTXNmHo4kznNbnHzPcg8PJALEYW6EiyRiKGb8mQ+pFZ709NH/XHuOXLRFMqbiyJ/cm0kmVaJcR6W4LUdUx4LqqHkK8cUyHzZaYh20497Ti2RE8Np51L119cE5hWD7VsAaQLybNP+I7ZWf6LyC1mze49q81W0OcHd8QgGODrfkdw4T0La/4aey8X4lQnXTmiI/0Ha7aCwrSMinKrK0M4/rm8gIKis/gP6tjm8vyGtdnrlBqiFDf0MbleDMbEGtNTXUe8-LX6yx7mWJWZKwTPJxXDFyB3yrLXf+pVVJLY/yTHpr6LJkJqteK6vXM0BAtgLJXF6RmgXhVZYuTMh0PFG8WDlJhrXl5sIFK0dEBGR7qxuishgsN3aOc0pP4YKz7c+I/KuNytMEkjIVfgbryJWHBjCZcfpqKwll2e1CZw+ddr+ONtUGdZBT/DZh40iN5eT9QEi64JLVRl1P/pku/lfuAIKSsh31MdP2UyR1/Gszq7sziM/TnDgOCiriK8V3aUTZGJa/WQV5TPxrdwOkBl9AJlA/ytwnDb977RULtdeuGJ4laVjLdLipAcG29ODq56u0Ewzt/64FtbceE/pofBV1rAtDnYXSBrlSJwcVCBanueB4loO/H053emMvKC5sAQxVQ5L92wVU/EizgXQd2scHhnN0QOmhNxP0:HXsDFMfTT1sIGO0tjwKR55rggXBSIBS7g4qXkcAyj2MdvZTXguKL+kTnZl75hzUg6KM1GyfYqH154tFidn6c0GrMSGLuDFiLgib90920ZpXmK9vO80iRqe2EBQt9t+LgaQJBYP309pU4GQ6isWrqhbJ8vnp999rZq919OCB7NK24r8Xuga9no85JKBu9dgpoAB4ZFPMm0lnTcFQT8OjzkUJp9cln7ZTzDfPGxgmPD483U4m4DRHfPpmNY8Oykdf8Y3KJTJ4in9aZlr0JU-hYXL2PgVSlccNJNbKdMuUOEELzIp70k/fWlUxF42SIP/Ms5JyiyOQ4Gkrvxeh92blW36bJdftUQnzogkJX+E4PP3Ucdw5KxHd0bfpD06R5HosdX5sVkC7RIB8pfVqwwDp3Z0X6C3SteLqWuQ8bgxvNkgn6AjrOtgN5jiM/JP4BSAWbZEHV2xUtVBMJcVl/WWc1ia59jBAoJ8YUvDQw76Sj9S4FNcLmBByGkGBC2aRiuQGgnBz8kI1ieqlR8ejF++NFQlDBPHonY6pRtNbTZyn7mNaTDVgX0BkG53W7vCeogDam2xf/8SEbSWJdVOh9ngXX92ybo0bmLABxCmdBlGidA4ipinjcotLlJxY/zUstlsOzbAbjq+LKd0/ww4r0fZ6AkcUK1Jaf/66Qx67m3PwtOSfeBDeaIlinHWaWedF4Ci8HqgWA3uHq5mZUR0tgrXnJAF6Kd0tTeAXZ6JnZIDbOP77IlzgKwEi2XUgZg9MaYlTypOfJr3BMXCVL0ewCh7/3SVBCasSy59rUc5/TPqm4PrCM6VPor2VY4jzpI50KoCV9eCWNJl+HVd+JCeHM3PdNPhi2q4UyI/RWjNJmG81PHOVAmBCH/yYRe9GBYNxcVIxmdl4SpWBYiuHJpZCEXcjblPbnQszBNNCnsL7KNDqJKOuiF4hvsGqUFc6GhKNXXPF0oG8eEIMDITRpa2n9JkwPe2cSJBE7GANaSuSFQ2fVRFaPUiqu5spTvQIixdz9l5qmybW24Q9edUpDxxpqGNkyI0dcTHfI03dXmdErxMRfVErEzmtyGHBNm2+upt35hx5bAyiVDdueu4s5k2WVFsccr5aB/wCWAM59zTAH9AuHPi8b894B3Np5/+wnzkT12PGeaiqJqjGcp0Xljj5/e90x9RMEiZ5y-r+WrtBPYhDs4OmVYrkOwadggXFamSne4ieYG2Ua9MePpib8gPDzLljNUGDn0IfbgcIktuW4c8tdzQzwpzNmB6Qp2aosiq+0jodf6Pu0qTkJstgpzmc9nd76JbeD0Uj8ktXJLXKXDVvEZ2YYxmcpUt-dfLKgqt1uGyvQNdFiQflcXdytZnabxlfhygwV24kfrNgqI+/yEuAlnuHHHhSzhadbFlEt48rgPCBT3xxf0OM7KSiYMpJHGbHxFkPN/fjIHXxcC4cR9Hvkoy9HIXIQkFW/Qw5CXAn4suV7EU3Hh/3ioAQ3WtL/yONltbeSI7o9xMJCNs4x9qUlozKT+McEVZVazDVCvS3rQCTjRhoN52n4VBOVRIZa6aX8bx1rjZNPmmd7BMWVi7FkT9VZN0tAVe8/GI5O2Ev8gEoCGp5Kz38e4iRvqXIX+X99TBePOCVvfdGN4XqTTl2r78hkLXvrgIEEKx+0x+o4kyqnKgcuBO47Aoq3+z3YDqLYgB/YJwgljiGzzR1WOewYl1hh9/54eNmighogXbO2SRUij9Fn45/PvgkYbryEY7i9zuphbG8DUbIq4/2bD/bmNRAsKHUIzKp/DleBUZVBYh58ldiBTK1a+ZQbxxQjxtjU+kIUXMoHBb3+ZTpuGWe9YGhGqItzHmQmtaXVB0llh8VrXiq+qLINROUve6H6xMzqYQecBgu0H9A5XNosrCyRQN/uK76Boy9/zq3vn5pa+i385dThWJQHovT1r1UwA==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
