//
// Generated by CocoaPods-Keys
// on 24/12/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[84], CelscoreKeysData[645], CelscoreKeysData[1501], CelscoreKeysData[1996], CelscoreKeysData[539], CelscoreKeysData[703], CelscoreKeysData[465], CelscoreKeysData[2078], CelscoreKeysData[750], CelscoreKeysData[1608], CelscoreKeysData[82], CelscoreKeysData[1604], CelscoreKeysData[1798], CelscoreKeysData[1909], CelscoreKeysData[143], CelscoreKeysData[242], CelscoreKeysData[1250], CelscoreKeysData[2156], CelscoreKeysData[1015], CelscoreKeysData[1721], CelscoreKeysData[437], CelscoreKeysData[151], CelscoreKeysData[1890], CelscoreKeysData[1463], CelscoreKeysData[969], CelscoreKeysData[1851], CelscoreKeysData[627], CelscoreKeysData[51], CelscoreKeysData[1692], CelscoreKeysData[1769], CelscoreKeysData[281], CelscoreKeysData[896], CelscoreKeysData[376], CelscoreKeysData[494], CelscoreKeysData[1209], CelscoreKeysData[1749], CelscoreKeysData[1764], CelscoreKeysData[841], CelscoreKeysData[101], CelscoreKeysData[996], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1844], CelscoreKeysData[2017], CelscoreKeysData[532], CelscoreKeysData[762], CelscoreKeysData[1980], CelscoreKeysData[1722], CelscoreKeysData[1097], CelscoreKeysData[1687], CelscoreKeysData[355], CelscoreKeysData[590], CelscoreKeysData[1295], CelscoreKeysData[2111], CelscoreKeysData[878], CelscoreKeysData[1921], CelscoreKeysData[1146], CelscoreKeysData[2157], CelscoreKeysData[105], CelscoreKeysData[1473], CelscoreKeysData[1647], CelscoreKeysData[168], CelscoreKeysData[1948], CelscoreKeysData[2148], CelscoreKeysData[154], CelscoreKeysData[1831], CelscoreKeysData[1497], CelscoreKeysData[692], CelscoreKeysData[1415], CelscoreKeysData[772], CelscoreKeysData[2132], CelscoreKeysData[1026], CelscoreKeysData[2112], CelscoreKeysData[549], CelscoreKeysData[617], CelscoreKeysData[149], CelscoreKeysData[499], CelscoreKeysData[960], CelscoreKeysData[1953], CelscoreKeysData[1399], CelscoreKeysData[779], CelscoreKeysData[245], CelscoreKeysData[1346], CelscoreKeysData[1567], CelscoreKeysData[2216], CelscoreKeysData[1406], CelscoreKeysData[144], CelscoreKeysData[2133], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2298] = "DVdAZdoCRil+oURaQf/iYD6aaFNM0ArD1hc6nGi7p13dTCytTQtJlPmJOnsn+Z15s59hH26NVRzjhlFK4W2901FrccUgxpseDUUHzuEBkeLqdgIbHGH18OUJ3XjxAqW42ludPsgebxteT1Wr6rJOP-O8olbhoNxwKkNDvZUL7mL4EDW0wN+0H6L+Bx+E9HJyM1JFlGPkKsNXSYpEjQUxf5t8c8DtYnzhTF0n4UQYrG/NWv04vsYp90Bw8RR1hfn0KSYRQ73Kg5+njAw2xXUVfpKw2nXkJUKhX6IBWuSy6Ms7y7zeC8Uo8/Q637ZvkqZceWFMVOmWQs50x+Ra+04pE28zGSAnvO4yfwK1cLZ0pNPFZ+8LWtvEXrSu2Q6UuXG90Arnt5Xu/u3cb7Xrvlu2ZQTdH2ZWETj850uHYDTF/D4GdK+4eAPMxa0Y8pLpdS73Lu76Q2ZURGR2KVAAj0L5G+cZ/ktoSY6GZbRSZheSi5DxwpTaXXe9mThagNqdT/7j2cX340iiaVotCi8aLVj/-CFel7g7IQ/ljuVlY88YDrlScGEgbaXr5FOjNR0UJV58n0HAEUVmPBOm6c:EDNbORshnt9g0xOuDQGRHIfvsNfzd/vRAWXHACQhLoBBpf55kqmZ25XsWj6IMwYdH2Fh/wevXO3WtFRPp2XXWbpW9bi9/ATJ4oaFt42jK/kV5zkV6t2IDJQoQgNxu7oXxPaT6FJ6UHq7/poVAmKAfPXXw6eJ+xobNDs5Nb+2vkdezkhzaAtAL93p5+101kccQ2YVWtYRnoh1IpAHeOMBr4NtUeFsRAAqTR/Fsi2McW8XMNgtp45GyN/Hwx5GBbpCCdKobOSKPDw8WAPwKscYjAheDk8DTwd8ot3e2IuS/tveTCkOSd3v/zdm3erY+7vhys47yQbCZv7PR7LY9LP0Fi7WEbcCgXajA90EsD9aoBMFTuOPs1RE364sUUO556F05KdqW1iDZPTkW735P75S6P1mcLwAbcQ0mQ69nTR69LA5INnoxlD9EZYB2UJohq878fYWHt7kBWvz4K6PYsNjd14NGWOJ8+aGJvoF6guzr/B7qDyZkGQQ50iT+5tzMaq2f7VvT0DhLvBdqE8nOG6eMPCV+nX1G17FTfRCNHeXHNkdNjQj/FNiN1DRTinG+D9rcCauhm7tQRjNOu+5dEuamGpZwdrcm/qbhCUr/0F2Q79dhtQqtgyt3SjV15Zm7av1WxRmkw5blR2G4n0vdfXfUuLKKxocs2bxlkm+Ks2uZQEiFjHEuc8vzvzWCxikaaBUdccGNyNhgNaQ6hx2iaTaxNz8bvKE7fafC6Ga5Uue++JyBtm/O0/80zRpYBnsTqDyfvQYh6D12f3p9RCbrr1UhFNbi1azuvoVXHUDytnvbs3F0Th1vHgnB4FH5VpVDY/O90T9bQxRyshvX3Y2DINr018xV1ZpGOAueD0aSObk8tGLmZ0/zBbDr/9YHiqTz2qLQCGpysgrKP4Vw5wb4+nUXzuoQnw3k7JJg9gp2o/Y18KHGBnWIHFX6E/QCGQRiaFaxgUJv0q3QsskiOnuaXl1xreGqgw5Cl3vXCVrzG8ISkKaAiEmwwRxbi4AosZr2KULxILu50afinnRz2w3i1H7W9J6ENea5YKI-JRz+fqTNu9XKhPi6WcxSxBg/MWum/1U2SYfKWaD-+rpnMIeeFpy3Z+To2dCTwYLeIodoLxGyCysFcHk4BEv+DeeXpnw2aDZYZPK1ljLv8jYTfZecc8MYKc8LtYRLjxcYqcW6djGoHQgMqOEpVEI34vATRObZ9DzhdpZt7NYwQE3lwPlnCN4LzEr-gv5BU52wdTPxupeJ1mqeXN2ZghpQI12d+/lhvL9NDI3rD6sU1GAMfr7L6X9SS/NDMRx7CS1SW7TmP9vDsIaY6kJtPdjQ8P30nRHRv4PfpNVzzam3HLZb1GSuQcClvstQ52e0Z+gKjDlwOcfNTkwAaDQJd/1VLeJgQJHuEgI2UgsIg8k55VFemqexVsIwvMqmz9kmZC/A30wmuMTDSg3CrorNbFIAA2eotgte6HEbKINFKjMmuQ0w4jYpLx5u6twQoGbarMJlaalw0nTLNKBfRz00azhwBH4eHuH4zR+Abw0L-cRSZwjGDFCGc6va9Gr1lAZkle9+F0jhvYiTIL1DLT+nRDULvp/Rg23N2pCPK+5icEGQBDECkVOvJhI5Io/3249e17kKcsrTdsiuWBvWKv5CnSjAmOLRFBpFirY5tHwvd6fWwj3WeBP52xOi/5Mb4Fe+wsUhw4jtWQ==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
