//
// Generated by CocoaPods-Keys
// on 29/09/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[865], CelscoreKeysData[1158], CelscoreKeysData[1523], CelscoreKeysData[2002], CelscoreKeysData[1194], CelscoreKeysData[1003], CelscoreKeysData[857], CelscoreKeysData[2712], CelscoreKeysData[1860], CelscoreKeysData[686], CelscoreKeysData[2330], CelscoreKeysData[2468], CelscoreKeysData[762], CelscoreKeysData[672], CelscoreKeysData[2424], CelscoreKeysData[681], CelscoreKeysData[1260], CelscoreKeysData[2704], CelscoreKeysData[1405], CelscoreKeysData[2130], CelscoreKeysData[114], CelscoreKeysData[2402], CelscoreKeysData[1838], CelscoreKeysData[2308], CelscoreKeysData[1690], CelscoreKeysData[499], CelscoreKeysData[2729], CelscoreKeysData[2238], CelscoreKeysData[2075], CelscoreKeysData[1400], CelscoreKeysData[678], CelscoreKeysData[155], CelscoreKeysData[1115], CelscoreKeysData[1614], CelscoreKeysData[301], CelscoreKeysData[105], CelscoreKeysData[2119], CelscoreKeysData[450], CelscoreKeysData[1795], CelscoreKeysData[264], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1763], CelscoreKeysData[960], CelscoreKeysData[133], CelscoreKeysData[2052], CelscoreKeysData[2207], CelscoreKeysData[1474], CelscoreKeysData[1609], CelscoreKeysData[858], CelscoreKeysData[2302], CelscoreKeysData[1601], CelscoreKeysData[2436], CelscoreKeysData[2483], CelscoreKeysData[1438], CelscoreKeysData[1948], CelscoreKeysData[2048], CelscoreKeysData[1680], CelscoreKeysData[1231], CelscoreKeysData[543], CelscoreKeysData[138], CelscoreKeysData[2671], CelscoreKeysData[583], CelscoreKeysData[431], CelscoreKeysData[1907], CelscoreKeysData[2667], CelscoreKeysData[1211], CelscoreKeysData[776], CelscoreKeysData[1181], CelscoreKeysData[2336], CelscoreKeysData[652], CelscoreKeysData[665], CelscoreKeysData[208], CelscoreKeysData[1956], CelscoreKeysData[2247], CelscoreKeysData[2051], CelscoreKeysData[1929], CelscoreKeysData[1573], CelscoreKeysData[1302], CelscoreKeysData[483], CelscoreKeysData[2366], CelscoreKeysData[2646], CelscoreKeysData[687], CelscoreKeysData[1771], CelscoreKeysData[1021], CelscoreKeysData[1962], CelscoreKeysData[600], CelscoreKeysData[2518], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2754] = "K7O7b7aSpgogi4T2LNEYoa5dConUzENubQRyXLdsm6VpPIEYpuK0YGGhlH9H84OVxiCLPB69rLTlr+CgobO6z8qo9p4VDfWlDlTtzJ6AajulchKw09acCxTujr+QYx6xBgN6T-cGX4-mVQY6bWYKPCwHfF/dyVOAwMdSrgjIzA1D02uohoUl128i7oSeclaOzeM5Ubq0yTBB6RByaLkUZKUbWEhOX8GH6vFghJhM2P1aIYDZ4K9P4P2lnBx2deSlR+eiXXivPLe+gsQUCg4rI2QmyeO/tG4NwA1bMR6g/09079psSHk0l+GGQUVa5DFbgcORIYPPD6VjFcxjLJuwLmw3Z5Xej+AgcMODu/Lw2NBRi3Pw9SzMijbQixjhvtATW+Pz5n0YHw47u2na0O5BtylRGZ5dlAECN5WZUghcm4u45yy907eo8noVuz7keDZHsm5pteEhKXrVArIntioUNmzt2L2C83aGVOYbXDuMcnR1UIBOE79ePthwyJ9yPH2+40m1pQNHWMoBd/e5DBdHKNzv0nC8lkyblPavKhUkyKfNchL2aVfio3hEbB16tHY7NGIZ7821nysRQ+kXyGoI880l6JU6rfBRgQdSVGubZvfAQXWl+4h6n/KPPEEb2KCE5/P55xI+DppJ-YCqLY0f7KUFU9D0BOVd9HWSGNn7tYReDSs8aS3ztjjFDo20YGGtK1LYZjxJyXJ2Ou1VKFkAG09QtgkVG9Dk3wx7JnJSl3+/YxJ0SKlMxZTmMSAMzj6Q9W88CM824RCl5s+3EotDBsdZjmqjItmp3B57bL9cZ4uZd2BjLflM2XS+NrmuMg4HkC1okQi+EwaQ7oh7u120IBkoy0-tD0MoH06x83W1TNU/eCzwMWm1zESuU2+wvB4CGJVVDNiAw7kj9CrAcVdxGckiB2twR/2e7UOPAhNRotzbHyZmSAU+04tyNUA5L/z9sGRj2p3Vs7s9pntkZxP7JaSJQC7YttrWU8N1HGrDgZR64Gn7lgg6ihsR5guDJ22Ao43zKAe1EMzIWPSpwTFNx66DHBtcZZkMLFzZ6Slam7STXyu0y7kzdcAlwhMLgOAB7z+7A8lBd2kqNvTF8BF6/Jcnfbn2uSI9FTJY9v6IXy1U4qehJ3rurSqBJgOKvU/LrG0xEwXi1euEzIucGaaHMd2GO3yYz5hFKY8Fo/e7127l5Pscnu5WvCLKPt+4JwDBGGx0B7nLveDOlJzei1tm9VoTH17pvLWCPXug/+v1VqsxfoixL25uJhd9CzWdymhMlHePkHO4ksTobyon9clRjjcHVl1yabUx+K3K9fKNJ/C3Td3wcUhnxCMGQaWy7WmKNbM5Spbh3QILmLWHbENmgQpy1AkS2Sc6WdtqXqtAZKkWnazeSxmi7qkXYF7lm96u7e1TG8HZSt76awLJZHkhtW9eQ+tc6y8NQZ9pBQUrfZtH6MpJZcdEm4mqD7JobudwLRsbj97xxVW2wgkKWl91X/F79Y+P/FgxF8eQXhbW+WM5YhEbZ2AwePkmtkQZGVKyFlisRMJMBg2jWqtWOyTIIz8lCydWBlvTz4T931fvpiUjtUw2OcqYiiu/STPMYcKAl:bCRRjA0tlWZaT9rp3BLFGdcvbShuHZRqeDrzo2vrB67DQPtTolqKabj4CaDdNDFjVgslFCr4EF7y6ZehIzMgiZiIO2DpIFwmWstnmWh8fX5rxLUp/a0dxRCDIWhyIJ6CfD5pCjKT4lvpHWtimRzIg0ItOW4r9DF3ruWpbiqlEadShtTz63KpMyxcJq4Bir8RJuCu5p4TK3WFoigW8ukw0plRVaGxw73KcO7oXcIPO6Mp9+zl6WtvGyehV637fW/Q2FbC/7ueykiTZFJlXup/mYAp2DvLVl3eJyByYid/45Oa0MaN2bgDpZSg8oQx84VGOiRz7Jb9z2leAxX7HSjWw1lJXZdMGsthOu81pw4u19ieavxrxyRuYSfovjFbyAVGWYlzE+noAW4f0b/PEQl6QK1PC8dIlZ+6d8nPYzwG/ajySVa2dqbVNXKuLR8SmddAH-emrBLeqSMZIEVak32BxLhMSMlcpH8NO7Lx9Hcn2AlcawlnLVYCcO426heqjEGoOsL9EK+5qkei2i0myATu8VSM0j/PCzZfj7DiAVatgyVpIkjA8uEdcaHijNbLcnB1l0bfLnMZeJQGScI/rQJ+FueIQLgKfaRXs62WK4lvgdJYEMUdSzwOS//FGhTSJS+8nn7IUfUBJwws8VTLc/k6efB5tuN/ayEbRnGYTI952kd91rp9ei78Ws0kbxJ913eIp+8jvbn29NPjliwa9Rhrf/CV2vkPcu9S/GPXHJ9l98EzbIHQ78DjUHLzwa341vSd/l9V5JZAvQPVDHlBxy3IEaTDE15PGYAR8L/T3K08RkYk2LIBe67FMvrJupHWTvmyWhdwSGG5qaIaH4hQ8sg/XNcxg7znZ2YTdCibjvR/bkutyp1150dmeClix5gGbp0D8GhIKaXaW2g5YUDA3pa6cBeyfBIiHUA7OTd95LRQPo9LMhdhM92Q0I+/5O6oLHXViLcKUepbtWV+uVsTaVG8X658SuIZj6rlA7h/ykw8rBlH+bCweDYpLOKgeE8gqaKx8ADBOoD7kQeui6Akm7AE0zSlDDtqbOogbiI30eUp5-Hyp7iavVzSEuZNR9GVxAkOdYNC0VcalHw0M4lEij5e+yYDWEUOAoyW+s1K6jQAS3o5R7D9ZkFBrs40Ou0O8P\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
