//
// Generated by CocoaPods-Keys
// on 13/10/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[499], CelscoreKeysData[1808], CelscoreKeysData[2493], CelscoreKeysData[859], CelscoreKeysData[1646], CelscoreKeysData[1909], CelscoreKeysData[1507], CelscoreKeysData[589], CelscoreKeysData[2311], CelscoreKeysData[2438], CelscoreKeysData[1273], CelscoreKeysData[2874], CelscoreKeysData[1327], CelscoreKeysData[916], CelscoreKeysData[2037], CelscoreKeysData[915], CelscoreKeysData[1121], CelscoreKeysData[2154], CelscoreKeysData[3007], CelscoreKeysData[643], CelscoreKeysData[378], CelscoreKeysData[3151], CelscoreKeysData[3040], CelscoreKeysData[1637], CelscoreKeysData[1246], CelscoreKeysData[772], CelscoreKeysData[2249], CelscoreKeysData[358], CelscoreKeysData[334], CelscoreKeysData[1041], CelscoreKeysData[3124], CelscoreKeysData[960], CelscoreKeysData[2423], CelscoreKeysData[240], CelscoreKeysData[2172], CelscoreKeysData[2746], CelscoreKeysData[1770], CelscoreKeysData[804], CelscoreKeysData[2687], CelscoreKeysData[2719], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[692], CelscoreKeysData[1499], CelscoreKeysData[2242], CelscoreKeysData[2258], CelscoreKeysData[2837], CelscoreKeysData[469], CelscoreKeysData[1192], CelscoreKeysData[1548], CelscoreKeysData[2246], CelscoreKeysData[839], CelscoreKeysData[1811], CelscoreKeysData[1692], CelscoreKeysData[943], CelscoreKeysData[2456], CelscoreKeysData[793], CelscoreKeysData[2047], CelscoreKeysData[1009], CelscoreKeysData[1051], CelscoreKeysData[1677], CelscoreKeysData[255], CelscoreKeysData[2484], CelscoreKeysData[455], CelscoreKeysData[1442], CelscoreKeysData[164], CelscoreKeysData[1529], CelscoreKeysData[887], CelscoreKeysData[1735], CelscoreKeysData[318], CelscoreKeysData[2518], CelscoreKeysData[1198], CelscoreKeysData[205], CelscoreKeysData[2007], CelscoreKeysData[3176], CelscoreKeysData[1896], CelscoreKeysData[2692], CelscoreKeysData[1831], CelscoreKeysData[2461], CelscoreKeysData[242], CelscoreKeysData[2247], CelscoreKeysData[886], CelscoreKeysData[913], CelscoreKeysData[845], CelscoreKeysData[1002], CelscoreKeysData[1513], CelscoreKeysData[2147], CelscoreKeysData[1290], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3214] = "p6Ra2mJTvbprbQc278CKkKqJDFFPnOYL7SVeTVkMYFecuTsd76DYI0c1DWP/9+LJcAxiK/L5stm/nKPO7/6mqWbR+vDQ2oeNzMSV1vmeXhmBHcmlpbqQYisbFhxR7SN8ylE6AawWGl2sOQ8GOHqGVQYLPFLeq1VKqL+W-IzHIZWyoaiRlWhtvVfMvOhO0gehFFzzRU2EmcG5/aA19wLqmeEnP9CPgyhMIgqv944zFgGD4jZdTdbxBHMZBJ2RLK17hoTNuj95DXu3ePULWN+RO7GdsTj+wr9bwvzq84FdDQU+p9jc8pImrx1qoZOEuD960ONlzU17qJjjkJMeUAlWbfPpbmWlYRUIeS/pjDJlQ1xi1mtgWoODKS30v+aEmRra4atWWBxv/4CoSCk8gdp5vTsUDnUoFGYtpSGcQmCpu7R7AaqxKaEjhE/vbqvDPNnaJt4qgrV9LDs4hqCLxdZhBsaosEm/ThekxT5zJQTtnQc6I8BFHuZ0O0GWK2KQsSxKkNLWsdPJglfIDJzVVNhVwWnvBc+JFUksHMjHY/E8Y6mv/Wy7zFz/W6RIn5CAv4Va7heBK+B+ZH34+Yl1Z9lEMGDd7+LEmgZVg/uPXlFe/9s+9eGU2BLcWXJI8WopiK8xd85yZnr9YCqmyKr4BNVa3u8/9279aQfcybFYpEMsNWKuun4Po+czuRoXwXSO9Kdt7mGH/HzzxznnVXxUGLTsAtRqe5auUEkXpiOXD/VQIxvZGp/2dxUwnH5lXCUF3CvVJFhGeGkYMcLDzsT4VJJt84Q16dIwX/tE3mHr5Gdu6Ci8Usv+Aoizf2b+hZz1Qzf2txk7s+k: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
