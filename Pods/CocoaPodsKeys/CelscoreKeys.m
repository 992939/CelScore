//
// Generated by CocoaPods-Keys
// on 22/09/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2975], CelscoreKeysData[3048], CelscoreKeysData[3177], CelscoreKeysData[527], CelscoreKeysData[1764], CelscoreKeysData[2640], CelscoreKeysData[1655], CelscoreKeysData[70], CelscoreKeysData[763], CelscoreKeysData[1440], CelscoreKeysData[2611], CelscoreKeysData[505], CelscoreKeysData[1595], CelscoreKeysData[2781], CelscoreKeysData[3267], CelscoreKeysData[41], CelscoreKeysData[2869], CelscoreKeysData[2547], CelscoreKeysData[2992], CelscoreKeysData[716], CelscoreKeysData[259], CelscoreKeysData[1901], CelscoreKeysData[2845], CelscoreKeysData[1952], CelscoreKeysData[2638], CelscoreKeysData[1859], CelscoreKeysData[1141], CelscoreKeysData[2901], CelscoreKeysData[1076], CelscoreKeysData[3127], CelscoreKeysData[2792], CelscoreKeysData[854], CelscoreKeysData[887], CelscoreKeysData[2011], CelscoreKeysData[2260], CelscoreKeysData[941], CelscoreKeysData[1233], CelscoreKeysData[374], CelscoreKeysData[138], CelscoreKeysData[1534], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2510], CelscoreKeysData[909], CelscoreKeysData[2458], CelscoreKeysData[1099], CelscoreKeysData[662], CelscoreKeysData[2036], CelscoreKeysData[1597], CelscoreKeysData[2591], CelscoreKeysData[1532], CelscoreKeysData[448], CelscoreKeysData[2442], CelscoreKeysData[3259], CelscoreKeysData[812], CelscoreKeysData[2645], CelscoreKeysData[3162], CelscoreKeysData[2343], CelscoreKeysData[1819], CelscoreKeysData[2415], CelscoreKeysData[2440], CelscoreKeysData[2506], CelscoreKeysData[1132], CelscoreKeysData[818], CelscoreKeysData[2744], CelscoreKeysData[1907], CelscoreKeysData[674], CelscoreKeysData[1493], CelscoreKeysData[2571], CelscoreKeysData[2107], CelscoreKeysData[2438], CelscoreKeysData[777], CelscoreKeysData[2509], CelscoreKeysData[2133], CelscoreKeysData[1660], CelscoreKeysData[1827], CelscoreKeysData[949], CelscoreKeysData[2016], CelscoreKeysData[1802], CelscoreKeysData[3123], CelscoreKeysData[3042], CelscoreKeysData[1396], CelscoreKeysData[2839], CelscoreKeysData[924], CelscoreKeysData[2035], CelscoreKeysData[1822], CelscoreKeysData[612], CelscoreKeysData[2308], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "CCD9vVpi8/XUeVOCLqe6H6UbCmDGOsMnbpd7SHx3nYjTsVJjKNUXzdPekUePePOoXxr9djYpkuAtxmrAF61tN6/s4fayjS4EhTw9eDIe7qjgI/2q4b9f2+L+mm57RLxG6ovgroqMe6ud3nGExaddHFt94cSoszMHfSiuURqXiA0B+fd+fIaI1xFDXuxZlwJng2Mts3Dradfs9pGoIpc+r8Mj6Y5ilMFFETwmaW6pklFxIJWs/qccuEDHCUBRm/ZtuSNaZCfUbn7QjARpYJ6Wa8KPgx43SrDn4OVXsjHsVzKHJryq6uUts/qvGmi2L7/OprbITKBpGhkYvrdCSpv4mcKdUJibvrxS5SKqHnLw5tbYiReluUUcxO5EMFUXET8c8bhGeqVvSTy2VtRg2Nu+Qitm9eMh2tUFgFQtoFR7VfprqK3slPKGZPpdIpEUX+AS:V2pHDhXV3d6rtwyfqXVKNlzym9gYz2c31xS2A4X+tFPlsZbAjBpGGBE9iznYQyytZefwcz9C8i6mHME0FeyrYIDQvJjYtgfx3zcRakFd89Dz7ND9o7kXaW9BQVQSPBF2xgO8Zw6vT/bPP0KXGjqMrHMt9ug6/leYGKg6zhJJckXHVUtZrGBEqqjTIg+MWa9EuD4f/sVG0oKS3AIH65cq9ayvI9tLxq9o54PKsc+/qRiIeC8t+mLf6zGP6ZZ1jE0bWTqg177FnNOyso/hYvPBNptB8/3NjXTYCuDx5hU7YRIuN3EsTs8ga3pKr+bKB8nDo5GGnWcm9p++r+xpftrnU4X26LNx5NsY2xvhL56ooxN8vtrmB9bLsRcCuvLIb8EVTdQ9HSyhG0it+8z16ish+dkNKsuWhLIesl5qWJBn5PL1bhAIKsAHS22vwWoISnEI9flb+Pvb8E7vsdC8CkrjiPkeQhsa9I18hhxeyIBq92ayj2xqPdyk9O+HYLHHn74nQa2OXAtLVuDqdu/hAKGUj+il7fMizvN01Fzqmf1zHhbFwOK4xAurfTwZMhROPaLxSh+m/VvfekLvPHWYByPBWsVILuN7wAZo30kR/QmhFX9osGWXIwfMpAH5pxEgsYEXNfYmdFolH+eBPLlBfxGtE5Ojvxc3U2Q/R8ovw4x43yv1SMjH2j9cAKRBLKJO7Rkk6w/Mm+XcqbBPXjYKuuCY2ze30QKt2t6io/+PigVmeQ2YetS5ZBy/aLjnKZLyz2CqLQbxIyPWeqZfiDWxKrR2ETt18Dcj6pEb8hr32tOu3A/0Cwy2xlWWqyGUOCgefoNK6GcnpBKuoVDbnE4bq4qoeAm3XUqQo9g8W8PlBiDQJDG5OYcln5y+NDtyMh+5odi0gebjxfc1+r4b1qTXOKSpG+0bpSTWB55Na2eY6gTIpVakAIaej4d0rECVa7cKv+33YogNUGukKTNC1gwow/1eklL5McdH27DsNibBdObmujWu8Sc5cYu50rN7gOO5j3VUUfMBthXKKT3Hb1Y+TEvS4C7ZeSex2KyHoFRQrWqSAOVK8OnpZxsR8tr1lCr1APu+v2nr+u2UEBiZq9gLFXDsqwPZFH0wHuDGAOwaBV/+wbPzFbiqZAIMM9SmOsA9tRLPGOdd1ON1GhCjFZpbFfxjozH4u5a2yASj4YF8MaxZQvikE/Uq0Q7xUo0c41ofGk1dOsYIlPbDzR5I8WMJWm9xKqi8fuwKZyv9tigPVG/tAhpszOKR8SHbXSkVDwC1K+d1kAFWnBNOEuDHSN20yQvFky3fcROwKAK1vPq7Yxy2E0QRXciQ7k/JX34UEYOkqz5udDX+zTxHvcCKRsxDxSt3QymIOfeCm1W692-qKCeA8R1BMWnGwvU1/3U7t/b07TPJ1WemWQgED2R/Ii6SQbsJLSyurMIQJZlwqlwqkJRmS37k8WV7Gy-JKhwNXy8jHfwCeARcMsXaeQ79T+mGvJ+HLcboYtCfHlF8mW/kLvBcZVFFuQoj3CROzi6uXiGuw4HUSv2By7zJyjzhZtQYQ5Gie9XHUYTZhlw1bzxE/Q0cGahipFYFSl2sgv8JVly//MduTS9Z8SxAD7eO8SIU5dBdtEjRrywVfRGjBwniaNOgxIj3GdcedIlNSPu6pq9XcokQDH0yshCf3rnMk1plfWs38DGThUxugslZINmBqghH840EXOninw15WOKRlF9a15OGUhI6O2tFlxw1ObuGYSLTmCh0k/b+p9SRPFQGTaoB9tzrb5DDSQ2yk6wIPyRYp7Y/vV4MkHnmFJ0Z9/EL+Vj9JTokRP8lUoww2FhNfBuTI5dsIplAJIhl7UaAtWc5N67uMZ/cgZUErHDIkxFbN0+ti6z+1q8ujHE2F/DMorefIyCWdPRxWj4c04CXf8FgjwIuO0aakOwwTTdnFg16w1bVAxmBoUbShU6vKGCnz2/33vTvxCbJ1sEcX/Qvy/F1vvBsPig3D-F-udJkngE4ga6E9lt5s-NpqAHgNFuTRzTiXKQ9Ybk+6d0b9AO0+qt0tj1SiCd9VYdGc7NPauzZJKLAQ1ehf4R4ryXMItVZZK3Xyr1QjFynizl1Yhc211xFwAfqMgd6emO43e5JxlMZrXuDcd7KOef14u-mDMkYKtF47N8+i5y/An2aT4ICtclpapYOeZ0frGLlTpzeqOd6Xm7+dU301NnWEB2C3mbyxeOskxUEQ66PtWwOQLNdZ9niCyfXptoxdlt/ybi/3oeId5jFadQLJzQZeQeK9gaQ8JmogiFhU6K+JQy60C3bNET+si9VTZQ63QXR0m63djKucBs5JxPvBK7j9UVBZEV9Txvn14ZTIUC87Ey/IuEz+f3eYB6aIZ7uBhYeYQLnrK3JXL7rSy8f8wuI95w2hFliM00cVELq6oDlmBL/f2tFh7yXt50OZN3odURuyx//veVCibdjJWONyVRPJxu7VwTvkf9QlvKspeHzIFGy6d8WCAxXr/gwVzmfbIdYtpbGmTfhVk/EI8tAoIS4Gt0c4qC0x/GQ2r//xS59FWIqHryjz1J0u/3ZwuUKACkr2xMlCZGtmr6eZxDairL6xckp61aPV19XdPCpI0ibJv/vU6TUqQsDMiR6/ogFLAeRJwGF6/GAC/+Pd35Q/IfVtV2jFD8LOI4vgX8GM2fFDEbq9AYM9i2FfGBZQ1OQKiS6WLVkUPUQxViAUeJgndTNw2jst+rOnTWJwHFyLf5eKQN3rsf5+AdDktulnfKmSbmng81v6kj4SRm5F65aH/s1how8IIk0eSavONJCxtFywCI5L504Sd0pM8YuGOrTifUeb8D5J61Qd1Wi6R6PGOZjKsWGaLI/PnPoyE1ccWwY++8VRcxSJoP8w==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
