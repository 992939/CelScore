//
// Generated by CocoaPods-Keys
// on 08/05/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2391], CelscoreKeysData[2567], CelscoreKeysData[1229], CelscoreKeysData[2017], CelscoreKeysData[132], CelscoreKeysData[1223], CelscoreKeysData[652], CelscoreKeysData[102], CelscoreKeysData[2269], CelscoreKeysData[1665], CelscoreKeysData[1038], CelscoreKeysData[855], CelscoreKeysData[2572], CelscoreKeysData[1377], CelscoreKeysData[2096], CelscoreKeysData[421], CelscoreKeysData[346], CelscoreKeysData[2642], CelscoreKeysData[959], CelscoreKeysData[1068], CelscoreKeysData[1968], CelscoreKeysData[897], CelscoreKeysData[1557], CelscoreKeysData[1371], CelscoreKeysData[588], CelscoreKeysData[303], CelscoreKeysData[2147], CelscoreKeysData[2628], CelscoreKeysData[402], CelscoreKeysData[2417], CelscoreKeysData[2012], CelscoreKeysData[992], CelscoreKeysData[840], CelscoreKeysData[2368], CelscoreKeysData[1581], CelscoreKeysData[1159], CelscoreKeysData[1055], CelscoreKeysData[209], CelscoreKeysData[1418], CelscoreKeysData[92], CelscoreKeysData[2536], CelscoreKeysData[2332], CelscoreKeysData[364], CelscoreKeysData[2045], CelscoreKeysData[110], CelscoreKeysData[2517], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2142], CelscoreKeysData[2128], CelscoreKeysData[1033], CelscoreKeysData[653], CelscoreKeysData[2494], CelscoreKeysData[2089], CelscoreKeysData[646], CelscoreKeysData[142], CelscoreKeysData[1249], CelscoreKeysData[2593], CelscoreKeysData[885], CelscoreKeysData[420], CelscoreKeysData[2518], CelscoreKeysData[1242], CelscoreKeysData[2508], CelscoreKeysData[2539], CelscoreKeysData[2408], CelscoreKeysData[791], CelscoreKeysData[1354], CelscoreKeysData[671], CelscoreKeysData[485], CelscoreKeysData[2379], CelscoreKeysData[894], CelscoreKeysData[335], CelscoreKeysData[679], CelscoreKeysData[1152], CelscoreKeysData[1704], CelscoreKeysData[280], CelscoreKeysData[2115], CelscoreKeysData[1628], CelscoreKeysData[1302], CelscoreKeysData[250], CelscoreKeysData[1624], CelscoreKeysData[427], CelscoreKeysData[1337], CelscoreKeysData[2392], CelscoreKeysData[1497], CelscoreKeysData[2086], CelscoreKeysData[2741], CelscoreKeysData[1856], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2754] = "ikeN9Y4URgqXyO5EVgi4LlW9k/WuBMiwj1Zl4phKNcINK/eoFnzxfuwa7/is7//hL7UjSd2+Wj9E3pKja+KfuUXX7fN70q+2uVK/9E-qxSiX4364LbRRPiVP9kZitDvxEwt9aElUal0uQ5YKywDD2JT+rjgvhWdgor6VNsT1JMhjONKtGE3t99owm6cIyV0y9xOk/iy6adqWFVxe8bKeqew7YFXmX5ftN2oagLqCluBYFEOfAh0Cc5rAoIdrP7gmD+mhldFs1vKoswQNZATu1SuGJpZV9o18g8RkEIbzTPej8YK46H/+aKe5NZw/IDQgKkgVIzH5RcALAJ481dvvBrUEOeeDccCeaOiUvmxBrxHJ2P7Za4kx7cscsCtRAY7do5mLE7sXEjxUi6Z3PG-1YNpC46YTkEZFFLw2ie/YUBOTlKxbYsBtbGAUqwkN8x11ofYnQZVUBtNhuEkKaI+ytWWr1oxEHJYtfRDqaaEWzKgVyrElKI8bW8EEDL7b9BnqT4KMZVg1Akk5N6WgtgyTpS+eUY0gLyIrJQ/6cGENc1jtEymyUTGQk1ad0kcPlDcn6mykOFqhkZaf4CqtTs4nb5boXyKDM4qtrrCuXEASLxXv7w2kiqFLO37+Wj3NTI0gJbbv7Q0SpiIitEI1TIVVy03v4KorPGZyBCYSFxcOH9hWv3bJs5wSCAjoWPneAa5+vV1XwOBMyKo+3fUHERZnK6OKYFrq8phb7qYMCrFP946pE8LvYDedcvgecfT8gnUkTPUvKIEP2a9QJ8XFl4g8VS0lnfYepzweGUKlTY+Pk38HQmUyQWY0NZhIe5zPAHePkY0Hil1WfdyYWEVlU+U5sen0kFbjqTSabvCJCEVslFH0zv2WCSGRD2sSS2qYcy9qu9r4mavbLXYF/dJN5bo3Mx1IewErVp6sjV1ERtkrgXvo1UevccTSO1EvPgCMq+d-VgBxSbb5GyMiwReDtMZhcmskZLFPwgWR8i68qRQDNjAgX9fblbFDadHOnVDurRp9TQvxGxAOfwQrdpdRMky1LdzxOh7jqjIcKKpHwNNRCB8P7ZRuiClBbHNs0k/n9oZTKNhRt7gVe/CBbRkEAKWSrr0EujQMfp3e7UzUDjIPoMwhAy+jY+bcD9f6xU675Qhgeu1UVUk1f/YvOcYVinQWNS1M4Goqioo63fhN/eyRr1wumlVECbKU+z6uEKrgn3J1ZQP8Sdvs3dzkB-pXrO2NLqqYbM94/CZyobqfptzB9EUZdW2DiMKKEyLVOX60hz+/DZ94pdsGwBLQWughUcJDD/naAIzQTGJKVfpEb1E3mV5gEY3+0R1GrqwC99cwtjN3CVf+SwZB1P9vJ0qghFIKKckJwvr-kH8ObdpixeaC0zoNENuqnKVWq6bNe0zi9Lajzi3K6x9lA21HnkACB3azHZsX27xM5x3KBCdkE7SrsPeofm87EZRgI6Edtp3ZPvHJsTeaV4OrhIXJK5Iin/HdHhMgGK8YIgsdaCAVchVttFohrD+S5+j5hyHEmRpi4BBsmXjGyCqUuLQncVEJq/LNebfozzgOWjm3E2EqOjBMMOkn79fOKmSgDtJiZL3AwWuqv0K7l6fZ9iHKiEcI9dG4/wR12GTHY/+w1IEs3T+Z2mhr8wjZTtbClI8+qYk3l4loE:qJnrT4CrdMVtn/hA87FPUiA/wVa7jANLqmZKEoAjTz3Q/IDD3fSL/zcuykKrTIuhlSZPDnW5ZOuuXRr9dVMSxlRSPOO8MrdGx/JPqoTwLsugR/kFB4XuvZ19M1Y4StA7hJMSwvrPf8ezzoWFa2I4exPAiqC6DJRDziRBzj5EnhLh+QRj3OKkwl+VwNjosjPLRSG6PDMZZNt87UjtV/0p5DHb65z9stITo2N0DwHYTQXxiqZqCJKerlbGuHya0Eo38t2i4KVdw6RZ1q+tu1mSZARt5eEHZ3PLGdNP3VRu9o+FEa1HUr8YFmTOxBv5FWmlUGLx+tIPB5JrBDaLaN6oEqFPpuaM1Nae8eYAZChEW91HzcpNtrH9TmxBlzL1KYgbQab+RVdH9Ut3RZlKKyxfYxuQLfzjjxqlZebM5A967H3DhDdylx0rn7kBYvci8npDXMXRDU7Gcpm8+oXPdvXao/Qzz7W30PnBX5nQ89FH4Fj6vp30wXeuW/x8+a98z2dTR6t6aUYo+5lSWL8MUJXUfP/q2pEGciB+YdrGQ4v1bWZpd2ue76UPmLc23kQRNEIeHRRl/wCnRCBuampfRJSAHwa5lYc1KDbEMNG83efTzDj1fpgvnJHRvx4ZWtfGlGWlhjBWq732vvscFrkBsXDXQWVckgaHLLCDrjZUglU2zRrTCBJNUHwzEewiYTGUp3-QHaus32G4n8v9Lo5eu8Bl7ujO/RNBoEvZF+jtUSf5SbRvDne9VQa/rFqJWrws4uGExQhgYOA3EwyZj6MdY6niX33sroMuD4a7te44/273s574UP+191aqz/4PKGe87zTr2yi21/HhBgr7/ZDchF+cAyMS6dN3qwr7fpuP6D8B0Yv+h4pQnl/A0FmpqVi+hnFYUuNgfsmToH8fLZgEgivPbmURP0Yo/pfs8jiRAPz3zjnhoDs1463ulSI06aZa782isT9i8nFjoFeTHl/QbB755MeeEqcTAt5y3y3vT+1Nxgx05kPI6r5ESIYJwe1Ex/QYJCi1TD/JkNFiHbDyiVIBB287dpFkS+kF+ocX9iUlukkfWooiy5iu47mJifFuPM\\\"";

- (NSString *)description
{
  return [@{
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
            @"kAPIKey": self.kAPIKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
