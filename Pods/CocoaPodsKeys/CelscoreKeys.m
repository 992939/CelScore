//
// Generated by CocoaPods-Keys
// on 20/05/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2070], CelscoreKeysData[1255], CelscoreKeysData[215], CelscoreKeysData[2136], CelscoreKeysData[2123], CelscoreKeysData[471], CelscoreKeysData[2863], CelscoreKeysData[2830], CelscoreKeysData[472], CelscoreKeysData[2166], CelscoreKeysData[1966], CelscoreKeysData[1961], CelscoreKeysData[2167], CelscoreKeysData[2791], CelscoreKeysData[2909], CelscoreKeysData[1969], CelscoreKeysData[1465], CelscoreKeysData[358], CelscoreKeysData[1303], CelscoreKeysData[1332], CelscoreKeysData[1348], CelscoreKeysData[2557], CelscoreKeysData[352], CelscoreKeysData[3168], CelscoreKeysData[2722], CelscoreKeysData[1357], CelscoreKeysData[1573], CelscoreKeysData[2182], CelscoreKeysData[3249], CelscoreKeysData[1973], CelscoreKeysData[1470], CelscoreKeysData[1183], CelscoreKeysData[3108], CelscoreKeysData[852], CelscoreKeysData[172], CelscoreKeysData[2805], CelscoreKeysData[1106], CelscoreKeysData[1088], CelscoreKeysData[478], CelscoreKeysData[3063], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2835], CelscoreKeysData[1525], CelscoreKeysData[997], CelscoreKeysData[1667], CelscoreKeysData[789], CelscoreKeysData[1889], CelscoreKeysData[2635], CelscoreKeysData[2982], CelscoreKeysData[599], CelscoreKeysData[2006], CelscoreKeysData[170], CelscoreKeysData[2218], CelscoreKeysData[1475], CelscoreKeysData[1179], CelscoreKeysData[1022], CelscoreKeysData[3122], CelscoreKeysData[2554], CelscoreKeysData[1638], CelscoreKeysData[1366], CelscoreKeysData[1686], CelscoreKeysData[2455], CelscoreKeysData[1453], CelscoreKeysData[2970], CelscoreKeysData[470], CelscoreKeysData[1469], CelscoreKeysData[901], CelscoreKeysData[2267], CelscoreKeysData[48], CelscoreKeysData[3103], CelscoreKeysData[1275], CelscoreKeysData[2270], CelscoreKeysData[672], CelscoreKeysData[2082], CelscoreKeysData[344], CelscoreKeysData[993], CelscoreKeysData[1769], CelscoreKeysData[1512], CelscoreKeysData[551], CelscoreKeysData[887], CelscoreKeysData[3007], CelscoreKeysData[2901], CelscoreKeysData[2121], CelscoreKeysData[1189], CelscoreKeysData[2825], CelscoreKeysData[2406], CelscoreKeysData[3273], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "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:B4N0BPKf5zkYKQljA3b8/yyD+Bw93pJIM5gSEHy3LBKRuj+CMHs0y78QdB+gRus0Pn+NPZkNpr2fo9HvOfTVZotSIXUs1d8D26LMaz2P8SIIWN90xUaR7QTLesjFcxkPdEDW0r7UH0OJp43p0Lq8gEkWzba+gUDsA1hA2O+n3ME8kbRJUN/jRfhpaqSPmrYu9Z7hWGJvEvU2DNeBteu0erjqpH8E0KSzPXKmsIBa2bmGIduxBwB18lwASlbfXHNEFncx5n0aA+FmdzZLUsU3iSmvUBgcU10+4vIQVUh4SJh2wNrW6AXzwo/0cvkrdK3rpSvVe1XLXZAvtXoLETXxbBBUq5MMCxnmuzgKR/0i1tNaEjwALAvCeTPEtHjNxvzWIIxke12i63WdoHZ6ygN2R7keHdoD9wxme+xC9hs1TIIjnRs/8gBrFA93UyzN64yR17SFg5eBuZOuyFaLSmAaDiLKNz5ZobV+7jlP8nBKE7mLaosbWJzrJmRMeQbCvMCObSLjBnKJyxy7WB3nNx5yS2hcsoJHgGdKR1nej38iteT8U9B6W7cS8M+w7PchUOyNDqCpK/CRKvVogEcfu/XlM9BymIALe4/AOxM4AckdzN479OaXfk9rtnj8uuLXdTAsX9rd/KPZAhAWMGIqB8t/M7x+DcPMeBsxWwPBlONfSBaH1O+zxmWPe7me7sFsx9gHqjt19qKK0gCOzx1UUA2gMWfz0tIZXzuIl+lLRmJ/iDfyNKVSDTWOBi/A/rgCsRHTaChxE3EikAuvz02I9p/h8DHWuceDJsjj2xXr7z04NETaB/8biL1LVp+YCd72urShM+IT+wYJLa+tNqQfkTxYZl+r0Di5zMkP97YMMyI9tSfgOdR39G3qKCpP0xIP7w8S4RuAsfrntqoQRqbWyKvcvNHL2mrWnNmN/zrAg7U48KdP89YNEK7YjKifY8CLEs/+VztbIspfXemS5x+-1kDImaJO+PAlaY541H1Be1vT0/SVSXgaGxMvBXmryKeFwy7kHTGgxRSywKy5WLZmmmlmWCdABgmPpPZhPMqqHELrD+sI/uneCTeJwEVSbxw7WxmFr8262jnc-76NC2AHvmn5kzqwxLoesAH7u9CGO0JwzAP41ov4isqhk3ebbCFmQCIotQ1IGbFlq8DkBaXNT0Vo5q+99CFaXwxl5bODYqJqdeS3dx57v/bFAg7qPtXEntvUYEijWgWVWuaYO2zF+MsxhQyrdaMniiaDifD4/MSqLH2u4dChsYcQxCvdSQoWDKYK4HxxKiijRHxXBD+mbpCkt65Pgvy+9i3UcMYKyUw==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
