//
// Generated by CocoaPods-Keys
// on 30/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[327], CelscoreKeysData[179], CelscoreKeysData[56], CelscoreKeysData[1045], CelscoreKeysData[731], CelscoreKeysData[1460], CelscoreKeysData[1109], CelscoreKeysData[1900], CelscoreKeysData[85], CelscoreKeysData[563], CelscoreKeysData[1244], CelscoreKeysData[1755], CelscoreKeysData[1112], CelscoreKeysData[103], CelscoreKeysData[412], CelscoreKeysData[648], CelscoreKeysData[146], CelscoreKeysData[961], CelscoreKeysData[2147], CelscoreKeysData[115], CelscoreKeysData[1516], CelscoreKeysData[559], CelscoreKeysData[116], CelscoreKeysData[2102], CelscoreKeysData[430], CelscoreKeysData[312], CelscoreKeysData[2196], CelscoreKeysData[1041], CelscoreKeysData[489], CelscoreKeysData[295], CelscoreKeysData[2145], CelscoreKeysData[215], CelscoreKeysData[714], CelscoreKeysData[480], CelscoreKeysData[851], CelscoreKeysData[1503], CelscoreKeysData[1540], CelscoreKeysData[361], CelscoreKeysData[1193], CelscoreKeysData[1408], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2150], CelscoreKeysData[1860], CelscoreKeysData[832], CelscoreKeysData[741], CelscoreKeysData[1114], CelscoreKeysData[1014], CelscoreKeysData[880], CelscoreKeysData[1809], CelscoreKeysData[1975], CelscoreKeysData[1435], CelscoreKeysData[1664], CelscoreKeysData[1821], CelscoreKeysData[1863], CelscoreKeysData[97], CelscoreKeysData[325], CelscoreKeysData[2121], CelscoreKeysData[965], CelscoreKeysData[2283], CelscoreKeysData[1077], CelscoreKeysData[2029], CelscoreKeysData[829], CelscoreKeysData[2134], CelscoreKeysData[1712], CelscoreKeysData[1638], CelscoreKeysData[1024], CelscoreKeysData[1400], CelscoreKeysData[205], CelscoreKeysData[1409], CelscoreKeysData[887], CelscoreKeysData[308], CelscoreKeysData[139], CelscoreKeysData[1637], CelscoreKeysData[1849], CelscoreKeysData[838], CelscoreKeysData[1994], CelscoreKeysData[1529], CelscoreKeysData[122], CelscoreKeysData[1339], CelscoreKeysData[515], CelscoreKeysData[377], CelscoreKeysData[527], CelscoreKeysData[2192], CelscoreKeysData[382], CelscoreKeysData[314], CelscoreKeysData[32], CelscoreKeysData[214], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2298] = "u0tS+rN8hWLYKF7zyDj1ysH5qXAlKDZM61dvhbiF0gNUuyNpZZWT+nuzwdmRPGhzKU1P0dGCDmCVK7rbUwCaQbGrA7PvYk0ygd53lPa9BvASKk5vX66y95K4oOcyG9lt8y1XSl0WjrfabOJXDufJ8LdPstPzM3Pbr0WM9agljoa1NheJpzRXGMC+MzMhia0sDDh8Wr+J/FQzl5MVbyAHZ3cd9T32P4xHGNRA9YhE2kCR5nYqhVDXoHyR8WIry/oRdxjRrVoWM6mWFWfoJ2Ji5hNpIm0vJpkAviuS+rvYVXlK2DjlBMRZ94KeeI1eN/9tObSTyd/04zdqPSddPEM/BD8jRDD7wlvM+o0VrS9P75UUVr1UmjQAi33IQ0TSoE2NPKaKEYLXqsB4mdzYvUODStoDqbPcrIHzVF1IGlJ4RZTo1mOZHhVhsjv1Js4MYZdQLiW1j7Nc7nwshE9Bsw5uiYwKesIVWEzlTPc+HyGIdMoUseDCz3BEvducnqDj+Ecsbh31TmVnPDVBx3U85EyzzJywKOnVNZClKPFCbqljZOYO1Bw8jiisuF1FElIc/x2enzbiDbjRGsczc2dG43s7vtg+RmcrtIdLswMTM17gbUEQmWhMSIYw+oTggIbQtn+9eTxfPuDaYUZE9KE3967gKBR4NxREf0hES19Kc7THoXyWgBc1O4k0GE63Pqjda8toqArBwqB49W2qj+iTpJjFwkcxL267j2R0aXLcieAmJokVBrAPv1pvnoME/89tr+Q8FzS4+alOx3HA7ApqlG4p2UHiCPaz28nvtu0rx/FVqWONOyUGIZYXyUQVwDmnv1F9-uNf6M-WZEg6Iz82ZF49dDlspuAXvHB4Gv9jMTDkYtk0PD7CtTQj/Uq-dGyEdXf6zcWdQPW7pAf3DmTOn4fm6Vd5SruVSRch1nfFkqLIYwDQkrF4A2ubpIpyrOK/LlItFlPSHeULjO+3dudybgXLfqP1gUBFAxpWOoe5ZGimjjcNmQUCVZPoyastiAdjLzoF4DaEi1zodyqVWcMZFJDRMEIjjuDUto0ATiKyxLDmL1dq8xJ/1D2AQ-FiiUNghnacwVYLdd0uSMc9Bs1SKNFAP0UUARaLw8XVoSgCwjwvZoLQDlZuR04tcvh1cXL99sTG+OkwrQGlRE3Z9Q1mfJCP+NK0CB5zrlL9//Cxx5Us/upfqjD84ykq6KrI1UncJLVdV7Pad1wQw+HN1Oeup4NYflT3ZaRR2Mptp6iaybY7lsMjcZqWqoVCXtz3uzpl/XrGWIMdwZqxxIw7Y1n0gjHy2XMoQB2slKXbCXsAs4hb2O4LIPhQy39tI92xKC+bywbApyQXsRxw18N2LKNKSHkysPisNQSGAMrRBWv5C3uPAoUQ42eEKlLp7Wbt44EQcjc+P9wjEBO2HoFWsR9Y76ytYw6xyuS:NJBvXIKVovMOMVGWY2BZcSCt60u8gjkshif4wnjOPCJ6isM4CqXvfQcge072ZBgeMvhj7uPPnfDRN5qoaIzUuZNY5l/Um1AOPAsmBkQ4KtR9Zx6yo5mTSK+SudOk3yZb0ykT9J7opKCO3Zd/mIPjb7YPdvVrmg75GsnSqAxW9lqrALk05Xf38QZmAQWOHU4muSQOxkUTW8-4fdb4Ji+iGDNaH2etm7L2ydUHdruhM98cCFqpAGxQxLLO21HNAPsvnTS1Hdd0qzye2YJ6bvM0bOYs6LhE6bpM+m4MTqj30q4C73+am71BLkyeHV/lnd1i3fB2zQtRl2Sr5AibGYeqYOuatUjF+r60cwVsJ30VLoSl+uLeaUMz6-tOoxsi+NtjN0K41C8OIw5VotaKCKu3t3kbUitcKfBFrEr8xraws8j8o1UWWn9RkqN25xtufPJY70hWRd0sbbok8AdKYrom5t3/26I3eZjFHDw9dkB+BPZU0SIVFSRYJFy14oOSdKQwAUMf5/I/79EnFkJLvDj21rwBGvP1iRRmZQfaB7dUkO5b6395CVczGx+CXFIY5+rfnnRZs3CMyt1YnCUqI7nP6FRYjwkMVL1aZzGVr/DrSzei75Shg0m7yLMi/WrichDdtu4zP3WXUZqzR4ecqJSChsx12e8dRkB7ufrNZB+/QjjkuezGgjPDG5wyRF9ToI1brjE9tnP9GMutVgNcQTrBN0QomoiZPZbhWVywQQNd6RNs3gcq7gbNa85sAXT1FYQ1EfMD50pg2iGfWuQvKgr5fO6mfc3O/Puq+bd8GasfaAJVfC2mMr3lfl6NhPSwsSrehjw7i81lVSrSU7jbG1WwdlwrhQ==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
