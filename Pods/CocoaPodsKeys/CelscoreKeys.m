//
// Generated by CocoaPods-Keys
// on 26/12/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[445], CelscoreKeysData[732], CelscoreKeysData[1737], CelscoreKeysData[2028], CelscoreKeysData[575], CelscoreKeysData[451], CelscoreKeysData[1819], CelscoreKeysData[1337], CelscoreKeysData[2107], CelscoreKeysData[137], CelscoreKeysData[2166], CelscoreKeysData[1412], CelscoreKeysData[2415], CelscoreKeysData[2373], CelscoreKeysData[1482], CelscoreKeysData[908], CelscoreKeysData[166], CelscoreKeysData[2640], CelscoreKeysData[2292], CelscoreKeysData[2145], CelscoreKeysData[1222], CelscoreKeysData[425], CelscoreKeysData[206], CelscoreKeysData[906], CelscoreKeysData[341], CelscoreKeysData[1026], CelscoreKeysData[937], CelscoreKeysData[1674], CelscoreKeysData[2161], CelscoreKeysData[1586], CelscoreKeysData[690], CelscoreKeysData[58], CelscoreKeysData[721], CelscoreKeysData[246], CelscoreKeysData[195], CelscoreKeysData[2017], CelscoreKeysData[2174], CelscoreKeysData[770], CelscoreKeysData[1699], CelscoreKeysData[783], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1073], CelscoreKeysData[81], CelscoreKeysData[1673], CelscoreKeysData[910], CelscoreKeysData[1746], CelscoreKeysData[2715], CelscoreKeysData[1095], CelscoreKeysData[1706], CelscoreKeysData[2539], CelscoreKeysData[352], CelscoreKeysData[305], CelscoreKeysData[2269], CelscoreKeysData[1514], CelscoreKeysData[2221], CelscoreKeysData[659], CelscoreKeysData[556], CelscoreKeysData[1995], CelscoreKeysData[1837], CelscoreKeysData[2659], CelscoreKeysData[1459], CelscoreKeysData[65], CelscoreKeysData[2464], CelscoreKeysData[1526], CelscoreKeysData[460], CelscoreKeysData[2525], CelscoreKeysData[1918], CelscoreKeysData[931], CelscoreKeysData[1093], CelscoreKeysData[2068], CelscoreKeysData[1541], CelscoreKeysData[1619], CelscoreKeysData[1534], CelscoreKeysData[344], CelscoreKeysData[17], CelscoreKeysData[2697], CelscoreKeysData[2176], CelscoreKeysData[2313], CelscoreKeysData[323], CelscoreKeysData[804], CelscoreKeysData[1392], CelscoreKeysData[1403], CelscoreKeysData[2359], CelscoreKeysData[1691], CelscoreKeysData[2606], CelscoreKeysData[360], CelscoreKeysData[177], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2754] = "dLfXGDvP6ZeFer6fr-oVLWep4Woh2bF8L1em+t83yXZmb1UHNuHNwyZZ9OdBu4Ib81V6bvqhWVu9zir+ps1KbDq5VuXDDJQwhm1vM9MapLPg/AFRPZhHgl7EPHbCNSHKxmi0t2M6rsFuKEwssbYAIC9S0mc0csi7Vaddr+fa/dMbifeqHcIHGB/Wp/G6J+GmnBu9r8v7Xl7aED93aYrb+BxkFb/oMa3SrWC7r/HVtgZH0OC/pOdZojTtljSr3qvuc2SjytH7Ubh191ZZPrhNAjPPrEMai9xYiDsSo8Iu/tqniO3k8df7tEv2QKERHbNjbi5b5nTMfq4J1IRfxzCy9O8nf747USRU:+hwASuW6nsK1RlYYmESUx7YR2GoBmp6vFDCDZnknyoaRMtmsaK1CQF3kMzvqDgcAnrArzdjB8oVq8EfxHPgpudZD9UO70rGoiw6NuZqdpRp-mYJ+J0YBLyhoXS2tudTBTj3nUDUI/9AgbJFaugAouuWdZkytZb79+a1zcLI9l/L5lX/o37t8ihDQVUOjPl+ks/LAKD0O0QweRpKIk9C4B7M8OO66i17oZtL8asOXHLI8rxFL276S0/55NSjoYTIzySet4OsW6FA55hhu3FTjMP3aYukgplpReFrWMHRVt96xPPQXp6dm7qwBDmSxEivPdfjREdFOmbebNhajAnzEzFCYtIw8BGpGpq+1cYBWWvwQrE0r2iFv26CygsyX9+mug/+CW0SQzBIIg1F3ls4lgPaZ9QaPEI8Vg5eqTXxGPfWgDUPfBal1t3Qpj28mwTtqUp11IIuruX7J2a0HzLasnRCD3QMNVfRmJVMR1tluMuFKVMXJAQFm1LrJo2lA4eWorkeupYmC913G2KZ1S3WufMjrbn9rrZ8onn8Gn5fOQ88Y0ekxw4N8Cw215IEfCnex3c5vOBaKA0gsK7SOUypUR+e/T+DLRkTz7V93RDoGmSGmFeEtNdtlfjptcEM++UpiFZUoKiHsUkZaBxc84JSK5wc+WdS14Odmrez13eT9CDM4xFd2QKsnfBjkogo+xNVtWS1Lsekfv0HdNQ9YubdnC4ViNksh5lSDoN549YtVapl6qVgbmU5vJHSTOrwAF7+dVzH6fxHzJSxB/dj3XzSl6ezXHAUIAzsJcyJMvJFE7BKqsF90mIr9iGj8eLyYxrMcid7aaeje9vPgscf2/4uzdXijQN1h8IPPFe7/maDDiIujxUO5UyIB6OQ80XRrikaXRf3XXM//wpPdwewkeUFV1uWGS2A6iCTluQbkiPrKvoEM8rSZPMAhkLcUGtsia8bHU3NrIaiXCZdsg7tm2j0jxUPDYFw1IaCZXDxA8iCIH15o9+U64vtUPLmbqoY/rdHzA3zCo17mfv4nr6p0doEJB5+fGJ8RiBahRYDiA39WJcIxgboA9asa430PM8LP4M3KHxJtYs4iSFe2ua4sss7Z5Nvsbjv+TSKqqVTG/XKbFrKcp5vx9DReK5B+xlbHEtyqg5nLNLAwT81FAVu2Fz1YMbBXP/2dL82cDxU89uV58K9POuhGu7FiAbiLe0MCvR8oIvZcOcvVylmiByW6rY1IJNKTrjSHMT+mLwYh/HWO5No5KBdUzyaS73cT6Sv3feQi6W+QLK9yqn6xQIWjBK/671OhT1Ih++kApLsPMPwy-JDClcg+34ijvETv552WYbk+JYurbDRVH-3MMoRa7UHcCWG3Aeml7ZpyW+6EBj/Wwr2ZyMpsNazu5S0tgKR77i+rJ36vJC0DxnJuOGl2r4P3ua4+n8xMrzsval357bGPdWlIhgo+5m8L5piZlX00xSa1T8Bg2g+k8Q9db/EzAzuDA/RrhRpah4dLo/Sfudu9aRJvDKGgdfemhfkX9KrcVSi6bylCcgUGWaQHqGdrKnQ5R9jaMThD342b/pMAMoV1Kc2xcmuuT83QrcqUg1oARhJu9rmqk7tOv+27Bk4muFPy+T9gqZSUfUeP78IwL0ePQUeYyEfDLg7vCUUH/hlosgs4jlyZJj7RZvpE5ADvczhHA1ptiwZfS75x85hycvdhfjiLHoi5Cre-5wU3kmz5OveL46t52hX/C10OmAIS4udGjoIfUzbN5htNoMKkkvZU98VYutnAhgN17XORci4+I9EByB1qIwD4F+Sr10YtMujMF2Tm9RgrlKR1uRD1rBGSeAuyvRt6xOK/pK9TEwS/vdvXvFdsVjge+Wx8dlxidCDSpvw6PlN25IP8wB7bYkdSxlDHM1qJQ6yG/mcQ8lNm0bOBASVdfg9L6xNsb+EEVbc9q31QehHO75ULoGW999LycQ8UA1/XJOT/SDJOT80yeEGYL6F1/187pfGsb4zw2QSOheaazqqI+dArZwd395I+LjJ7y3wXyqmm8GLMVgwa/fikqz8miaPxCNRHJzASnPtwtp9T8cOq7fnaGgQRbbqyptj1T/wifINFiJWvKAmQETX9vg25nxuVZLVbT3URMEjNOoTOb3PQpCbspvHIwcyImjlNbBn+14BxFpKELTTq4xEkDgn4CiC8Od1/xcWvRkSgeOQ3GMjrlG5TpLV0GIKa40rGpc2vrm6h5iV7Xbcj74Y5WqK92BKkoTLfD1IOT8gmDbAsgaNFbG20gF/Nsq0s76fSBVtltwy+CkbhHywnyxTKwv-sxb4yaGzLTBrL+v+IqyiKjAe9Tl0qupgSncQK9R9vez1/Eyqq38tOD1swn+1QVcpA8N/yoSC4AJcuyfD32EBcK6dgq07\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
