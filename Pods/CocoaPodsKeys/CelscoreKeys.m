//
// Generated by CocoaPods-Keys
// on 30/01/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[861], CelscoreKeysData[2019], CelscoreKeysData[2110], CelscoreKeysData[2745], CelscoreKeysData[1747], CelscoreKeysData[812], CelscoreKeysData[1888], CelscoreKeysData[2016], CelscoreKeysData[1655], CelscoreKeysData[1427], CelscoreKeysData[1561], CelscoreKeysData[302], CelscoreKeysData[1640], CelscoreKeysData[102], CelscoreKeysData[1425], CelscoreKeysData[2548], CelscoreKeysData[1752], CelscoreKeysData[2783], CelscoreKeysData[1928], CelscoreKeysData[2867], CelscoreKeysData[2727], CelscoreKeysData[16], CelscoreKeysData[1647], CelscoreKeysData[2269], CelscoreKeysData[2828], CelscoreKeysData[2740], CelscoreKeysData[2606], CelscoreKeysData[1598], CelscoreKeysData[2808], CelscoreKeysData[2181], CelscoreKeysData[278], CelscoreKeysData[1793], CelscoreKeysData[1297], CelscoreKeysData[279], CelscoreKeysData[617], CelscoreKeysData[48], CelscoreKeysData[240], CelscoreKeysData[902], CelscoreKeysData[803], CelscoreKeysData[2244], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1777], CelscoreKeysData[1362], CelscoreKeysData[2587], CelscoreKeysData[32], CelscoreKeysData[1708], CelscoreKeysData[549], CelscoreKeysData[2103], CelscoreKeysData[1376], CelscoreKeysData[1783], CelscoreKeysData[2199], CelscoreKeysData[145], CelscoreKeysData[1259], CelscoreKeysData[1385], CelscoreKeysData[2292], CelscoreKeysData[876], CelscoreKeysData[2233], CelscoreKeysData[251], CelscoreKeysData[706], CelscoreKeysData[54], CelscoreKeysData[1597], CelscoreKeysData[883], CelscoreKeysData[87], CelscoreKeysData[1094], CelscoreKeysData[1431], CelscoreKeysData[1830], CelscoreKeysData[783], CelscoreKeysData[895], CelscoreKeysData[1109], CelscoreKeysData[1154], CelscoreKeysData[515], CelscoreKeysData[1613], CelscoreKeysData[2050], CelscoreKeysData[2106], CelscoreKeysData[1227], CelscoreKeysData[1510], CelscoreKeysData[772], CelscoreKeysData[2413], CelscoreKeysData[1501], CelscoreKeysData[1243], CelscoreKeysData[2285], CelscoreKeysData[2320], CelscoreKeysData[717], CelscoreKeysData[851], CelscoreKeysData[1332], CelscoreKeysData[2795], CelscoreKeysData[2746], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2870] = "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:xItWDH69XFKuRP3PRwlsIN+g5YY4A+QMCeyQ8+q5QNn4P1B2tfvcOMwZZSNAC5+earSYT8ZkSkk/IdLOSbxbt0RQWyNxdlmNnn5SzepBLqnDQKBZJhHzciep89vHBHvrwlMNdlBK7Gmh5j0xUy+lB0oP65+IQG+1PYiK/695IZwhpJSX6VUEuRtjBm74SAYW9SpmwbunCz8aT29TYjFFKcWMiSz7iROH4nmgrSleU1UjPQu+yQtqtyGb2zL39mUZ6Bjy2N88HMu+Up2cwrlWwJF33KQ32WbAwgZrojtRDgLR0y9CsaykbeUb1n3bexvho0BJmLQbXxRdZ/C4U/yUFzvqkNpRYt8ACJw9lfmBix30Rbk6qHfh51sQjUi9Y6BC/Wm-Za4ncUuqM8viVWI3IJAbdd3ca5CcNCUHOlIV1y3H7OSjdPg1pWwPiW8EbPwwM7CtP4uo0NDQX5F3uhPx6fiqMrdc/FOu/R9GtgBdzSq3Wzlei79v8+jc9+UZHzkBgNkv1xTrMITyIn8aR5SgpdRvPjFLe2pWwEccgGVe1jSFHBAuhEg3GJdTu07ZBalzr8IJ1y7lDkyJN6OqDZH6JalxxRfX5enaMDL0lwdiDhiFBKHugKzROsgPOvrQlC3LQ7ojAQgoDZj9+4a1XCu8CqBd/D4y\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
