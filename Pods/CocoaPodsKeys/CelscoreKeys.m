//
// Generated by CocoaPods-Keys
// on 23/09/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1025], CelscoreKeysData[2200], CelscoreKeysData[504], CelscoreKeysData[1847], CelscoreKeysData[2138], CelscoreKeysData[1698], CelscoreKeysData[1987], CelscoreKeysData[784], CelscoreKeysData[2129], CelscoreKeysData[2185], CelscoreKeysData[1089], CelscoreKeysData[451], CelscoreKeysData[22], CelscoreKeysData[1541], CelscoreKeysData[2088], CelscoreKeysData[718], CelscoreKeysData[1095], CelscoreKeysData[943], CelscoreKeysData[1503], CelscoreKeysData[1106], CelscoreKeysData[1295], CelscoreKeysData[2595], CelscoreKeysData[2191], CelscoreKeysData[25], CelscoreKeysData[2245], CelscoreKeysData[1341], CelscoreKeysData[1812], CelscoreKeysData[541], CelscoreKeysData[1868], CelscoreKeysData[2276], CelscoreKeysData[1610], CelscoreKeysData[190], CelscoreKeysData[432], CelscoreKeysData[1288], CelscoreKeysData[1484], CelscoreKeysData[2798], CelscoreKeysData[643], CelscoreKeysData[2124], CelscoreKeysData[2122], CelscoreKeysData[704], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2754], CelscoreKeysData[444], CelscoreKeysData[1139], CelscoreKeysData[1860], CelscoreKeysData[482], CelscoreKeysData[2037], CelscoreKeysData[76], CelscoreKeysData[1580], CelscoreKeysData[1584], CelscoreKeysData[1102], CelscoreKeysData[28], CelscoreKeysData[2841], CelscoreKeysData[1234], CelscoreKeysData[1368], CelscoreKeysData[249], CelscoreKeysData[1514], CelscoreKeysData[131], CelscoreKeysData[1677], CelscoreKeysData[1506], CelscoreKeysData[595], CelscoreKeysData[354], CelscoreKeysData[166], CelscoreKeysData[45], CelscoreKeysData[1526], CelscoreKeysData[2721], CelscoreKeysData[123], CelscoreKeysData[846], CelscoreKeysData[769], CelscoreKeysData[1819], CelscoreKeysData[92], CelscoreKeysData[2067], CelscoreKeysData[3000], CelscoreKeysData[2207], CelscoreKeysData[1092], CelscoreKeysData[960], CelscoreKeysData[1138], CelscoreKeysData[1126], CelscoreKeysData[2826], CelscoreKeysData[310], CelscoreKeysData[1486], CelscoreKeysData[1968], CelscoreKeysData[142], CelscoreKeysData[1328], CelscoreKeysData[1702], CelscoreKeysData[2126], CelscoreKeysData[69], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "WssPL8vz6I4jk0Q0nr7uxRAsg8HmdXrcm15Wm42BV03htbS9uC7sZyo+7CeY1VkczT9u6c/zxgBFtolJ3HOO9Jm2zoNc9EAnC5umBgHoYzI7afJAG6G27n74r2g4L4a6NAKe4IY4CEAwNZaWUwKb0Zd3bDEDXeSBewp4mF9W5mYxP+WWOYWx+WVRBePLXddLKQy3+I06FwEsE/ndFLw1i/HPjdfFPmuYAN3X3DlMeDgN3t1plUqCBtplldfU3CEoqUbpbpFBDhvWzbVLWF9K99FfOo/aoV3I59DedrIwy2Blg3qtBzKZEn1lo9bUnEwSoqauZae2qr52Tse/uxSBtwr0I7l6EFo0r31jU9jupu7+Kf99a7knUTTWYWV6SfC0OKjQAFFLojkVxx+Jk/KvlKeJWGb7EXX3VtotXBj4aVwVhurT29pDq2TjGYNXsEujadoi1w5jRz2vEgZP7uIPrkXYpMNrz4X2yNactvk349UddDbzoTafcWxkw8+m3bq21DLAvExSggZqlsQAwePjC291SUcZJJMFyrnQ90xTIqyP3qwm39dYMW4aaZzcrW2yX5/80W3NO8dGNMi/Zpq7zel7SxfapvqLLbyN2Znw+w4CbfMg7/Z3dSU/h+EoAY6WTr7KvMobIyYt5eoCCMVj/+CSz/zLv5Y5+ypNF2/LAoK0ch8inAi1hJ3pW91H1/lYPj22Yz8OSWSVjSY30blfBFtFCfeZ3Ba6MpyroI0V60XZkvckAYwV6aKuJSvAgghpX9L7oBmB7seuQcZcYLuVzLZizGjsesQKZnl4u4RgiKgHybNzk0LKpAmp/Tu3Xw2MW7JGo6nM3oE4Wb5kS+A0T4UwmGiNhPZ327/SprSJ4J75D9nwaHqaE3GornhGTIO30jmC9oOwK5XPX8+/xMpijPEQjdSYgtGQZtxgbZuS+eSaKUtlXGXlf25Hj3MXEfpI9kb0K3RBVwIlW5fRgNDFIDhhOJw6eiyMMQrJEjZTLAEMhR617jI9ZEkXu1hK3+2sW0v+EpBLR8WYL7Pn5CEHUOLSXnCx8FmsUyoap/YHq2Srgliyu29AH4FatMv9Xph9h2Qm-gjfpDQWqB:9Ewy/g2BQ0cbMrsMbFnFyw1cTD/0iFeaDyn1-9CYpe9fxoq5BJgOJt5bf2JUXeeLZHTvX3E9PlzS6X0sVaqgYnvYpo75tUT7tocnZPAC8yO+rNkbnqkIUA8edgRZaqdMhlJ8F3IIlYw8qyiU++X0AYjQFIEtlwXl7wEoImr1LhiJOS0DQkxQA94ckT4D6zrSaBHGChffalzxqlyC5dWpp+yDgjgqoSjX82GeMKYis4p1EgeUX8PwDD8BDNsX3s42ift0jVuvodVnjkubm7WEC4qXugxe4aZWgL6mnoUkQhrSSn+FY8YRud9zSHHMsEfMlNiI0SX+lyT+c1FCDlgjlST50YqsQ//oKenHvawh1WJwBYI81oDSt+kg9PuQ+9n0ecb5q1a9Uj8AuK/39uN-lnjsrxIeqJgLdI154+m-a53w4HHIrXZpXV9TSlCxDkIbvTxoDfmUPAKVG9b6Jz/4/8zHxjjrr-x271MO/Z5PKXNYpfRLM5uDRIutRqknunP7hiLxRs4mPG+67+sDcs0QNomvFVa+kc8757WUtUB5VB2mRPK4sM2XdIwu+UrdnRb0hCfWZqr9/hRaBs3wMrk6u/V1QjRSh3EHlDxS1Y8GoygiBs3iWSiZqzp6ZAthv+Y/eusBPU3A/AXSkKWVVHCkC33y50JV+fauyIBH61WoPyPbigBX+2jK/ckhrzyN2GNQRURM8AxKB6kA-F+Dl5Vbp1PnCkhfp5ZYHRDssTfbE9Jwc+jbdWPXseqm4Fb1eMNCgp8sufo5s/tNcOKi5qRc6P2OLqyC9pS8Ef7ZnHH9fv1Ry4xRvyVciOXOW1eGTuCnTGUKYBx71p1O7GZMwF3Ktq7N7MibzU+xW8/ANUi40KZvNvz6WqoP09YXFXtc5QfaF3HhfhQPfoDKR6LLxphqeCghbrdS6ZQXqi5bjCsdgXJ8wT8sJyqRSRK3398jTNS/00DFaMrVebWg5oUcoW2iKfdsgrJNZv2qg+VvBO29B3Bfp+v090miuuI1xJ5uO5r6sobF0rpMJsR7mNx5PHTYzlbjQDzVZKtm6ltblrK9apBZGf6ajWMYyNXJVRsqTFW097B0XjyzVXlOQB22fEf2Sgp0/GON8up6MEjhmYehruaTUTnAOdJ5iiOhiT/cuWEUZfARJkk105VZtURoWBv5nYIqCHjE7QFNQNWJCpgdj8dCQtzZ1jbuddYhwc+rWqsp/WQcchhxdM6j331bJqi6oS2h2A5tz2G+tlMAUE8NGrKoa2Xyvy189aFXKzfmDZ8St++9Psp/wCmYQp5uX0xtdBzmqK5cGDsP3VbiGaYg12/9tnrsqJWVijuw4WBARpwDZDvh2HJJFvC+9lAP5ncq9vNjr4EnLoGxfwN3T7FIFQQeRQUZF37sF88S96IK0IhxWTPROy5eqPpLqafrD3djzC00RwllhHmhzrcXEalfXl8vMTbtr5l7soooC4PnFAkWVviwNBiY7QhNUypwbR9D8XwDh6GP6kM8HBtx+P/H2e30RhOBbAD+ixJVdysXCu4knDgaBhncnu6SMIf46Cx1H2Vwnx7RVsqP4qnJ+OUha+DTzljvVor/SkdyDxR238mzcbWDCnzuhYpetmyZ1U4XNiPq+YkWlFZCv9tElUZPZWO8LKsK4OduWpygUuIFgY56TAhf8mqDmeON7YsAzDpN8KAR9PhAuV0j01WsiLLAg7l95kGyE4zV7dMj/sdbqn2iho8/PwkrQI0OiiDv+5FyrzHrrM25VbjKNuIOKJz5E8YDcOFhlqBk0pKf+G9Ki9hJcpwPDwJBws5yGQGyIvEz0ceY4B0xemH/uoHpesFh+muPgfaLP8EulqMcF5VAH5tVyqOPpf2MBn7MnaEOrO4NhdiQtdi5wgseRhBZ/9bbX8Dw9Y1+pA40VRqiYyHG8BxSfeliMbunD1Es0SIdJAsNf09q1TrN0RIFylrBGBPYwXbYw3Xs4UrXNU0pAPvFCItJWLZp5FUuk\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
