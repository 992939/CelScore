//
// Generated by CocoaPods-Keys
// on 09/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[433], CelscoreKeysData[467], CelscoreKeysData[1822], CelscoreKeysData[2724], CelscoreKeysData[2893], CelscoreKeysData[2709], CelscoreKeysData[2727], CelscoreKeysData[2157], CelscoreKeysData[1425], CelscoreKeysData[2489], CelscoreKeysData[198], CelscoreKeysData[1573], CelscoreKeysData[1052], CelscoreKeysData[596], CelscoreKeysData[305], CelscoreKeysData[2196], CelscoreKeysData[2683], CelscoreKeysData[2163], CelscoreKeysData[1222], CelscoreKeysData[3329], CelscoreKeysData[100], CelscoreKeysData[1768], CelscoreKeysData[1171], CelscoreKeysData[2602], CelscoreKeysData[1323], CelscoreKeysData[2174], CelscoreKeysData[2779], CelscoreKeysData[2993], CelscoreKeysData[1433], CelscoreKeysData[3206], CelscoreKeysData[935], CelscoreKeysData[1841], CelscoreKeysData[2091], CelscoreKeysData[2366], CelscoreKeysData[745], CelscoreKeysData[2743], CelscoreKeysData[1284], CelscoreKeysData[576], CelscoreKeysData[1876], CelscoreKeysData[1019], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2370], CelscoreKeysData[2767], CelscoreKeysData[2417], CelscoreKeysData[1650], CelscoreKeysData[3141], CelscoreKeysData[2899], CelscoreKeysData[1458], CelscoreKeysData[1954], CelscoreKeysData[2316], CelscoreKeysData[772], CelscoreKeysData[1917], CelscoreKeysData[408], CelscoreKeysData[167], CelscoreKeysData[2018], CelscoreKeysData[950], CelscoreKeysData[1190], CelscoreKeysData[2252], CelscoreKeysData[1592], CelscoreKeysData[1577], CelscoreKeysData[694], CelscoreKeysData[255], CelscoreKeysData[2132], CelscoreKeysData[1648], CelscoreKeysData[237], CelscoreKeysData[2957], CelscoreKeysData[1521], CelscoreKeysData[466], CelscoreKeysData[1355], CelscoreKeysData[337], CelscoreKeysData[2118], CelscoreKeysData[2442], CelscoreKeysData[3078], CelscoreKeysData[1074], CelscoreKeysData[1101], CelscoreKeysData[2470], CelscoreKeysData[1244], CelscoreKeysData[327], CelscoreKeysData[1889], CelscoreKeysData[1912], CelscoreKeysData[2175], CelscoreKeysData[2386], CelscoreKeysData[235], CelscoreKeysData[1426], CelscoreKeysData[606], CelscoreKeysData[3189], CelscoreKeysData[1505], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "Ra0qSKDR6Itoiu63brvqa/vG5m8Xa4AW9IQl5EI+jOaDCxu4fiZ91F7WA/0eH2CaXoFNVfA210xBYrQC6sRWtprd99NnN2zlx/oIavxvaZtXUDewamclTXbH2BLxEt1zab7bCIWN88cD9PTaDAOYsVBEFhQwp7t9jaOjyIl8Yawk4TF1fNySCUbBR7VsFWkLr0ICDD23vIGlr+nX+Vrg+Fy7zs8lfKeGMaHvN4NcWtpay-8lG/ku4E+TCDht7kM1xiZf+cJbHCxWTEOuG/haGT3oJTX+JeFH0O/JGPqHGqgCwP98Jrp90n6Fz09iGK0LNPnwjHyc2pVbgqpd/-6Auyno/uQ+6z0xopd5ZN6GcbPjLpoCJtUqcicUeOe3S+Nyhx76qgyVOT/VrVvO8R65aCO70Ig10iqgMa9U/C8uft3DiQtyC0xb0PEd/zegww/R6Hsg2hCll82kfzQum05XNVozMdYY1/zf9gA9EFDl/7rlOibdGLRC9+Vjgep/v28ktsUhGFfmsfPtw81Mzfyfk3QEo3yct8EgiXjQXxwAYGXpzD1uKw90xTN/0xXV06VT5/2H/p9AO0F+GJCqSkfa9kFXZWmPMJ18ahP6Y76l+/D7FLZQNHjEnaYX81cnbUAaLJNi/U7+lKEyV4J+oNfGor3FhNZuIXueuEBZsZY1HUN4wvJvNTjlrr7ZhDscf1TN+gFjo9aTh5Bo+rx7zshebTm46sa+KeYGhV6sLP2kp9Md85/EpFHteBE7MML5fbrJx3p3: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\\y";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
