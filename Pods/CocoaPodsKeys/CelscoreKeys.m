//
// Generated by CocoaPods-Keys
// on 16/05/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[902], CelscoreKeysData[285], CelscoreKeysData[965], CelscoreKeysData[2911], CelscoreKeysData[2877], CelscoreKeysData[2023], CelscoreKeysData[2657], CelscoreKeysData[36], CelscoreKeysData[2429], CelscoreKeysData[3056], CelscoreKeysData[2938], CelscoreKeysData[1111], CelscoreKeysData[1002], CelscoreKeysData[2790], CelscoreKeysData[411], CelscoreKeysData[1425], CelscoreKeysData[2519], CelscoreKeysData[906], CelscoreKeysData[365], CelscoreKeysData[1023], CelscoreKeysData[66], CelscoreKeysData[1291], CelscoreKeysData[1778], CelscoreKeysData[1174], CelscoreKeysData[1406], CelscoreKeysData[917], CelscoreKeysData[712], CelscoreKeysData[2965], CelscoreKeysData[2238], CelscoreKeysData[1017], CelscoreKeysData[1758], CelscoreKeysData[93], CelscoreKeysData[921], CelscoreKeysData[507], CelscoreKeysData[2111], CelscoreKeysData[588], CelscoreKeysData[522], CelscoreKeysData[1900], CelscoreKeysData[798], CelscoreKeysData[2804], CelscoreKeysData[2016], CelscoreKeysData[2581], CelscoreKeysData[1363], CelscoreKeysData[2885], CelscoreKeysData[1750], CelscoreKeysData[655], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[239], CelscoreKeysData[2794], CelscoreKeysData[1246], CelscoreKeysData[2829], CelscoreKeysData[2380], CelscoreKeysData[1780], CelscoreKeysData[2933], CelscoreKeysData[1974], CelscoreKeysData[1539], CelscoreKeysData[740], CelscoreKeysData[2452], CelscoreKeysData[709], CelscoreKeysData[611], CelscoreKeysData[1815], CelscoreKeysData[2464], CelscoreKeysData[2085], CelscoreKeysData[173], CelscoreKeysData[2758], CelscoreKeysData[1172], CelscoreKeysData[2827], CelscoreKeysData[2183], CelscoreKeysData[1678], CelscoreKeysData[1196], CelscoreKeysData[2076], CelscoreKeysData[1047], CelscoreKeysData[3079], CelscoreKeysData[1652], CelscoreKeysData[541], CelscoreKeysData[154], CelscoreKeysData[46], CelscoreKeysData[1200], CelscoreKeysData[1574], CelscoreKeysData[2311], CelscoreKeysData[1905], CelscoreKeysData[2542], CelscoreKeysData[1620], CelscoreKeysData[731], CelscoreKeysData[1005], CelscoreKeysData[1818], CelscoreKeysData[1729], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "F2rthXi1H5UDxDvxCDxObjenwEMOIh+5Igma-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:69N645/0JHPlGPuQMywehdem8WgkuyR//nsRLKa\\\"";

- (NSString *)description
{
  return [@{
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
            @"kAPIKey": self.kAPIKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
