//
// Generated by CocoaPods-Keys
// on 25/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[27], CelscoreKeysData[1506], CelscoreKeysData[766], CelscoreKeysData[1012], CelscoreKeysData[1818], CelscoreKeysData[1359], CelscoreKeysData[372], CelscoreKeysData[2935], CelscoreKeysData[2330], CelscoreKeysData[2474], CelscoreKeysData[115], CelscoreKeysData[1982], CelscoreKeysData[1746], CelscoreKeysData[1164], CelscoreKeysData[2249], CelscoreKeysData[2413], CelscoreKeysData[2232], CelscoreKeysData[707], CelscoreKeysData[993], CelscoreKeysData[360], CelscoreKeysData[2353], CelscoreKeysData[2355], CelscoreKeysData[1275], CelscoreKeysData[1913], CelscoreKeysData[1832], CelscoreKeysData[2346], CelscoreKeysData[1815], CelscoreKeysData[1643], CelscoreKeysData[102], CelscoreKeysData[2751], CelscoreKeysData[967], CelscoreKeysData[715], CelscoreKeysData[2468], CelscoreKeysData[469], CelscoreKeysData[378], CelscoreKeysData[2670], CelscoreKeysData[2397], CelscoreKeysData[2352], CelscoreKeysData[633], CelscoreKeysData[1135], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[919], CelscoreKeysData[1928], CelscoreKeysData[1825], CelscoreKeysData[259], CelscoreKeysData[412], CelscoreKeysData[2380], CelscoreKeysData[1730], CelscoreKeysData[2534], CelscoreKeysData[2565], CelscoreKeysData[827], CelscoreKeysData[762], CelscoreKeysData[2587], CelscoreKeysData[2174], CelscoreKeysData[1756], CelscoreKeysData[1937], CelscoreKeysData[2018], CelscoreKeysData[2123], CelscoreKeysData[337], CelscoreKeysData[637], CelscoreKeysData[409], CelscoreKeysData[1749], CelscoreKeysData[684], CelscoreKeysData[801], CelscoreKeysData[449], CelscoreKeysData[2218], CelscoreKeysData[1845], CelscoreKeysData[2473], CelscoreKeysData[2285], CelscoreKeysData[584], CelscoreKeysData[258], CelscoreKeysData[1503], CelscoreKeysData[1416], CelscoreKeysData[72], CelscoreKeysData[916], CelscoreKeysData[506], CelscoreKeysData[1669], CelscoreKeysData[1837], CelscoreKeysData[2110], CelscoreKeysData[1680], CelscoreKeysData[171], CelscoreKeysData[336], CelscoreKeysData[204], CelscoreKeysData[842], CelscoreKeysData[2747], CelscoreKeysData[491], CelscoreKeysData[530], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2986] = "J5scLlzN+Fm65ePVklXPt79TA2v0h8hMra/nPZwhyebfqRo6nfl0h0/trNVPp+rW8mdYI994fSKWQmVaigmObH6rWjTqtMJNW0uIGMM/xjifQnR/1EH2rrW9YKUTI+4UpkjG0kp6By+AJk6tLbnHVLsEB9/kO4m4kOyohdYC8q20UZ+n3MYzEM3bPdsJ2EB4Du+qfdUMQOt4aPHchT/dVDRAcNpuvlORmlVERLxw6Hk7ImsFXV9hSqrYxFAjT4R8TM9epKJrLQelWzc60J37tU00xWooQRC2OG0jUOB9dXupxf9gRkmexyylNSflShn5/65B1JlYMu9ltWb48by8bvoamx7/82hyu8TxFhYEyB1xssOwWCYx0PPXLL9h2Rt4mZHzgJkRwLs+DfB5dXObS6IBi7rCaE2Zg4iJeFSbohnaz2dFVsBKvmxaWxmWTN5Sc-L/Mw/ODq2Vq6TxIaTrSTNjRWDgx2YmwC/1LboEiqj69gmpEzSGza6/8H9vtkuamUXafB2k2xQ3qdcKadcxPXrfA3or9EDvwGZO1J0SBXfcxDDFLNj9VIQ06Po6vG7WTwqvL6tW-yNAprhZv27gK4iAuJNrnt94z2Zxf8INUzCxF22Cbj1Of8hS9uNlZ-QO7yQ2z2nRaPgHIlIPFJ7jvmfTbtGp0qwe22NOvm4OxVoH9QSaCtCLERv2PZKxSJ9qt9glBbnBaGCdAuECQMzLumDpl23lOtMXAWW0ZOYhvmPeJxmFnMN7YpcZUTd7N+wP8I1UFRFqMrrOUw1xpUUtUYBCW9AlMwvgqbEndZFI587lomOvg2JK1gsvEGy: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
