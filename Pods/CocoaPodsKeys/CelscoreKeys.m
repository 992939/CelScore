//
// Generated by CocoaPods-Keys
// on 23/09/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1677], CelscoreKeysData[53], CelscoreKeysData[586], CelscoreKeysData[2653], CelscoreKeysData[2199], CelscoreKeysData[2665], CelscoreKeysData[1264], CelscoreKeysData[1075], CelscoreKeysData[924], CelscoreKeysData[2868], CelscoreKeysData[511], CelscoreKeysData[1273], CelscoreKeysData[589], CelscoreKeysData[2689], CelscoreKeysData[501], CelscoreKeysData[1163], CelscoreKeysData[49], CelscoreKeysData[2508], CelscoreKeysData[2674], CelscoreKeysData[884], CelscoreKeysData[91], CelscoreKeysData[2476], CelscoreKeysData[2001], CelscoreKeysData[807], CelscoreKeysData[2704], CelscoreKeysData[1202], CelscoreKeysData[242], CelscoreKeysData[2599], CelscoreKeysData[2792], CelscoreKeysData[903], CelscoreKeysData[2256], CelscoreKeysData[0], CelscoreKeysData[2517], CelscoreKeysData[1173], CelscoreKeysData[637], CelscoreKeysData[839], CelscoreKeysData[2761], CelscoreKeysData[1772], CelscoreKeysData[768], CelscoreKeysData[1286], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[733], CelscoreKeysData[84], CelscoreKeysData[1175], CelscoreKeysData[1602], CelscoreKeysData[1946], CelscoreKeysData[1848], CelscoreKeysData[2633], CelscoreKeysData[2652], CelscoreKeysData[2157], CelscoreKeysData[993], CelscoreKeysData[1557], CelscoreKeysData[2240], CelscoreKeysData[2232], CelscoreKeysData[407], CelscoreKeysData[515], CelscoreKeysData[986], CelscoreKeysData[1610], CelscoreKeysData[79], CelscoreKeysData[1371], CelscoreKeysData[33], CelscoreKeysData[1330], CelscoreKeysData[2809], CelscoreKeysData[960], CelscoreKeysData[969], CelscoreKeysData[1569], CelscoreKeysData[442], CelscoreKeysData[2063], CelscoreKeysData[1930], CelscoreKeysData[139], CelscoreKeysData[252], CelscoreKeysData[1842], CelscoreKeysData[183], CelscoreKeysData[1300], CelscoreKeysData[1147], CelscoreKeysData[1020], CelscoreKeysData[1738], CelscoreKeysData[2482], CelscoreKeysData[743], CelscoreKeysData[813], CelscoreKeysData[1310], CelscoreKeysData[2586], CelscoreKeysData[21], CelscoreKeysData[1107], CelscoreKeysData[13], CelscoreKeysData[1749], CelscoreKeysData[1997], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2870] = "dbaZWHXQIVK7Q1y6goKO+aNTAQacLbHiK70RiTeJncjdEwPe/fkWLXPSJNNYi9ae7DjFS8h1SGuELsnbuK2nsB7Murda8Zjw26D6KFqEetwQEdZFLyASkl/N4pXrZpOzApGCKqN5Cym-dGcyOrasifKT3PX5WVzexrNyWXhl/+kYsZ7jyo/huB28emGVrwXPRDB6vf1RcK2lHjTwHPdF7JqqpG/2td0gJsF71+hqkt/HU401KZAE2PIu955m9ZfUb7Uk92ZDzJjaL3hyL7lUm8Sw18PFZII3joeVRH0J7T9EfZXtkmATjSjxJRGwRXs/AbMMcCPyfvZz7h+rd1tLOrwvr0iMIrCTDj9UUOGkYx2zrGscK3QgeYtCIAFmjVmcDkzNQjAOGDOTtGdYpzMLVgDdcizwX0rZ/KyjvDpPKspc9sWUrbFS1OKPOl4f4eJEAAzna5+bwlpPHXjGq1GuNTIT3y8BSRH8IntMOQsYXynvh5LozVgHtrrhEzgi7Jr2iyqdRaEEssktzsjtSSylHO2HQ5A4ucwqPNYqLEeainvT+IVvSZmOxhX+xfZqJkijbFY+DO/UsDwEVAcrgHpob4zwCE037KfyIbF2RtxvjD+GQpSI/Vbq4ef3HZPze9DJA2Btyr07pe3rrPspM72HbecgKb7PbfKe+pC8Wg4IwSy1IN6+AKDZRS45kKc3S+FFsU4lEpauCFglCEjEdZlXACsfrUPNauOea2WLYkUbu4FqQy0dXZGXu32oUSIaOieyuYdAc/8k+dKCRvsSLhLVUVjAYmiMjDfV7Q57M+s84RglF1DzzI8mB+Y7QhW3OAu+x/Ox6lajlXgb8iuXqHGftPfDxK5edHP9qCO0waHU3McXfPMxYHaYyhffotbwsWbqFg2RrrvY6DgzronIWuMLx0OuY68HbTgfNLjAR0SFHUijjvrEGyiSzcivTeL5tJ/Mb0IHPvwCY-p9EDY5Aeyl/A2DuaehrXSoV:ym7CGTpgDvHnDoVyYS4fd8mRFA9berJgXlTSDM50fBptD9z3o5YszQsRiiNpley7objM3VK1amLG2vcgcYK5rEnjt5gBHk1V2L7S8j9D1MFBRDlpm2BpLgDarXnHeWwn3ZiK6sWX7SnYTV3z4liGX0Snt-rzZ5lU09rXaPlSyYUoeyZTbBKTx-kQWaArQURLLny+841TPAyITLMZeA4lY5rkLzmvnxCugH1zF+/mPzeDyScwscTt3uGgiciN4RZqrrAf6QkqGPacAC0VbFP0qIMi3AMLMA9XYR/RPIvsJsVgI3NcDCfP2BiR4zDw0YaT8A3ObT8vS+vi1P201czf5/ONwM9Q40WdwO32oGeUcv3Ly6kwXVErEe+F6-dr5TnMaG7WnPYUv3XWSxiNzw8l+ZHKsMHRXu6nAB/h2+apo1wuUknMOIXXuT29G61O6YALA2ffXsoTkOJfCry4wE9KHiYW3tGY0HlqJDMYvya+yDFWGYCYpJh9VlOe2e8Ha9MxCX/Y8Wwm5I+EJwUVul+S5zEeX7AR+SPHljT/cQRa5Npo4puW+f3daj6jI1KHU664S/wICdvOtrfk0pSwr+oqFErnsRF70qP6e28Bzxate3o7WQikVRwg3+Hv2Fn8dk2jivou6/O4YE0zo9YKML1+trk0y14/NzeX7US+p3VTrLQ0kVZHjgZCMaL6UI4zq2CUySZVnCDo9ZRAW2d+M3SHU7muIi/AvqEvJ9Hq8X+r14cs+G4fIuI6oOJVQ6Ajqpa4MCTbKTDZbK51wz59WvWKxlrGRye9T5SjzyNlD8PsMy4pQCXAjFOx3apgTHRiX87vL/reBo4/KQupWpxpaqsA3gsWDgq6eFC0veJtmcvHEovoajb56aVtbQsnKZFz7yKC9O0MRSdHjZaC5I1Q6DiotpHFZybKO85EVHS4AMOS9H1dAGNaEW5AnWk7aYoWpthVfULW3TwFZ4z9UNuGz/kVegTPrN24GhQmdN+KbRmxNtBcAtJ96eUu35KxNoCossxo7X63XhlEpSkhC8xWO4S5JDfNrxUMRFL8v7C6WKzlpszFK5p7fqbq/AGJWOvprMQK5JVP1yKKIqthosqvykF6mcdRAkQTus5JED6v80CVGR+RF1jrbySoWnz9Ase0jV7S8YY72x3F8Cn1VKDYrqEw31OgPEQ49vETUKak7OHxp9fANN6NPndcP7B8lC6nax3tTIRdfNfCiFCFWdz+DuDTqb8gSVfk3+0reRJY6Ecv/jEMt/nRr+k3eh6Zb/oljhf1xnQOkWdHaQL7mVHyJJjf9s42K5ox7GjgA+owWcIaIDJIS32N33JWgqyIWklpxV6df/qIB8BSRjPUdbpV23VbAlJ49UTCb22xsQ0nYRv40pCqmadfVl9Rsmq5sIPJjyNFRJ3xP4R4zNT1hTHYiAv7DnW76JcGbd+tVM1hwWs3a63dBCt447aBGeHB2iYUeJD6XLjbaMeE458tI1bDcZ9pYKzRoSVNJ4Wgo3AtOd/4OOlclc6kGbt2MO0wzRyUDwykoiFamIMbJRdMRH77gbqOIeOeTW/azH4Pv+1U1Cuc6zQ3kcZRBDUMB6i68JO1/VEYPqPgHJlEZXbmMywucVa4kkf+m5qHQBRB3PDIRaGtZAUKEFy/ckJv/HmYnR-ExvDuWXkHn9b6L+3EpcMy97574BCoF35tP4d9DtIh8fhG+8N9XNO1VQKDRnPom9o0CAv05DVfhILdmdAYahNdKCwzowee9Lxgc2fSeoMutDSK+SUm6UNz967t26Id144BCp/otnPokpMHDQOIYjF+HxxRGxA9pdIydKUbzxJ9/02HDF3rtDkEr7XHNN/Q1i5U6H6dMLTEMlkcca00qso+E=s\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
