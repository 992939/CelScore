//
// Generated by CocoaPods-Keys
// on 24/12/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[535], CelscoreKeysData[1701], CelscoreKeysData[97], CelscoreKeysData[2047], CelscoreKeysData[280], CelscoreKeysData[995], CelscoreKeysData[2056], CelscoreKeysData[14], CelscoreKeysData[1516], CelscoreKeysData[1480], CelscoreKeysData[1217], CelscoreKeysData[2117], CelscoreKeysData[2058], CelscoreKeysData[44], CelscoreKeysData[2217], CelscoreKeysData[657], CelscoreKeysData[1971], CelscoreKeysData[1728], CelscoreKeysData[531], CelscoreKeysData[1442], CelscoreKeysData[1365], CelscoreKeysData[831], CelscoreKeysData[974], CelscoreKeysData[845], CelscoreKeysData[83], CelscoreKeysData[684], CelscoreKeysData[1414], CelscoreKeysData[1368], CelscoreKeysData[1449], CelscoreKeysData[55], CelscoreKeysData[1062], CelscoreKeysData[2320], CelscoreKeysData[1962], CelscoreKeysData[1876], CelscoreKeysData[1252], CelscoreKeysData[645], CelscoreKeysData[1598], CelscoreKeysData[1944], CelscoreKeysData[697], CelscoreKeysData[1501], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2245], CelscoreKeysData[655], CelscoreKeysData[66], CelscoreKeysData[2182], CelscoreKeysData[2172], CelscoreKeysData[895], CelscoreKeysData[2243], CelscoreKeysData[105], CelscoreKeysData[2252], CelscoreKeysData[1211], CelscoreKeysData[2374], CelscoreKeysData[710], CelscoreKeysData[336], CelscoreKeysData[164], CelscoreKeysData[798], CelscoreKeysData[2162], CelscoreKeysData[1559], CelscoreKeysData[1897], CelscoreKeysData[1272], CelscoreKeysData[281], CelscoreKeysData[1112], CelscoreKeysData[1803], CelscoreKeysData[1178], CelscoreKeysData[862], CelscoreKeysData[2208], CelscoreKeysData[199], CelscoreKeysData[748], CelscoreKeysData[373], CelscoreKeysData[2009], CelscoreKeysData[1997], CelscoreKeysData[605], CelscoreKeysData[2201], CelscoreKeysData[2147], CelscoreKeysData[1958], CelscoreKeysData[2008], CelscoreKeysData[196], CelscoreKeysData[1837], CelscoreKeysData[1692], CelscoreKeysData[1726], CelscoreKeysData[472], CelscoreKeysData[709], CelscoreKeysData[1675], CelscoreKeysData[1392], CelscoreKeysData[1263], CelscoreKeysData[1464], CelscoreKeysData[1479], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2410] = "PHqgvCT0kf3l9bYtL1y2d9QiGqIVaJmnuoVpAYrtG5s49Zd8l7POu5cY1ZgC2BJzQ/-TikfM/p5qGmxWL8sOYy3A5HuHYfCnSwfyt5CmC-NYTPi0sx2An16OIeFFB3Ex5gpXe/fXINTct/RTXSKEHp2NPlo7FsezGohTdNBkbBthrbJG2gsz3gM1T101GTv98GLb1xh4/s9bbjUlHX8+p5DL7x/bAo031uyBPZLoEhR4SNoSj48efM9Rk93+Yzke5z7iBJ3OgQolYOlZRBbMHBd+77TimmiLCUSaqv9ZqaJkOLAtIN3wZVIteLTctCJTFgs52ogUY78Lwr7I8wyxl+LUx2hcQuiE1WXbez6tnHjNB4AiSR7xi9wEiZx4lHy7HndOcf1PosX7mH//my+fAotwQx5LsSHmRFsRh20TV3vAZPwD9kH+vd9sa3xrFLM/dfgV7fqSUznE/ts+GiQC6YRd0tD9jT94WNI1ep8hMVbyjiEzFAO7OlZkCJ9VmtHoJu2VkQTGYVoWsnw4wA49R330Kh5GHz5n5V80H2OD3yjNayVyBhXQ1nDR2THHAaPKOTcfuHyhtbJgdiTiaHmrOJD/bERkyaqbgvu5+6zw2NKpRlM97fbRtPbvs7hFwcQU10Lokju3UFxsYW7szYtrz252+Ki0eaEgmy9JlFzf7PX1eXO7uTebq9agdulRHcl9ZacSr80NYEmAhcVsxAOfMtBdQIdG+IdTyn8SqMNtMMiU55HjDkbdjyIn8YePgqIpCNRJXjEeXxctMjS5yP+sJde/8PVVRjdjJ1d/XzjBh+cKc7MhNxKURE6Of8+In//8d2eDlLrkhk8oV8yquaDcf/Gx6MytJV-Zj5ncXFmS8+vHsoknT2Lmo/mqmMgreqYs6u9esXMOMMScYYH0kVUfM9tyGPZH3TCI7+G5ORImJyNpztNjaKk1HbS3pwV5ouFvmIBqmAL7ozAvdc96JjbpxrYZ4x1KlbGboLA6kH7PTWrM0N0C0nth3SKfXSyJM0xLOkpaDHr0Mz7FEbtWFyI9Iyq2cVa1UbF12FPQW2nNIZRN4y9/4X+LLDW6eobxmD/3M58rywlk4jguz+RKSBTz66Ks1m5oWikMKlyYUMXlJhlfepLUgUGAZJktsvbxdYYwFWqDx+BhpBgviiSSFFlLq+K+/lb48gwmXlNJ8cY3NONEfIQ497F5CI7QZ4e:X/2GT2jxbCX48wtFZJst+GyQiihHlNNfwKsEmxFt9UaWAwpRNPI1IJnL5pVH-zqIEroMNQ6yQcSkP5Is6hNA05jx2ajVGvl0qBfjPenSNYjBCqoXqU21PwcUUSkHMN6OC4AFYmUdqYOGxO751kk7ELQ6taS/JVP7WXxTjHH47Z0mwKjWaB9J2XQhMW7C4Bk//crloAmok/AN01QkBhdtVfHDYlSSh4hi8juMyXynsUIKQMCEYl/9mKHlKTiV6ZCDeeUx1e+TZXAcs4K9ASu4bVIL4NDXTnMfAP4/6o+rKPCzIWqHbEuI7FUxhErXJD0JSxfbPyO1T0AiQKRqmRIcv2P0SaYexQ24iiXIvxy6Fas8JnqLx633eXhZksg6yqQpkuKB/wkdqGnCQH4anJtpmAcIJGkqOcbK8jB1hn8oFsc7fQ68NSH4RfAaEKtyr75lxq2Zr5lRwH2l+cca7DCdNcxIgdXgoYUJb9FEQUDq9X1jrFFFZ6AewZZeJnKgaH8bSx15luaPgHN9LE0eUDy+SVJ6WILfJonqQKa6K7NIUsiMBnO//EPLxw/FoDUebFpTzCQLkdcXTurV7229nqzT5KPNUrx6WjoG75Abw1Sr0tK1bCm7lcryb0HnVDjO/B+FX+acLKVvwO8tAGnyjX5FXLaiTwdrtSpZh0p6CINRDAzoKb5g/S1NJ0toqnq0349vcqW0V4hlk4figgUbI17fvZsFHo745EAKaoHLL3iWDF-XYY2WdWSUyxxfUXOq3F528WOLbPt4uzD2t+EdZ9RM+DBH/nNn9-V0vDMqh2apvLROWnEZ0CBkdmu0u7keJbxhaBXEOk/jIQ6G0tAh96QC7KobRhgM7pQdWU6brbEfmN5PB/7mTsw02Fr7mJKOvGjJ0CtOkEfFqiLhmbLVUogHirPTw4UOHN8h2ZXAT56fK0hPKvXUbKRpFle0FERcxbqgaxyyz+IakceDjcQHsAEHtktKqqfZT81iYQLw4BJqxjF7CrUyka5GIbT6ApidbFJ+57fdwF+tsuOVLPGu1DzOszGzwaJDUQrnVk9Cz7qlXPfZ7cl1Ncf/QbCc9+5y3ujcBQO7ymclW68Ug90L+HsTdpBnRzSd2O6wUdIso7SVOzyVV7cuwQPyBNhVPkZuMooEXEuln0EOgTdpY2EDWeYMQqcnXM0PbmUZc7QUO6etX/M7\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
