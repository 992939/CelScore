//
// Generated by CocoaPods-Keys
// on 23/09/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2001], CelscoreKeysData[1001], CelscoreKeysData[315], CelscoreKeysData[1137], CelscoreKeysData[32], CelscoreKeysData[1172], CelscoreKeysData[713], CelscoreKeysData[893], CelscoreKeysData[184], CelscoreKeysData[109], CelscoreKeysData[1607], CelscoreKeysData[1744], CelscoreKeysData[742], CelscoreKeysData[418], CelscoreKeysData[2462], CelscoreKeysData[319], CelscoreKeysData[519], CelscoreKeysData[2448], CelscoreKeysData[2084], CelscoreKeysData[1424], CelscoreKeysData[2621], CelscoreKeysData[2256], CelscoreKeysData[775], CelscoreKeysData[2076], CelscoreKeysData[152], CelscoreKeysData[1495], CelscoreKeysData[2735], CelscoreKeysData[771], CelscoreKeysData[839], CelscoreKeysData[1654], CelscoreKeysData[2634], CelscoreKeysData[2251], CelscoreKeysData[154], CelscoreKeysData[2740], CelscoreKeysData[2480], CelscoreKeysData[1065], CelscoreKeysData[1691], CelscoreKeysData[596], CelscoreKeysData[480], CelscoreKeysData[1896], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1749], CelscoreKeysData[1287], CelscoreKeysData[1995], CelscoreKeysData[610], CelscoreKeysData[2172], CelscoreKeysData[395], CelscoreKeysData[2478], CelscoreKeysData[361], CelscoreKeysData[1229], CelscoreKeysData[712], CelscoreKeysData[1710], CelscoreKeysData[1263], CelscoreKeysData[531], CelscoreKeysData[2601], CelscoreKeysData[1985], CelscoreKeysData[2426], CelscoreKeysData[449], CelscoreKeysData[2734], CelscoreKeysData[1807], CelscoreKeysData[947], CelscoreKeysData[1911], CelscoreKeysData[1481], CelscoreKeysData[203], CelscoreKeysData[1340], CelscoreKeysData[1089], CelscoreKeysData[756], CelscoreKeysData[2007], CelscoreKeysData[71], CelscoreKeysData[2320], CelscoreKeysData[423], CelscoreKeysData[308], CelscoreKeysData[1535], CelscoreKeysData[2716], CelscoreKeysData[943], CelscoreKeysData[1775], CelscoreKeysData[2406], CelscoreKeysData[1727], CelscoreKeysData[352], CelscoreKeysData[1412], CelscoreKeysData[2367], CelscoreKeysData[206], CelscoreKeysData[627], CelscoreKeysData[819], CelscoreKeysData[932], CelscoreKeysData[2031], CelscoreKeysData[2284], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2754] = "aa69gF1xIa+L/rl7Lcf3KWWAHyXM8Oo27pz8i4EUp+HTXG/dC2ab8Vk/l61p26RyqSjH5zW9372O6pp2o1gRUSwq4+8oNQnTaD9oAV3y7KDKLsBjM6fAdnWbxveXiB5GWV9RzHO6nxN/44Qn7vH+A+IiOV286ramMsXHrbP4PzbaDysdH9kpSsbLbWNJBsHFxhywig/qNxsbxW8QHUPxVcNUynq6XwQgPqDPdDbB6Z1kCY6cTNH5RpXVCZaJlq/uwl9PHuFKCwsYmdDvf5jgfFKxNEVvnW72iakFwUnmrFVjz16zeMv6amzGk1pwk+uYtTWz/eWCSYhIo7xson0A1Z9k8TaWkxpRbTKCosEjj-z0BBsbBJDsXKa+IKxte5OxeGACKljQvLdslFaW3Os81/kgOnEjU+/8h79fPfW9v/naSZJwc8l3lxpklfXpYsrDneHpoBVuLGJED5vJP3XfHPYgh27kFnUHu9eQTCTIKz8sx1DSOajXah/ondIxL46ubXdWemQfcZp++rbzyaw8dlNt6FfstzEEFqSAWCgu/io+a+1YhBBrDlf7b82LN0jIbsKy5PSn9q3hsWOhl1Pc5USX8qUfjA6dVXebzFtow8/hi8z0/yuadptMIb5Pr7TNEvaA7Tju6K4XqrV2fqM4/R1TDDyuPiEoTtOvKJ4r3qJNX9oWzqbDu+KagHCKom9zhqm+IRZC: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
