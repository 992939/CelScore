//
// Generated by CocoaPods-Keys
// on 29/07/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[718], CelscoreKeysData[1042], CelscoreKeysData[1283], CelscoreKeysData[836], CelscoreKeysData[262], CelscoreKeysData[1767], CelscoreKeysData[842], CelscoreKeysData[1506], CelscoreKeysData[2140], CelscoreKeysData[1897], CelscoreKeysData[1394], CelscoreKeysData[660], CelscoreKeysData[2535], CelscoreKeysData[1259], CelscoreKeysData[2196], CelscoreKeysData[2265], CelscoreKeysData[963], CelscoreKeysData[210], CelscoreKeysData[1234], CelscoreKeysData[964], CelscoreKeysData[507], CelscoreKeysData[2035], CelscoreKeysData[1584], CelscoreKeysData[1576], CelscoreKeysData[2372], CelscoreKeysData[1213], CelscoreKeysData[2225], CelscoreKeysData[596], CelscoreKeysData[1479], CelscoreKeysData[14], CelscoreKeysData[168], CelscoreKeysData[2050], CelscoreKeysData[1173], CelscoreKeysData[481], CelscoreKeysData[777], CelscoreKeysData[1836], CelscoreKeysData[2601], CelscoreKeysData[1182], CelscoreKeysData[2335], CelscoreKeysData[876], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1572], CelscoreKeysData[2316], CelscoreKeysData[1054], CelscoreKeysData[644], CelscoreKeysData[232], CelscoreKeysData[2132], CelscoreKeysData[1575], CelscoreKeysData[427], CelscoreKeysData[2215], CelscoreKeysData[2546], CelscoreKeysData[2237], CelscoreKeysData[433], CelscoreKeysData[1917], CelscoreKeysData[1952], CelscoreKeysData[742], CelscoreKeysData[1851], CelscoreKeysData[446], CelscoreKeysData[1677], CelscoreKeysData[2161], CelscoreKeysData[2634], CelscoreKeysData[1017], CelscoreKeysData[2572], CelscoreKeysData[2067], CelscoreKeysData[204], CelscoreKeysData[1995], CelscoreKeysData[1159], CelscoreKeysData[246], CelscoreKeysData[1372], CelscoreKeysData[822], CelscoreKeysData[1369], CelscoreKeysData[1835], CelscoreKeysData[1202], CelscoreKeysData[1856], CelscoreKeysData[2393], CelscoreKeysData[1671], CelscoreKeysData[1588], CelscoreKeysData[1199], CelscoreKeysData[308], CelscoreKeysData[2473], CelscoreKeysData[998], CelscoreKeysData[118], CelscoreKeysData[740], CelscoreKeysData[197], CelscoreKeysData[1535], CelscoreKeysData[2110], CelscoreKeysData[485], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2642] = "sst9c2WMxrdF4WYnZNXGLOeRz3le2tlhLeHjwowqpTKtsV63kHRNFvh8jQ6YJBHruDnjhIKRF5PazxQcIfL6DVYPuMhCdNzWuK8WrFKJj4sum/SeEkfQqE8jI3L1fyuFo8+pQVd9xjwE1BTltffUS92bLxv8iy7S6zv1VUXHnL81DEn6ig3oi6MR0/pX5/jD78C/029+RvK1-nnME+lR56fi8LnXw+X8X13B0zD+asrq1sPNgyMUnR5OkRayZAv1BKjyC/75QTd9qGxvCkzw38ID0pGD3laQiVAxpaz73hJu9xnV0hOIb/5XCHEFCGDqBp7H+i7fVihkrgYDxbrAAmlRNBoojRaJMVh7pYAO2ggeH+zYDVJB4SihAqzhvPg6mNaBTVIJy4Is8weyjVidref5lbK6xKLgyIDdjKl0HpW-Cd4dJ0s9iuIcrOCv8Wemrt2zrlcZ/M4BehhUGYaXAfYiwylvc66n4TxRzcHZ63Qw3SEDQgYRJb5vWfFamRQGlU9YKl2Q27fmBE3Tl+1DdrTwQc0UfWPwMUzAab/QEZ4j8eckc7ru4DWMGmOl28I0Wa4nyxVeW7jPlsYDbTJjJkusjn8oaqxS9x/bRGIxY5LkBBJfioueqcTz2ooMp0BVbPI3e3vc8Oi0Xt+g19pwiG3azj5ltPr91tMe5UpOuoeiw9288nOLaRNXsTi1+S7CzlJ8BHmuOB+JP00RYZba1l5/sPQHMc0M2sa1aAd5OiU60xs4ol9a0i5575fNIzzpcLd0bAJ5o9UW7xIJJdg0eZohB/4+X7qZlHZbNB08gn6CBzYNBHK04W-d+qKxdFHV6QQKE3ZPom09itsToFGEg7xC0Bx0rZyc3uBJFUWc8XdcPQgnnw8MUMy0h/x8JS5BB6DFBH4p3BLeiwZzlxKtBmOkDZIHCdX+0NNdXli4ddcubItUp7ZZdBOsjxaXzrOFNBQfyxZAxDQPU08FwfB40+H1i0rULUvWiqjsw90nP7MFZveSoBanJlfaF1/PR4HKFc4bYFWz2zyHSBMcyeX1+PgLp5hZP+-Z2HBcbBPFFtA8JefSuQ2MU5N6j/g5Jn+TkHC1bCLAC8E8t535o06tV/5dUH6KGMQzjuAAEuUW28+g6H+BordQgLrMkTMzbn07mo5vOxX4hM//NM9s/89ot25OtVoy3/5TkqIfYewortOSI9ocfj8qCR9mJQwKOemDZqczlyknZJ5HPoF9A89l0Y2TY5cPWU9rD55BduspoxW96RXPSlxvrY5qpeoE1gSt4Q/wMZyIdPRIMCThf/08jDLyewMQcevBhnxhrB0MZac40UtmtuvzL4aK//y2NBlogTvZ4cC5ykOSy6DXGtSRqdToS9N99IkEP/UdWyp6WzLMRbyCHA2AU37/PykGPFaXMAsUrAI/EDXd/eRZcrdDt75847vTcYUr9cKLfTp5lOG9lqDeNJK8hrMPf/6MzX9MCddjgnFMzFnglI3BbJEIT7SMg2zJ0JlwExYzUhTRJbJZ8TJp+cGJDKqAPquu8NN1gbWuL7n6+UY0hJeVFmjKJ24a9HkZVvvzvGkWu4mt8w5z0eQ59SJp1Ov/wcHRnyv3coLZ6YwuEcS8apC0QHZCUCH7u+uA7Z0jmIzFfxQT6vdJkiW9Md8UX8cw/q9jEklQGfBuy7T9xYVlLbxqRf28t+wkp8ypRyc+2uz17rloqGmp/XK4RLtmE6HN1MgZFoHOpJvUPGmfXw805jLlxKGMMhAg3UAG4oQ+BbcEK6e6Mx+Xjt9SM4ibxy0/c1VMchjowttGwciqgrzUd2NbojjvKTP5sM6QPQQXhK3F5Jds9lnajG9p+HTEiYp1O4oeFnpzf2JafAYmvk13Accvbv/u25XRM14efLXhm7q2++uGcsFslhH2ZwVaCRNSZfNLh8FhkgaZ2hu+0GFA33U15UijSxqIxDk7vln/dl9V+c77vU5jLu1kOAQm56cFCkqSzIkU1ZmDxZrt6+j4/1/eC1mj2T5tQDwK7TGLt5n/BQbigEst6m6l3WO8YR3iNtm4leTllnd3tJtc8B7J7E0Qyvybu8A4J69Ff2+QAYIXVsMDIxQJvkbV2om57KUVWUYlwY6lWXaWOkO7TiNeYVDmwaMLs/UMrwlyboTQ0DZjL9P92n9/QT28h-gZv802dCSdSWbnyAfZ3M8PFAkWTBuXS1e4rG4nCilOMRGOPZfMfW712dbDHFUwSAgmnoOUcKzXsdG/S7wHeaQRHZnrhQuN4rRkJ6ZqQYoewhmGD1ND6Hae5m38lf1MuALPuENQtRYsARbe13kKu7fYlPv1sKMgNyrmMTN6qZmWwP4u6fo7BnRCqVLjfvGB+lr+BFY8KIBTP2iUKWoJOZ667rw93pctqZVS6KQNf-jRqijGkItxYeJ9/d+U2/0wktyunvrtJo2AyBlvZKT8K92VGpNxYFdztsqBcO96p0ve1TETcYBusHgTp1amhFN3DvEJLN4ry36HF42Q8GfInAxbSUHfzpOjp1Uzj4ZL5YHvct/rU35HYwuAvV5+/AUYpY:nxNt5pLnhAEeCsjplYNMjfiSM9hoCL6qefbctlDDxb3QAaIQ+Q41tvKaVwPHvliqfX+l8LDJtNT72DkTjt5Gi+472yw==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
