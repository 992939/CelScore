//
// Generated by CocoaPods-Keys
// on 28/01/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[891], CelscoreKeysData[887], CelscoreKeysData[1450], CelscoreKeysData[2082], CelscoreKeysData[1820], CelscoreKeysData[1919], CelscoreKeysData[339], CelscoreKeysData[2118], CelscoreKeysData[964], CelscoreKeysData[683], CelscoreKeysData[1327], CelscoreKeysData[841], CelscoreKeysData[829], CelscoreKeysData[1512], CelscoreKeysData[574], CelscoreKeysData[705], CelscoreKeysData[1392], CelscoreKeysData[806], CelscoreKeysData[2216], CelscoreKeysData[1225], CelscoreKeysData[716], CelscoreKeysData[1360], CelscoreKeysData[1527], CelscoreKeysData[1379], CelscoreKeysData[424], CelscoreKeysData[505], CelscoreKeysData[1043], CelscoreKeysData[485], CelscoreKeysData[1315], CelscoreKeysData[1210], CelscoreKeysData[1657], CelscoreKeysData[411], CelscoreKeysData[388], CelscoreKeysData[1893], CelscoreKeysData[1316], CelscoreKeysData[1802], CelscoreKeysData[287], CelscoreKeysData[187], CelscoreKeysData[674], CelscoreKeysData[1538], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[638], CelscoreKeysData[394], CelscoreKeysData[1326], CelscoreKeysData[1215], CelscoreKeysData[1813], CelscoreKeysData[2157], CelscoreKeysData[1579], CelscoreKeysData[848], CelscoreKeysData[1354], CelscoreKeysData[222], CelscoreKeysData[1130], CelscoreKeysData[1174], CelscoreKeysData[335], CelscoreKeysData[968], CelscoreKeysData[390], CelscoreKeysData[722], CelscoreKeysData[1153], CelscoreKeysData[1624], CelscoreKeysData[1144], CelscoreKeysData[774], CelscoreKeysData[797], CelscoreKeysData[604], CelscoreKeysData[199], CelscoreKeysData[1518], CelscoreKeysData[2246], CelscoreKeysData[637], CelscoreKeysData[1990], CelscoreKeysData[1614], CelscoreKeysData[1683], CelscoreKeysData[1517], CelscoreKeysData[2023], CelscoreKeysData[1184], CelscoreKeysData[562], CelscoreKeysData[1252], CelscoreKeysData[1880], CelscoreKeysData[397], CelscoreKeysData[2163], CelscoreKeysData[484], CelscoreKeysData[2241], CelscoreKeysData[129], CelscoreKeysData[2044], CelscoreKeysData[1943], CelscoreKeysData[1420], CelscoreKeysData[1057], CelscoreKeysData[982], CelscoreKeysData[2155], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2298] = "+L2QLaUoh341SwWp/KtKI6GCXimfqnCAswDSZC9oI9QAXTm/1NTqs8VYM6W5Zsa1z3zeUO1zH4B2FmQVb1oTKllSqASNaaV1XzIzZ7w0h3k0fhcIl6+O4Ljzp8G9JhR4T0MplRbVYzqLCpHsBILnS4L0QSgtlpzOoOwRV6YYHzc8ZxLTF58C18qWnlV5XfUwwbiOQp2bralczsjeT8uJ9HHULCJp3I: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
