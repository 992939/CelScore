//
// Generated by CocoaPods-Keys
// on 12/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1014], CelscoreKeysData[1159], CelscoreKeysData[2649], CelscoreKeysData[2890], CelscoreKeysData[2988], CelscoreKeysData[1525], CelscoreKeysData[1694], CelscoreKeysData[2456], CelscoreKeysData[1765], CelscoreKeysData[599], CelscoreKeysData[1518], CelscoreKeysData[715], CelscoreKeysData[1835], CelscoreKeysData[2772], CelscoreKeysData[2670], CelscoreKeysData[2321], CelscoreKeysData[1661], CelscoreKeysData[2170], CelscoreKeysData[1838], CelscoreKeysData[2128], CelscoreKeysData[2515], CelscoreKeysData[603], CelscoreKeysData[1210], CelscoreKeysData[2602], CelscoreKeysData[1989], CelscoreKeysData[2502], CelscoreKeysData[627], CelscoreKeysData[2875], CelscoreKeysData[375], CelscoreKeysData[2775], CelscoreKeysData[3058], CelscoreKeysData[283], CelscoreKeysData[1690], CelscoreKeysData[1689], CelscoreKeysData[1916], CelscoreKeysData[108], CelscoreKeysData[2036], CelscoreKeysData[697], CelscoreKeysData[2412], CelscoreKeysData[1493], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[454], CelscoreKeysData[2230], CelscoreKeysData[2517], CelscoreKeysData[624], CelscoreKeysData[430], CelscoreKeysData[2227], CelscoreKeysData[2144], CelscoreKeysData[1066], CelscoreKeysData[2929], CelscoreKeysData[221], CelscoreKeysData[578], CelscoreKeysData[231], CelscoreKeysData[2053], CelscoreKeysData[2417], CelscoreKeysData[2344], CelscoreKeysData[1543], CelscoreKeysData[869], CelscoreKeysData[1715], CelscoreKeysData[2301], CelscoreKeysData[1684], CelscoreKeysData[237], CelscoreKeysData[1010], CelscoreKeysData[3015], CelscoreKeysData[2709], CelscoreKeysData[547], CelscoreKeysData[2849], CelscoreKeysData[1980], CelscoreKeysData[479], CelscoreKeysData[2778], CelscoreKeysData[874], CelscoreKeysData[1677], CelscoreKeysData[295], CelscoreKeysData[1778], CelscoreKeysData[2999], CelscoreKeysData[616], CelscoreKeysData[560], CelscoreKeysData[2980], CelscoreKeysData[2762], CelscoreKeysData[813], CelscoreKeysData[587], CelscoreKeysData[2299], CelscoreKeysData[315], CelscoreKeysData[1106], CelscoreKeysData[114], CelscoreKeysData[1878], CelscoreKeysData[2013], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "9lmECjwghKb4yfUhKojLtYCOT//JtRiYdP35hi+ucoyBIrkSDmnkWBEpzifBrqQkS1ZbpxiTBMw6WYTKhXZ/KrOVLW1xd3IKzQbjOo/XrtgYjGOA7Z1gqE1YhIT1JrNzedNtE2c9OaYaWNw/seZCC5Dg0bTe33Ow9+l18bXiCJ+GQ0wf94oV9y57Rwl2ZQWsiOt1hmQvu7FN9Uwl8okxa6hkli9qv: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
