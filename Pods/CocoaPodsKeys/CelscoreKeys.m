//
// Generated by CocoaPods-Keys
// on 12/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1921], CelscoreKeysData[444], CelscoreKeysData[2529], CelscoreKeysData[1067], CelscoreKeysData[645], CelscoreKeysData[25], CelscoreKeysData[1983], CelscoreKeysData[1598], CelscoreKeysData[668], CelscoreKeysData[572], CelscoreKeysData[636], CelscoreKeysData[1711], CelscoreKeysData[2468], CelscoreKeysData[1795], CelscoreKeysData[834], CelscoreKeysData[2524], CelscoreKeysData[479], CelscoreKeysData[1828], CelscoreKeysData[793], CelscoreKeysData[21], CelscoreKeysData[255], CelscoreKeysData[1529], CelscoreKeysData[1552], CelscoreKeysData[1416], CelscoreKeysData[608], CelscoreKeysData[2025], CelscoreKeysData[1467], CelscoreKeysData[79], CelscoreKeysData[66], CelscoreKeysData[1496], CelscoreKeysData[550], CelscoreKeysData[1004], CelscoreKeysData[268], CelscoreKeysData[2630], CelscoreKeysData[96], CelscoreKeysData[313], CelscoreKeysData[646], CelscoreKeysData[1737], CelscoreKeysData[972], CelscoreKeysData[2536], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2309], CelscoreKeysData[695], CelscoreKeysData[2561], CelscoreKeysData[914], CelscoreKeysData[1246], CelscoreKeysData[2205], CelscoreKeysData[2482], CelscoreKeysData[562], CelscoreKeysData[2632], CelscoreKeysData[865], CelscoreKeysData[1623], CelscoreKeysData[1836], CelscoreKeysData[1937], CelscoreKeysData[1318], CelscoreKeysData[1077], CelscoreKeysData[47], CelscoreKeysData[407], CelscoreKeysData[1106], CelscoreKeysData[2288], CelscoreKeysData[2531], CelscoreKeysData[2549], CelscoreKeysData[555], CelscoreKeysData[1290], CelscoreKeysData[2275], CelscoreKeysData[1019], CelscoreKeysData[620], CelscoreKeysData[165], CelscoreKeysData[1375], CelscoreKeysData[1413], CelscoreKeysData[1948], CelscoreKeysData[1707], CelscoreKeysData[228], CelscoreKeysData[2260], CelscoreKeysData[840], CelscoreKeysData[1096], CelscoreKeysData[9], CelscoreKeysData[2552], CelscoreKeysData[466], CelscoreKeysData[2142], CelscoreKeysData[1876], CelscoreKeysData[1781], CelscoreKeysData[596], CelscoreKeysData[1355], CelscoreKeysData[985], CelscoreKeysData[235], CelscoreKeysData[2188], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2642] = "33ZpSRbLg1S/w4NyZvxeOyuXg6UcULxEY1ONOYcpAs4JBpEeSBLnAuxYohz9jBcuaoMqG94DKijHErGJodTm3E2tWgXCqrca9CCv5np+0hQb8cVpejQhwLxq+xTrDU9SGcQ8WlJWihqan3LH7ji7G8IdI0QM2Gp+vsc7h5NcFIAd6h8bZXjfqFXEqB2VqMmFW25DP8nvgtnStjUrrQA67kg+un39/PxkpRhg8O0KzKw6hm75Bc7GXOJj5jB7ObRaN75i2NTj4sNF2ZVzKz23PBdj++AZKFC2DHw/XmwA61NIvvWDcLE4XhSg7jqaWjyNgyO95akBRUQhHrv9jtupo8oeaeaHW9TEDLDVT4KaV2PD2qSegOjv9fK6V6PcsMdPKZ+1Sp5FJAS9AQJuf77ou/3eo9D9QFW2R7caY1clqxISpDqQ6otjogAT0vl2X1nigCWvL+g6CVTWnlVkFAbikrqdzTzBdkafkooRRKNqh02RweeKtFg3nWsT9UPXmcCmWc+f9CJENob+c2T4uGxIy3ZKgXOtP2uVZ1j6nNn6NfJ9/Tg//x-x1HGkdFIDsW1r7Qsor/bEEQAiMl5AP7Iia/LYbKYgF79WOy8CQHy4IYM/4r5ktuIh4j9NzRR42lf/aknLd7KTvFcUfa4kRkcKppXDHNM8b/kmPy3iBlX7AZWcH2SrscII4PAsIOHMFbU/bu3VipL2ovS8NJv3roVY+HLQdgY2Ts4rKIfB8nhoFr+uE+sZkV7UYEOBjbkuJiH2c6fQcvYzTBC1lIMb6b7C7LvU69WQGMKOocNPExE7rh9+ZjLKf8heF+huHdewPZ1nODr6Gyci-q8frUcUaB97hqcuva9zMnbtA:lo9lYRNzA13kQKmeZ3Kyc6+KR+SBN47Ag4V+4P7Yhn8rCFZtes7BEigbtSaPjy3wJlycFV8gCw1uR24s0Sw87+6lbL48CeJGJ4Dg7XIc3tuAu+NA98Ro4xI1tmfypchBR7UORgNbuidqxMhW3TdKstsvS4D1o8c6Hy9eab243CJ7u4NMR0Ufodt7vDHbHTDHmWSUkp1i2ECWKtdqCMHdlMSWIPG/LHBMV1t5bn9QrX8pdifebmhtHjvBT1m32ChbsTzIfgNT9588x4Pxhyd/Oq0jbEEf7jXpHDm+Q2avtUXFtseHsPCPchoInCpupoFwcg6fJCwhXsOERC2jj8kXhc5mhi/4Qa77d8APnB27rdekCzzGOk2DomJQr2SUadPjrJ7E4LigkE2V+xysp4RV2oiACsVb1zY+LEqOXIDfbsD5khoK+i4HpmwncXudOjtJ/FpWdZGOenu9OxK9H0L2GzV9t4VIgt4pJAv2hDy8b2MlHxjNDPe4wHtltR3P99Gcl6A8T9d+v+jbwYvNnxTLSM8c/GIrQvgWR6W-pL8z/a95ZEJV2IF+t7jRjRolhf1JP92NRem5Ogp9xNfNqxohjA0jMAzM5WjicwM3QNduvnvmVMAweazpkqY1nHhOrtpAYMFmVi3iTq7y7JuQRs/v9jw8yJdEkRCLMd1ueFlRZogVD19XfQWkEG6z8HiinY/J7nQCi91Ijz4PtMAqToyB2lolNdb6Y7RPqFCNZinSa8mcdPgPM7HSpdMG0AwlKJOEZKo5noMxvoOZm42P1Tr3MyLpFFi72DDdJ2JiJFCuYu4f8UlfJU8IYLghmPRTziCU/4bku0cotaxSiia+z3DLtT9pJb4/v1JEMYpL8cx5fnP0ZrHr+4YnjMT4W6Zg9YX1naUULqka+cthNFeAHkX8eocoAzmU/pKTy9suHgqJ137VlYyPB74FKaNGqIkN5lejsUlW1znyEf0UpcmhioyOE9LuGRkJrfoJWZT/g8J+hvY/4/BRa10U1/blS5BCODkMFowgt0tc+Su2n7ELKS+tT+VydJJUxbk04oCYtFGEGdV1Dhf8etOnz1yJut9+xnE9wmoXj3yKEYwhyfu70LE/cokmqcEpk0/4ODLC3nwTUDTcYuS1/Eecizou7ybrc+X0cSgEuThehyc3vvf/Ap3zPv1QWWdYz8jZ9pvcA2H+sIT8h+uzHNnToIAz9sGxw+7rRw73KemOrf7qMvFxXNRH0thBcP2bU8bYrhnIZIbC+UkSoSmnK5CwOrqF2Ueu1gQnhqyVhMo1DuFSQpmN6w0YaDMnP9HS5Hrulwe9uWS4N7c9J2VgZh9vKuGfwUosd8usfbwqGkg1M4kbIaULGX6DQ8ooiC/oHH80N75VvezSs6X19xR8LyfF9Hg78SGVC+d2g-f8qy5jCYZhUf-bbL6pHCb5+1YKXAF4/CSu5mnjrs/wsdFK4TTvYIs6/dR2oShaPRApzg2X0y37IODEEVs4vU81oW1HtMnaBJUKwU0Uxlfqswy4O1ivvMxkVXkUWyTM8U5HGBSY+RTPcY/RbBBhQ+JUdHJfCPwIhy2w5SLSQN/F9a5DYv3UAalGbxoENNp/zoAETWodUk1tfY7gtqLw2zeLHfu7B0hGIUs2wgCmMzAhnoQ2f/WeHCpzLCYakK+wt72dqOPDwc+A9Zuq+oX1lGcSqXDCgdG-k8KNbRyYVaHGb5owtP3Q9afmFdwc16p6WD62ePs78pUSDD7F9aXK+gNYI2d7AHV2jLe8T51ucm6g==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
