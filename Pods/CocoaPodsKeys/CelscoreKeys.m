//
// Generated by CocoaPods-Keys
// on 11/10/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2431], CelscoreKeysData[2490], CelscoreKeysData[2301], CelscoreKeysData[1468], CelscoreKeysData[633], CelscoreKeysData[1985], CelscoreKeysData[2118], CelscoreKeysData[897], CelscoreKeysData[1837], CelscoreKeysData[2410], CelscoreKeysData[34], CelscoreKeysData[71], CelscoreKeysData[2102], CelscoreKeysData[793], CelscoreKeysData[961], CelscoreKeysData[1353], CelscoreKeysData[363], CelscoreKeysData[523], CelscoreKeysData[2504], CelscoreKeysData[462], CelscoreKeysData[369], CelscoreKeysData[816], CelscoreKeysData[2517], CelscoreKeysData[1560], CelscoreKeysData[1675], CelscoreKeysData[154], CelscoreKeysData[1860], CelscoreKeysData[1584], CelscoreKeysData[777], CelscoreKeysData[1125], CelscoreKeysData[1405], CelscoreKeysData[1626], CelscoreKeysData[1704], CelscoreKeysData[1169], CelscoreKeysData[2239], CelscoreKeysData[1371], CelscoreKeysData[947], CelscoreKeysData[1993], CelscoreKeysData[2068], CelscoreKeysData[280], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1212], CelscoreKeysData[2711], CelscoreKeysData[702], CelscoreKeysData[1581], CelscoreKeysData[798], CelscoreKeysData[1632], CelscoreKeysData[1563], CelscoreKeysData[2025], CelscoreKeysData[2512], CelscoreKeysData[421], CelscoreKeysData[1612], CelscoreKeysData[371], CelscoreKeysData[93], CelscoreKeysData[914], CelscoreKeysData[1486], CelscoreKeysData[866], CelscoreKeysData[284], CelscoreKeysData[473], CelscoreKeysData[101], CelscoreKeysData[311], CelscoreKeysData[946], CelscoreKeysData[319], CelscoreKeysData[457], CelscoreKeysData[1807], CelscoreKeysData[53], CelscoreKeysData[1396], CelscoreKeysData[1319], CelscoreKeysData[1477], CelscoreKeysData[1856], CelscoreKeysData[346], CelscoreKeysData[352], CelscoreKeysData[265], CelscoreKeysData[2243], CelscoreKeysData[412], CelscoreKeysData[1727], CelscoreKeysData[2130], CelscoreKeysData[464], CelscoreKeysData[2646], CelscoreKeysData[183], CelscoreKeysData[1537], CelscoreKeysData[2163], CelscoreKeysData[2053], CelscoreKeysData[2408], CelscoreKeysData[1841], CelscoreKeysData[2274], CelscoreKeysData[360], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2754] = "lEojA+0NAB/nGKIKpIATW+wQO6gxhtjhqD2ucD4MUqMg8djzKjwcI4/EXuXkYOx3GSauvwqiFUi0sKwmecwgBnlxkgR0b81eIqHZv-IcQYglkEfz4M401gZmLr2lDz0G4kQadheb7qhXLanTuNMQwgbUgRejyMFuwZ8cNcqZjYflbmBxF+nocH31VR64S8fg52Z14Vl6hjy2xzzmserXqIfr+ftP9ADgfUH8zJtJkUCw713SE8Feas01jXle0PdS5EEmMRqR78T/ifb34J4OiQLKPKu6eL0W5ZKoxEkRPxXqSh89zBosPpo7vcp0jkj9PxRb7mF4loux5ggV1epI48+16q9W7GOcaMDfC150cUlfLfc7waL0fBALX08rsKzo4tyVQ1qnBv1a5P06Fx67Iw54zfRx-T8GuHtlx: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
