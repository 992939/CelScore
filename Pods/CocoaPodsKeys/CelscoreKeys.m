//
// Generated by CocoaPods-Keys
// on 06/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1176], CelscoreKeysData[2600], CelscoreKeysData[1317], CelscoreKeysData[171], CelscoreKeysData[1187], CelscoreKeysData[235], CelscoreKeysData[1690], CelscoreKeysData[287], CelscoreKeysData[833], CelscoreKeysData[33], CelscoreKeysData[1654], CelscoreKeysData[1322], CelscoreKeysData[1492], CelscoreKeysData[2137], CelscoreKeysData[539], CelscoreKeysData[2175], CelscoreKeysData[1471], CelscoreKeysData[947], CelscoreKeysData[814], CelscoreKeysData[1857], CelscoreKeysData[2109], CelscoreKeysData[2631], CelscoreKeysData[1750], CelscoreKeysData[1203], CelscoreKeysData[760], CelscoreKeysData[844], CelscoreKeysData[1977], CelscoreKeysData[532], CelscoreKeysData[1201], CelscoreKeysData[970], CelscoreKeysData[2093], CelscoreKeysData[1956], CelscoreKeysData[2202], CelscoreKeysData[1984], CelscoreKeysData[715], CelscoreKeysData[2250], CelscoreKeysData[1646], CelscoreKeysData[857], CelscoreKeysData[2079], CelscoreKeysData[2196], CelscoreKeysData[68], CelscoreKeysData[152], CelscoreKeysData[821], CelscoreKeysData[1608], CelscoreKeysData[530], CelscoreKeysData[304], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1195], CelscoreKeysData[1736], CelscoreKeysData[780], CelscoreKeysData[1031], CelscoreKeysData[2315], CelscoreKeysData[2281], CelscoreKeysData[2104], CelscoreKeysData[432], CelscoreKeysData[41], CelscoreKeysData[1671], CelscoreKeysData[1727], CelscoreKeysData[1542], CelscoreKeysData[311], CelscoreKeysData[1916], CelscoreKeysData[2036], CelscoreKeysData[561], CelscoreKeysData[1154], CelscoreKeysData[1772], CelscoreKeysData[351], CelscoreKeysData[1600], CelscoreKeysData[1702], CelscoreKeysData[982], CelscoreKeysData[1248], CelscoreKeysData[75], CelscoreKeysData[320], CelscoreKeysData[245], CelscoreKeysData[452], CelscoreKeysData[1577], CelscoreKeysData[2034], CelscoreKeysData[507], CelscoreKeysData[2124], CelscoreKeysData[1326], CelscoreKeysData[927], CelscoreKeysData[1917], CelscoreKeysData[636], CelscoreKeysData[2464], CelscoreKeysData[471], CelscoreKeysData[2008], CelscoreKeysData[2357], CelscoreKeysData[1684], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2642] = "leyIYWfIwoBgTA2NAcLh7f/R08uiNuDFz:LhgoyT2bmrZQPjeE5n3M7PfdYVagvY8no78ita94l8jwMMIzH7cs9TCSCVCtfyWnOZIFl/+DC/u+rvOqL7HGapDxSRf/aKLX6ayNUak07CMxdOhCAtf0KRa9SOt2dko+hlniURjaEeb3f+aTIVRtOpi/ujf39wdYvovUoDadJnHK3puPm+7GNP0gIUGYv+1/PpCbXWj47s5U6/GZdEoeKMpSpQaHUO7PR6XerJ+wHpps/XbEPIt4aJJmXJ2SJ-icKhbWRh0bYjqfVbcmg21J0A5NtKjE2mO7xGPpw/r38vpbLMEhnUJ0NHQOLrTwM9AuTX0AROKuz+wHQeZGaxl9N1PACHF68Zv94+urY4vKC81v16awoowk4MMMF7Nst/9CqYwq6xzYM4BzxrYDx9dhX2T8rcy82v7HxtAhEH6M9HJaV3T4TKKrIKROBLsXGiP9ZAH0spMIWFu7IB38s5sI5XveBYKYOzSX3bGLonnXZCFWx+vw6V9KS7qoudlnEicdYENkI++UX4XIrOIYY8PhSoDRRm2Bci7MxczC2WRpN2b2qe3IjmUg93rMRbEVg11mQVpt/WZSx8hFi1GpEJmQEjMO029RWJ3ak2irzVAgyIQIYlhp67NLuTa4qmfuyXTlerwgQKhsw04G9p0L2OehCmwmUoixxf9aoPPcAC78S9Pt5lZppI5HnPZ9DLS6lAy1q7hkDWENBM6swcrK4ogg9K42MZ99arLmMVB73Rf0PDw2Wij9Ij1PHCIT1PFEI34LHvnaxBGOmq5s-sfy+4k2rQqBpTVMZOh1yuzLqsvfPA4CAEII3KfwsqibKEJzQol9s21EAZ4zPxqZj9n5PkThQvm0GF4hPAfsN8VpsL+5V/DeaYghWGQweNqUX5DG02pmt5Qsa0kThGC5e2ppQbZpl+B4KYMVkgL6iG1WHLe790Po2Ym1iACt8jq2BpkNNCiKUcN+dvF2r4Xnb1pPYEay5c7eDhTFa77oQtArMEkyNdytix3TpR6Np1ikDOlLQ5HiCeBD0p9VC2TinveYo3SW0dxvTu/GDAZRt3MW3Dqj86b2FI/F7yfYvaDt0SDgwkzAYpZ+QSN29+yvwFEKrVYsw1VY95J+VPjTf5Y+PI3N0Fn4D9n1nxwWsauX/IstfxVUAaQJ/MVgc0hCuXc-A-4j1ImZp+1yrhu0cWN//Pyvd1sv1ii2m2ie2J0GJosDKM9f05liV+uL9hC0Xev1e3X/IIqxNPuiIogB/BaGa5kvFLYiTb8oeygF/ZoY84wWIaU36Hl-vMqS05VXd5hO7Wzb5YEs8OuP8BHJlndz9XA3NNOq7se7pwe9qJZLKkTeJ/OYNOSfTPCPgk1tUmn3tHGm00RRwv2IlzTGZrzxiCM7MfJSHaQvTfE7rCVkPbSvyGcXBhMQz2fh75hAGRw6q/tWwLGuwbRM8e8bzIP0E3kV/P0FyfqH5L8keTVJgDSPz+y3ERXsz2lQ6FLSVkuXJlVVfNw1V9OcJ/M/d3sFis8HQjWMushZ+g7ZaaIvXQQbbM0oMZnqLyEJ0FMAl+UV6qM4T/LfntVGnOyIPuwtLI1blkYULpwIqRM5Fqz20aXLqIAAcItK+qYeMYY2csyH6luGdapnHv259d9lv2rt7sYMQkeQ979/KIPic+Stt8pLzV/WB/H8aGkC3rcOx/jmc/Ln1oN0XOGYd2rNz5HeOtXa2B8C3dIAmnrGbtyQwOgWiXVEZ3rIwkrl2UlMYVJzhO8rIi0+Re21DPywMT+ppMga38XTi6wlB+nxKt/nRDvjSsrn9SSmYpIaWaMbAEZTre5rSPUL2ABiPWO7o+HGpW2LaTRGKuRcghynpAQ9MiBqL2ej/6GrmZHpEv59srjDaFRWNwkoor9TkFtPncZpMMVQy79VUSoGRIo1VdmwNptHysVbxG8bcLkN8aBMmht5vO3Uv6p5DaeY04-5OnOl32rNtUhDK8ptGYjcgg5Ix9tobK65Zi+Le9j5PJQSGb57MvrJ8GrqPIeEgyotygvYuRmj249gNmdZc3lhty/Zs+f001uiiEivICkS4bBa45jrPUopCF0C+9o1pXXiKJpEyjVu9tn5kfS7Il/EXPrdMOpXVkyrt3+GDEJacS7RXZ+WgNLwK+pR3zoPNepsN9hrFPOorjjYeVgdqJ0FotSyfzD7duUKOj5DXRsbCc6TT5W9bjYb2rA2/eDU/CnqlawDluSG1/Do1mcGbLAbZuo/+96N3I/pRyiT9xA6ZLAvN6FtW5dTtpi5bTwnYPKgqIyfALyOF7gSQ1SIQWal0tZZoPU5b6Ofa31DvTPjkHKmJgJtokeuprnY8l5dsAzFCOkmRqPacHsRHaBID9Kw4MQ+efQgkeetzEZPVpXW5jyyiwE6kzloENGaRv2lS04VJME+3NoeWa6T1/n4jNmC4+uSjqQBnejsW4Rr1B1V9OHmQ47r+IWYjyN6A0LQ3tpb3b+lpD5SSGiYjk/RuACWZipBRTuKkkL6sFAx3wxz9dlS9B4N2J9DJBjOPktVgoGEIWlPGMuIVYGb/wSi/6kq50t8lS9B7Li7l06NBOs7YaDCvwUicrVBGOYdUVCboZ+ENdgwO95NqP0Q==\\\"";

- (NSString *)description
{
  return [@{
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
            @"kAPIKey": self.kAPIKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
