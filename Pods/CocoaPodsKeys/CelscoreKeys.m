//
// Generated by CocoaPods-Keys
// on 29/09/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2382], CelscoreKeysData[1362], CelscoreKeysData[783], CelscoreKeysData[2310], CelscoreKeysData[146], CelscoreKeysData[149], CelscoreKeysData[2593], CelscoreKeysData[836], CelscoreKeysData[917], CelscoreKeysData[2007], CelscoreKeysData[2565], CelscoreKeysData[1633], CelscoreKeysData[1252], CelscoreKeysData[990], CelscoreKeysData[577], CelscoreKeysData[45], CelscoreKeysData[36], CelscoreKeysData[710], CelscoreKeysData[2138], CelscoreKeysData[1916], CelscoreKeysData[54], CelscoreKeysData[2367], CelscoreKeysData[2559], CelscoreKeysData[1878], CelscoreKeysData[532], CelscoreKeysData[1062], CelscoreKeysData[2219], CelscoreKeysData[393], CelscoreKeysData[1154], CelscoreKeysData[740], CelscoreKeysData[2113], CelscoreKeysData[1003], CelscoreKeysData[1823], CelscoreKeysData[711], CelscoreKeysData[540], CelscoreKeysData[1740], CelscoreKeysData[893], CelscoreKeysData[2611], CelscoreKeysData[9], CelscoreKeysData[2330], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1668], CelscoreKeysData[1861], CelscoreKeysData[1635], CelscoreKeysData[242], CelscoreKeysData[1291], CelscoreKeysData[2492], CelscoreKeysData[1212], CelscoreKeysData[2416], CelscoreKeysData[2291], CelscoreKeysData[789], CelscoreKeysData[978], CelscoreKeysData[695], CelscoreKeysData[661], CelscoreKeysData[928], CelscoreKeysData[579], CelscoreKeysData[226], CelscoreKeysData[1114], CelscoreKeysData[961], CelscoreKeysData[1622], CelscoreKeysData[824], CelscoreKeysData[1069], CelscoreKeysData[1657], CelscoreKeysData[2167], CelscoreKeysData[1031], CelscoreKeysData[1699], CelscoreKeysData[1030], CelscoreKeysData[750], CelscoreKeysData[1336], CelscoreKeysData[153], CelscoreKeysData[771], CelscoreKeysData[2356], CelscoreKeysData[2232], CelscoreKeysData[2494], CelscoreKeysData[903], CelscoreKeysData[1956], CelscoreKeysData[2390], CelscoreKeysData[33], CelscoreKeysData[986], CelscoreKeysData[1479], CelscoreKeysData[2603], CelscoreKeysData[1473], CelscoreKeysData[633], CelscoreKeysData[2594], CelscoreKeysData[72], CelscoreKeysData[93], CelscoreKeysData[994], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2642] = "mIR/jx8wKuJSScHWaDo6YDkoWzdLyEOs7c5UfwFvXygImYEDQYOgxYaT1gl7MosdIGfDDyuf1uLl1c90viB+DnoAUb6106x39cHKTJ2Wp6tMpdCp7+Ysy/sjcnfbPMpFy/KCdcFxTiXgpzhQhD7oV662n-yW2vWvv6C31gdoxvqLdErBgBQM99gJ/bdHIhSk+AIMkaGuLPlnNfIXVcG309Y3Fl4lHhEdZ0eb5DI50/5y+kXBh8eKkTMGwty35OVzUzeoDRvJgDSLm3befXmFT4f8R4MZHDKVJFdTvnBRL1epphMkUojpmdFM1Cf6kIbE5F/N/4hqZAVcipACojgS1dosa1KRbRzV4dwAdDN+ngzjcO+jfSXVUMz2X8BYNNykmfju+LUaFJaCrA3Ki1wbyYGaAU5P8eIE683GsRz1IhgQiBr2Rk2p3hJXri861m6KjdozyIeW5KZy339DjAeAvTGJrLlLjBOo/VH/zwOuWVApV7UiSAzTlEuHc2+6tjytvxBUoGHkR2Z49/asbTXKOUlS+ofm9AfDRlbeiTIyQ/nD8Dz5tFIVaZKrUwRLxVPW1r2dHVDHH1gWdQS1/qiSy7SrgpwyhODa4oaRR1LjZaxLPPuE6/4Uflau6aVDAlPeeynk6QmjPkGKSujb+r9kQ8wjbPriQjLAAzzFnW//TT7ksaHIoD1yPdI0WVanXkoDiFWYPJlTd+5cGXeKPUOmajFZwnq0oQEahGv/YcAq5wAkQf5qKPhZCt37/TKK2SqEVv/9knv0v/gcJ6awqbNQ/:SQEhFcHyKsUe8FW9lQ9bEyF+/9xjd04DRI7ICsi5ufxQl4YM0keBc0fQbNsiK2cvMIu5qdDc0WBXFJC70rEXzjFBcDCopzSfTNGld7XKm54bw00Yd-/RwGGqORgdgjnbra4TsdspxBdy4jc7hWRi+N30CGAr1gVlDyp6Ut4k/DvbjsU+933+d9NW55PYdwhRo6UTbP9n9TvdcXdOJrTludzmplFQFJPTJspNqOln65kU3tWh4-lOrKQlYqGMGe5Q6oBHYlcbqVDRsNOjeXrcKsG13t6LTkrjYRI82MNYGzrA9/WHR1jsB95aW/1U4tWwi0wreq/SzSsZAjLbEb0sKcGiN/zVrmnsH980xeMX4HN/Mvi214gJu6UPnH0mWXE3CYHvwn9TPb6/3LlMN4GrCPJTZ6iyJJLwk5O/xCth0t2X2dlh3VQjtu8yda3995GLoii5EhTs6STD9UAsVhbXpBZZF+OLS+vaI/fJsIEq/VH3zu+rR8hzRa6KRnD068gZr2iPgTV6uxoNi87ZaaGIIAthwU8kk6xyaX9gCUCgYbdNyjiygAOPvJLlqLyfXu6CnacjO3UbEvfeJbxYDPeieTV1Sal5Sv9PoT8Mh8HTPIiLO2oQz8cH0zv7s9IulqMSOe8tSt6VZ3y6MJKaoMgEA2pGrgyx6+DXF5pXigmaRcM8NVPUZ1OMO6emtGsWxhCw/vW7VkMufvZHuklIcfEn2HRtTmFMch8b032CsnThTunZPPNUZEM8aYAKWpqnsOIhturkH8HbhZOFKiIMX4AF8Nl5PrjfgCi6Q78oCe2imr6fFvUOqaVHRrrIWiZDBJkl-9duPd2qy1li2-wCZ7YfR5UjJ/fKaUzICK39AHDtZjMtzMu7xxQ0iktEnc7WGbZi1hvBnd3oyl65J4eLKs6Sr+dMCaA+Wd1HdNJUu0sUb0UCjL8CAUlRzLj3rJHkhqwHmzcgn3hKHNIgk4P+dj1SfZ3eqJZNjyCNHWtpb1E7xxuL/9XcrsFUdMJUbvdf81B3Bjaockb9h2GDFzaWyaP9qY84VZsjnNusBwLZbLCqaSFgLZ1sALulHQCuMPv9DTM48C03DGqJmELZkwDGFEw8JnKZBS8XWxgeMX+o3py+2IzwcTTHH7D9yTTGfQJ1j+v3ukfkOxV0knP6WC9SCIA+8e8brryFFE4C6MgiW/+oOqXyPNGOLvWQfExRgKXI6FBr6sxIMXzWDNnq+MUTXwtooYyIslmdHzu6CVV6AUnPPPaU3x69/r+6XMzLymLTYF99FsipOlpGprqwmCGXbI+3yKi1G3XhpTFrOgIntLB9c2jnBQ/F4HtPOn0F3iPrV2rUBRHo93BGHWW5yGQbIBhSqOWnzbXmmXoidb6KFDmoN5YAbmPUyBYMHy0mnDToXwr4fRQ8Z3Z/dCvxR9WBJSwJoA8ome9KNdT6de89N4mLaq8IzN3377BhVuFeUCJQruFam1/d7ZgRJpFeXNMXBF5JKh2Pogcgl1vpDNieU1yzvancHP7GEkt51YIwpc+HwWrerGv9PyT9auHr1zZ+Cv4RO7XkTBhr0WalNInCePY9s8NbFBn/hQSpd8+d0/aYk7cI1EGWr24nfdNdsn/jrHuuyfsJ/V-FhlRWKiMnANRdmD5TpjH0+az+I+PZ9bX9/daeldYxinOr0O77EcByCU2UQO3jddaRQgJVnze2D8smfj/460Ues0UrILXvT+mtsfu2mEv6qrHm03PC+DOGlH3ZJ1mkEKqAkEvFsNx+brmgl9jIdDe2z4CJusxe8sxYXGEdZFRUlP0taBh028q0z30Na0ZZkebcT536NVeRH0u0fCEXm4ygidMwkegA==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
