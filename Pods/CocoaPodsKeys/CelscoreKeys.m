//
// Generated by CocoaPods-Keys
// on 13/10/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2219], CelscoreKeysData[1249], CelscoreKeysData[2214], CelscoreKeysData[527], CelscoreKeysData[323], CelscoreKeysData[1443], CelscoreKeysData[294], CelscoreKeysData[1377], CelscoreKeysData[885], CelscoreKeysData[1672], CelscoreKeysData[1407], CelscoreKeysData[1632], CelscoreKeysData[182], CelscoreKeysData[534], CelscoreKeysData[1282], CelscoreKeysData[472], CelscoreKeysData[123], CelscoreKeysData[629], CelscoreKeysData[1031], CelscoreKeysData[1882], CelscoreKeysData[166], CelscoreKeysData[321], CelscoreKeysData[450], CelscoreKeysData[2235], CelscoreKeysData[1472], CelscoreKeysData[939], CelscoreKeysData[828], CelscoreKeysData[1444], CelscoreKeysData[1070], CelscoreKeysData[1627], CelscoreKeysData[1658], CelscoreKeysData[297], CelscoreKeysData[850], CelscoreKeysData[1957], CelscoreKeysData[1512], CelscoreKeysData[1352], CelscoreKeysData[905], CelscoreKeysData[1862], CelscoreKeysData[1659], CelscoreKeysData[1180], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[200], CelscoreKeysData[156], CelscoreKeysData[745], CelscoreKeysData[1454], CelscoreKeysData[1841], CelscoreKeysData[1613], CelscoreKeysData[2279], CelscoreKeysData[652], CelscoreKeysData[884], CelscoreKeysData[737], CelscoreKeysData[2209], CelscoreKeysData[279], CelscoreKeysData[1517], CelscoreKeysData[1946], CelscoreKeysData[1437], CelscoreKeysData[1430], CelscoreKeysData[1190], CelscoreKeysData[1383], CelscoreKeysData[560], CelscoreKeysData[2170], CelscoreKeysData[1429], CelscoreKeysData[1817], CelscoreKeysData[1558], CelscoreKeysData[1877], CelscoreKeysData[1852], CelscoreKeysData[970], CelscoreKeysData[1024], CelscoreKeysData[1859], CelscoreKeysData[1515], CelscoreKeysData[2004], CelscoreKeysData[2297], CelscoreKeysData[1088], CelscoreKeysData[121], CelscoreKeysData[1404], CelscoreKeysData[2000], CelscoreKeysData[2241], CelscoreKeysData[1146], CelscoreKeysData[1768], CelscoreKeysData[2295], CelscoreKeysData[1119], CelscoreKeysData[299], CelscoreKeysData[1868], CelscoreKeysData[1463], CelscoreKeysData[1406], CelscoreKeysData[1803], CelscoreKeysData[173], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2298] = "1Wm6HZpaDZ6eoSuM3qe1NXAEkyktIF6x0rj9ykFcjwaXuWHGGQs0Y6AXklYnj8b14alQoBrhRCoLhMn4VckuhIiZ44dhZK1CtNv35qFetgQfgN8CFaQLwt4klf2fKm9XMDh5UgP9NvoFIjFDye9t6nwaHPoQsefD1OSbQta1MYxO/cDoKqVI8zApSUck7pIFbfVT2ZJZutjPk7xedGzeocQFepM8wsphNkeHt/ccTvYmB6ufoJJX86nqzj+flu7ss6RYeQWXlndrv7dQ14iL45Q0xUpzJhBpVgvoIf0TidX8CTSVYfb7eMFxJM/5gWizT827/gRWv3zyQZ06zTABo8/fTZKeOJmBtgTvItJf4o1lhF4SpLVT7eZYCxvjsGH6f4TN/InQOOqSFA0OU1qndoYlSGBlAtUD1sSRiYGA9ZbpSDdt258h0zIZzJ5SZ/TAPC9VFsDBSRRByNkRllq3TMXMYhj6/gFOIHSEcie+oa5a6UfxJQ/1rP2jNR7RPQo5QAlLAbd7OwCXjYKEGglIkd9E5FElESyqg3Gx6QbelOHoRbXM-y2tV2VQBzHSbeSceYTPEpG9AXCiXTm/EzNNFgkXMK5saG0JNx2FVaMLUmlOwFPf2ENAbl+iIUFVIvirgewLJNH9nN+v-Bw5NUXkETp+UZP/6QybMFIJa81DfcNv4/wlDkPIPYLpWP3afSwKUvpQAE3AO5LZFEuvhT+PFA/jPWFDAbWVC:D7XrtH4-WrPzcmdGoe/MOSpW9psiFxOi3yGK0OY0/Ew11gJvbuS6ZhE4lwFD+8rTeoz8Tx+I2reeUA4dzOUi1HUl7qAHatGTvX2cnAS9+NNwhq9K2AlK1hnvKD0w3Bu1JFi+n5/gDfQ4/fHZFE1bcEpmBBXoT5HQSWxmBcTK229tltZdjl8ECvaXS4apZORN9UFNSnPD5eMaSvnLMKw9Ypli+jSjY04vFlpT5ELT4tG0dpTnT+WHw9aTSj1ZWq4pAJpOUx7AVho55HCsOSqK9Kp6aI+R4W5csefaQ9llBtws3e10PWNuG8VuuFb2GOmk/KBK4zjAxd3YM47uVWvHVdzTel4lqx8ERS2+e2GOdh3cXFv8PJbCBxvW/wSoq06ajqbmxxxVJADQzl5PdDuqdXA6cRj+KXZk7pcgoGcPfGbvxQhLuZb9OutXqTPnS5AQi4oUeAy7hSXDh5F/wdfqx0VEnA2kbeKPMIv9i5nfMajvcCzkfYQCr5Khjmktp8aXycLe4+Zg+Dmp2LWLkxUuMQyfJfBaQmncr3Hs9d58prySi4Y3GBAwQxTmylz2EQmoqZ0SK6hu54XtNOb2G+kl2mtiTS1GnKLJIq3ygUjfQ7vOBef/v/JUQ8jpA/sVNtDY2I2IqbFUGw0y+ISiOng2Y1QG9H-v12wbZVgrJIF2Zh2AmyVKCUq1eYv0jI/dj0DbY6J+tOVzzzzneF2Yko6Km26Er0sHcHODUYR6trK8bgYhK6eBVsHDzwFd8tTamUrD7i5p+b9h+-V8pChFHkU51G6Pt3flUhASWjUacFm2+GXLVT8B8Hfvbq1jmKCUzlZE8mk6zD1EGgmiPagqwanrBYM1kbHCscC7FBPoDweUKbusAgBVQRJsoK+EmYUf2Biw/rjrg+W9o3Z8LFwrzbQ7P6qQnup327OnOPV5u2sTAY+gBK7vEdWpBZp0WINhtPs87O7DQmEHFUhF86KpX7WPl00814ZdwkT3/IzTRju3xCKMvcuGC2jL2ZgzCucD+3oRnY7xMGbRVpyhI0JKGVl1CnlWJthDA2g0l1tnmZdOy6ECpUE1hBzNjBs9wp5SCc3ItxdRfx/f5NNc7DGa7I27hfWpiF4paymSH9Ry52aO10aChjk1qKF-EIbNyIUl4gG+LuFXwiMtQA6kvY3XruHzr8GclNDsAyRKVKwBmhWVP0mA2+Tf98DAio+Vd48EDxpjg3ZT1p926yzvbuwLqNqOOdPjKJsApGAhcwnupBF9Aosfaz977K9xfqu2YqqcV8IYwf9tfurLaPYh4RbeHROhxJEPeMJXb+tUIgeVkdJUoWfqTgeYLGnE5vU5PPTLZDowlhBOxverFmo6EGUvwRJBpZ0Pvt70ip3KnqLK+TtPqwdPDE1fo2KZxzw07JpC0cA8mV7n2/92f+BcYXgtKpbZ8K9O7h3rt4bL25wA4NCBau3T+w8WAveqgo90aIev5jQdJWZfwOa/G0exEjcFVvfrAGrhc8R/Yu413dD6O1zbEHYAjEP9rUMyuVIw8w1K+BHxmj8C4t6gK4aK6xA/mjaw=1\\a";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
