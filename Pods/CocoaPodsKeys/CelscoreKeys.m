//
// Generated by CocoaPods-Keys
// on 13/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[3003], CelscoreKeysData[336], CelscoreKeysData[1784], CelscoreKeysData[184], CelscoreKeysData[596], CelscoreKeysData[68], CelscoreKeysData[3153], CelscoreKeysData[2366], CelscoreKeysData[2497], CelscoreKeysData[3100], CelscoreKeysData[1317], CelscoreKeysData[1437], CelscoreKeysData[1704], CelscoreKeysData[1807], CelscoreKeysData[1183], CelscoreKeysData[1526], CelscoreKeysData[1111], CelscoreKeysData[315], CelscoreKeysData[2430], CelscoreKeysData[1863], CelscoreKeysData[2424], CelscoreKeysData[1916], CelscoreKeysData[2573], CelscoreKeysData[1064], CelscoreKeysData[1683], CelscoreKeysData[2081], CelscoreKeysData[1643], CelscoreKeysData[2799], CelscoreKeysData[314], CelscoreKeysData[1217], CelscoreKeysData[2756], CelscoreKeysData[2142], CelscoreKeysData[1818], CelscoreKeysData[1347], CelscoreKeysData[105], CelscoreKeysData[94], CelscoreKeysData[511], CelscoreKeysData[970], CelscoreKeysData[2235], CelscoreKeysData[1621], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[516], CelscoreKeysData[1577], CelscoreKeysData[1990], CelscoreKeysData[2861], CelscoreKeysData[36], CelscoreKeysData[1854], CelscoreKeysData[770], CelscoreKeysData[2560], CelscoreKeysData[2070], CelscoreKeysData[1474], CelscoreKeysData[1042], CelscoreKeysData[1826], CelscoreKeysData[312], CelscoreKeysData[3213], CelscoreKeysData[2537], CelscoreKeysData[2618], CelscoreKeysData[1246], CelscoreKeysData[2402], CelscoreKeysData[1533], CelscoreKeysData[557], CelscoreKeysData[3051], CelscoreKeysData[114], CelscoreKeysData[2393], CelscoreKeysData[840], CelscoreKeysData[1022], CelscoreKeysData[2790], CelscoreKeysData[2755], CelscoreKeysData[1439], CelscoreKeysData[1441], CelscoreKeysData[2526], CelscoreKeysData[3086], CelscoreKeysData[2268], CelscoreKeysData[1336], CelscoreKeysData[1379], CelscoreKeysData[178], CelscoreKeysData[70], CelscoreKeysData[1372], CelscoreKeysData[357], CelscoreKeysData[3136], CelscoreKeysData[144], CelscoreKeysData[1805], CelscoreKeysData[2906], CelscoreKeysData[2868], CelscoreKeysData[1789], CelscoreKeysData[1690], CelscoreKeysData[1687], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3214] = "//7bKEsCTc8vBymluCBHIBm57hScguZMaaT7aZtP8uwnS75vARNTQghDRDubbk+QCSBG6B1CWMkHl3bLtdaFqqKu7VmAdpj4IX2sjUQ/19khNj+kIg9VQfjNdsgsPO8PjlL59mXXwnjwjlVu0Kv9vXOuXTJAYXvAu+7KjXPtY9imvt+5ss9gZG9FE5buoL0LZnMXIwGQPuyPAdCYkwk2FriPAxq+fGfwxtGNZp03Ue/slShEdrPXQ24ojgn8MWScAibyNHK+qMS4EBlU4a5UWfNlkuu7/lisy4jAhzVOQZFz6UNLraK4qD8+8hMlOZ6qo79LM52KE8CFbCttXW/xAvK8+ZqSQG8iVjt6zbFJQrS5MTLjDPBG0YY5Z8467QXDO2KklU0ld+/KgwEjk6RiV+lYu769eXt5EwJTpvZEmgQPGtCkcqAdklu7GBNJ0x32afRF9105c40Clbm70GoyOFbyhWKYI1NlN4drMMemRru2IHHPD/7qw/EcQgmiwD0KkkabuLTx7wo4vxZEUcG+e+1ARFhoQpjMVKvfSMvJZkGnC7sPXbbhqG+C4SvDd9LcHvB/iFu8fe4TBBpm4mqf7SLvLsGzOJCznq908iQ3nF3tXMf1+p4vJKMTWWYGPbJEiDGHDfFPipTNMQ68m65vvnfRFDE2xBx4MwgS899xN7pt3so5m+s6xqvnQQAbixM+Ffv6FP9YKBb4VqCKDqKcD484u8cFA2xnURd/MWgTLw0IYuNidDplHGATl51EreCF20tqPJvC44keXYF3lyBdBwPYFg8dzabDFsvQlUsYspnsy+AKkkub1kMr7W1vSd1hDWC3xkuh-KTtOs+cOP2NxH1hzJpJaIWJgYu/+XjaCjQ4MWUkTT3Dcp2dYivYDD57zYtiZeaIdTLOhCYFKS+y5deJY5exkEaGciUcxaPLFm99ER4GzgZinJllk7iwilvK5dW3iJWLHe59587TKxkgZJh8gtInjLLHMkJS69pGdzpQe0R4lfiGamwhj86RF24qW/o6Prav1QkDwK1BnTdQJAvL6tfo5a5vCCNzXidJ8/GTE6lfkApVmSnH1pbkxKCVMBozJbWKPhCkyb8JfwzFWoNfe6+pjJ05zDKOdCMvC1QAKisSOcxMPregqTYy+KcqVwPEkl8HuM0Pwh9fdM+CLg5EfdmsYQ7rXXJSvomnTHDF2eQWbBatDJch6gA58Lr9ZYyOGD91F14DBR0KzVZKeOYIyV7tFEeKeA3ED3gg9Tnaq0UtIZf3GhrRnsJez9rZ6JRaN+cjVP6zVfS38pAP4o8lOP1W6YdHqLcSy2zghTKuqEW7HbASmn2DfvyMkyJx5tZTHOjSiJ9OuYlEC2Q212survADcq4GdEh-dpl4g7axZ4fHvfLoar3g9ru/OREyQPKfHQQryk8GOqdj6Zimm28PDd6mfiE9c-/tn/AF282qj9J0igfcdl9LT2agvAE1p9:VNxGLnTibAUjmF1etEof+CJEYKrYh9TxJPsBqFe4IS2o/D3GbxiYD5gCIT-cjuNi0XblQNwQhFC6eJ+pdk1Y4N6CXse2BJSwIqxF/DsP47RsufAb/p1CxpiGpqAZiWP/WJLEWxtULPc9W1VH84PBnlDaUt35TFAz99ZPcv2TAPpVzPgKXPRpj2u5Im2BQeNJlT4GRjYjPAt3ETNdOyalcu56puklmnUjSGgiYAU4et18FrTfbzkD0UFOziR7aiHcE9M76AUFAd8gKvFpz61O1jN9MqXXq8vkU91eka4aazcGENtmQ2+fGwHBOq1q4p1RvkU0axeNAY8m9Lid52yYNsf2MwuA3+/0AAkZoAJDD2uGGKv4raOS7VAHVhnsdSdjJf1qyDZYAYyma6l1+PEh7SUGPleAj3JAXsoHMWFEWT05MSpERgWyRPGGa8f97W8UQCfcmR9HTtGIiIwmRRkkxoWuW3KZkEWweMKoHxkYW3k7w3yEuCPqEZiYWCi9QmeI12X-pHp+KV1MnOfHSvGyMFd2tAPK+GerrJfXPbMh7uNph19oUa/CU+3tMtEparwIJZ9ezA8JIKT4vJJnja71Vvd1dS3TO+e+6h0fywrT8htJWewlJFwEomSYKXbaPajafcUxnkzNWc7rRI0EksTVnogdK7ydQO6DKBSsoxijI+C/eGEmZtxFawz7VBuqgogXTJJDUpTbeKoRLBYKI4c/DSIUMw4mBfDb4yhu+uZDATr5rc4/htMlALSquRpmIaq6kLzDk4Hkl5xKtHtBbs/8fXbA68bi/pd3l5aKI/qrNeHuH0aDUH2f8HG7KpdTK0aRBw+0VN/wh8TmpTQCsUgTlmFgQ8mE/O9NxdzKeLV+AwLU2SeMmjQoidkPaYpYJuKPeKdj5F///iMndW18InKNzVbh6JuKeJxbfe/LdV7RZmEJemJToK/TlaXlsXZ9ov371arES96plGZi6Ab9OUVm8dYkVtD9hE6I4aFmX949Hjuhc4v/IjlTZPzvVq7fzrbnMl+utS03bs7TYedmy91QTWjpHMy9iiR+IVo+Hodnn7KdWeGsb6wVdjOnpohTO-ncfT/iJTz3549vZ1HibwEBpGZFduwDZthlLV+BbneAwkCUr9HykIlvQm+eufdnUKe1JgOmUaJsXCtB5UEuR2OgL3VlOZeylZYJwXLyHFJod20MWSneDBEy2KGU0SDJNc1idN49JTS4qLXKsD6vRuxXOBRG5wHFeixrnhizYPL2GPFfk5nDKVOlYDDWmrwSTzkU5ny1T1LqyHUoyU1lfbnmtnC5eSDSH/CgsHP4JSJVodCZJXqjnWVgRAkw0B7xOguQMcU+wIoLH/EKptS/TfgGidopXHnoZZGuJOMop+Ute6eXaurEI2qbKq7tCBZp1LMaOwqChurEUWfr3GV1Z3WjzeaaKJ/nm/nS0l+mB9QIvQ2QgxpFpT4a5ALKA8BTVBi4wd7mDOMkhD6yn0DDeQ3Zd0p2eOTuIsYZXKF/7riJVSwiS7SXQGAB5G500viinOs4ME9JirgZZu2/LCWROkWo1pdTy1rOuLFGeZ2cWnP71Hi/ib+vE+1pQTsGhwlLehyk6lkm3S27h/FaJ9XJXOft96AfGsgtJeEZzQxNJD89JjxDnT58+wtN6DG6UVbT61a0SW78CpvyvlSnUN0Goc0xtnN0sGyts+GmlSdm9pnUzbYyEsVdXvJbsEENPKEFmkaKyIHeZYQE=\\d";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
