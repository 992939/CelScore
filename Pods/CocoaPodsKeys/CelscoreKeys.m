//
// Generated by CocoaPods-Keys
// on 09/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1037], CelscoreKeysData[289], CelscoreKeysData[1959], CelscoreKeysData[1136], CelscoreKeysData[1878], CelscoreKeysData[784], CelscoreKeysData[535], CelscoreKeysData[2553], CelscoreKeysData[578], CelscoreKeysData[2353], CelscoreKeysData[2122], CelscoreKeysData[1336], CelscoreKeysData[1644], CelscoreKeysData[1148], CelscoreKeysData[218], CelscoreKeysData[2625], CelscoreKeysData[1614], CelscoreKeysData[424], CelscoreKeysData[1402], CelscoreKeysData[2600], CelscoreKeysData[1335], CelscoreKeysData[2180], CelscoreKeysData[1099], CelscoreKeysData[1330], CelscoreKeysData[1111], CelscoreKeysData[1773], CelscoreKeysData[1914], CelscoreKeysData[2732], CelscoreKeysData[1609], CelscoreKeysData[677], CelscoreKeysData[1105], CelscoreKeysData[1645], CelscoreKeysData[934], CelscoreKeysData[1843], CelscoreKeysData[2818], CelscoreKeysData[2782], CelscoreKeysData[231], CelscoreKeysData[1074], CelscoreKeysData[2151], CelscoreKeysData[217], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2129], CelscoreKeysData[459], CelscoreKeysData[1380], CelscoreKeysData[1820], CelscoreKeysData[1048], CelscoreKeysData[1446], CelscoreKeysData[973], CelscoreKeysData[1135], CelscoreKeysData[2191], CelscoreKeysData[189], CelscoreKeysData[2415], CelscoreKeysData[812], CelscoreKeysData[1958], CelscoreKeysData[761], CelscoreKeysData[2207], CelscoreKeysData[1573], CelscoreKeysData[107], CelscoreKeysData[913], CelscoreKeysData[2063], CelscoreKeysData[1235], CelscoreKeysData[1460], CelscoreKeysData[1280], CelscoreKeysData[2657], CelscoreKeysData[1713], CelscoreKeysData[2611], CelscoreKeysData[2615], CelscoreKeysData[2447], CelscoreKeysData[2678], CelscoreKeysData[626], CelscoreKeysData[433], CelscoreKeysData[689], CelscoreKeysData[2137], CelscoreKeysData[2799], CelscoreKeysData[2274], CelscoreKeysData[135], CelscoreKeysData[1932], CelscoreKeysData[495], CelscoreKeysData[2634], CelscoreKeysData[1144], CelscoreKeysData[2228], CelscoreKeysData[2093], CelscoreKeysData[494], CelscoreKeysData[2105], CelscoreKeysData[2483], CelscoreKeysData[963], CelscoreKeysData[709], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2870] = "ocMPxLSlncGx7CXtk+kLn1u/qrxADkZyMNVr6ohn8+A0JQn+WW9VCw1ht8CXw2TJ7ZXCHA8U7JVil9a/QO2g+vDbWjnUIhxxJNfqvAcya/6eo7UuBiukZhatyLEpCd70Ia/Ak2Q9YbsQME7HpJQ16uW0zGHr0SfyQn0jC2s+W9yh9vM4JyY7Avip1F3Lf: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
