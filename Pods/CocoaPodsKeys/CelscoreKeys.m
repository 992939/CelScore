//
// Generated by CocoaPods-Keys
// on 04/05/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[107], CelscoreKeysData[823], CelscoreKeysData[1203], CelscoreKeysData[2528], CelscoreKeysData[2694], CelscoreKeysData[243], CelscoreKeysData[675], CelscoreKeysData[714], CelscoreKeysData[1066], CelscoreKeysData[2464], CelscoreKeysData[630], CelscoreKeysData[1769], CelscoreKeysData[1838], CelscoreKeysData[1804], CelscoreKeysData[1092], CelscoreKeysData[846], CelscoreKeysData[923], CelscoreKeysData[976], CelscoreKeysData[2412], CelscoreKeysData[890], CelscoreKeysData[281], CelscoreKeysData[2763], CelscoreKeysData[1282], CelscoreKeysData[311], CelscoreKeysData[946], CelscoreKeysData[1704], CelscoreKeysData[869], CelscoreKeysData[547], CelscoreKeysData[2916], CelscoreKeysData[1537], CelscoreKeysData[1997], CelscoreKeysData[1897], CelscoreKeysData[788], CelscoreKeysData[210], CelscoreKeysData[164], CelscoreKeysData[2939], CelscoreKeysData[3073], CelscoreKeysData[1590], CelscoreKeysData[2409], CelscoreKeysData[2998], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2550], CelscoreKeysData[757], CelscoreKeysData[2133], CelscoreKeysData[174], CelscoreKeysData[2422], CelscoreKeysData[303], CelscoreKeysData[1612], CelscoreKeysData[231], CelscoreKeysData[1031], CelscoreKeysData[2723], CelscoreKeysData[1485], CelscoreKeysData[1504], CelscoreKeysData[1958], CelscoreKeysData[1317], CelscoreKeysData[50], CelscoreKeysData[632], CelscoreKeysData[1925], CelscoreKeysData[2198], CelscoreKeysData[2819], CelscoreKeysData[2013], CelscoreKeysData[1614], CelscoreKeysData[1437], CelscoreKeysData[1682], CelscoreKeysData[316], CelscoreKeysData[2937], CelscoreKeysData[1747], CelscoreKeysData[2485], CelscoreKeysData[2827], CelscoreKeysData[3062], CelscoreKeysData[2721], CelscoreKeysData[1779], CelscoreKeysData[1224], CelscoreKeysData[896], CelscoreKeysData[2212], CelscoreKeysData[401], CelscoreKeysData[2542], CelscoreKeysData[3050], CelscoreKeysData[2263], CelscoreKeysData[25], CelscoreKeysData[2668], CelscoreKeysData[1061], CelscoreKeysData[2978], CelscoreKeysData[1945], CelscoreKeysData[137], CelscoreKeysData[2283], CelscoreKeysData[186], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "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:Qj8x+hRtJHvVHvfWJ9DyxCOu4Yftdhe22NYbA2O8XC98ZvxzYo38x831e7BwHf4utTi7u8Nzj+NKOp8A8Bt4q1tDZSXlgxJ-iXBFti39V+1yaYkSZw5Ul+vGFhWJLpmFWa7EuJ9rWUGhKXB1+slFTXgGsikemg8hcGWQ5koGPstRdntidGwTeLtkLg8EF/ssMTrtknLc/elTfOKHkYmGz4ijgI3sWpNt8g41LTpAfsBU5C/+WwQTC3U5hDznF7aEtNkfefUPSJb2RieKuUPQjbopzfxxeBH5+gv4cOOiKKf4Fin0giZJR1wG+M93K+SC8Dr39iczkPQ6VJ3DFH-2Wxy5R0CjeK9iCNbC9htQQzZLJ3l+hky3\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
