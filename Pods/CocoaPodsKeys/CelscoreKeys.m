//
// Generated by CocoaPods-Keys
// on 17/01/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2159], CelscoreKeysData[2107], CelscoreKeysData[336], CelscoreKeysData[2449], CelscoreKeysData[1517], CelscoreKeysData[1886], CelscoreKeysData[1697], CelscoreKeysData[2466], CelscoreKeysData[2015], CelscoreKeysData[2387], CelscoreKeysData[747], CelscoreKeysData[2696], CelscoreKeysData[1295], CelscoreKeysData[2099], CelscoreKeysData[1170], CelscoreKeysData[3010], CelscoreKeysData[439], CelscoreKeysData[322], CelscoreKeysData[2665], CelscoreKeysData[2760], CelscoreKeysData[558], CelscoreKeysData[2926], CelscoreKeysData[2034], CelscoreKeysData[1249], CelscoreKeysData[663], CelscoreKeysData[1090], CelscoreKeysData[513], CelscoreKeysData[2539], CelscoreKeysData[2746], CelscoreKeysData[217], CelscoreKeysData[3123], CelscoreKeysData[831], CelscoreKeysData[266], CelscoreKeysData[816], CelscoreKeysData[1864], CelscoreKeysData[2061], CelscoreKeysData[2857], CelscoreKeysData[2752], CelscoreKeysData[2244], CelscoreKeysData[1233], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1568], CelscoreKeysData[2702], CelscoreKeysData[561], CelscoreKeysData[2528], CelscoreKeysData[1420], CelscoreKeysData[1893], CelscoreKeysData[660], CelscoreKeysData[2224], CelscoreKeysData[2145], CelscoreKeysData[2361], CelscoreKeysData[659], CelscoreKeysData[2730], CelscoreKeysData[2399], CelscoreKeysData[1015], CelscoreKeysData[2465], CelscoreKeysData[1241], CelscoreKeysData[2722], CelscoreKeysData[1008], CelscoreKeysData[1239], CelscoreKeysData[2673], CelscoreKeysData[1140], CelscoreKeysData[1778], CelscoreKeysData[2086], CelscoreKeysData[3195], CelscoreKeysData[18], CelscoreKeysData[2179], CelscoreKeysData[1245], CelscoreKeysData[1105], CelscoreKeysData[1507], CelscoreKeysData[2939], CelscoreKeysData[1346], CelscoreKeysData[3110], CelscoreKeysData[1092], CelscoreKeysData[3091], CelscoreKeysData[538], CelscoreKeysData[2512], CelscoreKeysData[2133], CelscoreKeysData[1159], CelscoreKeysData[1585], CelscoreKeysData[400], CelscoreKeysData[2850], CelscoreKeysData[1601], CelscoreKeysData[844], CelscoreKeysData[2787], CelscoreKeysData[2671], CelscoreKeysData[1659], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3214] = "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:hDzhZxgAT1iqDh2DdbjknDPVtsY+SrmrL39KM8JIOS9BSltBnbSix6mC1rZDKqCKGS6Iok67eo/lyAR9d2d0cyLEQQW3v1supU+ytRDdYz/vPhnKOKPgJrcZdlART0bBg56sIWp8IxHPgghoD7nuBU1snO+dumMtES2i6YeWoRm1NsBgcJTGvDXX65wn4z5QRFc3OAeH/ZrjID6EE6JREx0obkc4Ya8uoh3nf5c4LkMyNarJKeaTBQQI1Fi/E4PP9n+2U+V0Xeml7quSAhOsr3SImK7oBPQUxo44RL6nKEbQ4ws9JkhGR6J7WccGaQxRR/AOYxe5wFuyr2i+ANF+sYr/4emoAW7kFXUe0wfbeLpVC4le08LFYcrDh3v/NxwsMKyz7K56eDlxAHyFP+lWiIzgjouiKX+zzChjToN1o1AQ+SUJGT1RKLjXrEXRvclcyYgt8g0SJRSTYpMux/ijm5QymOu9VkGkarNrj0+48BfUwYPKnU0pA4p+dY5bYpYFPZLY/e5os0Pg9+jtfyH+Y57YTSsu4xKzp2LeIoOTq7EqIKyyRhn28yPaewa0PbFtQ9u78+Sv9mIMTPfk1RWIxbwo1QH7hy7FVTBaG8QbWQSrnE3a0u0xUJT/KQw7VbN4+MBeCZx+YKvx75Kl2/hiFrZsZ79SaGprXSg9iZcuvIi+5KICt5hZMptHCubUWq9BEVA2vJ8cZ/CJB8YuyWmuUt1S5-S85/nhSsFaY/jlhFT98sYF2QWh6tK+VnhErwXRZyHpeSv+axtrj0PxJvYBPu2Md0slbMtlrQYE0WNzxH25QLqNa6awAyp/zVAesgdKx-0iaxRYVyBCNR0aM=\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
