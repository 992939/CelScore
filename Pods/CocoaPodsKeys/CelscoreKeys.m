//
// Generated by CocoaPods-Keys
// on 11/03/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1284], CelscoreKeysData[2595], CelscoreKeysData[2974], CelscoreKeysData[2419], CelscoreKeysData[3016], CelscoreKeysData[2531], CelscoreKeysData[2171], CelscoreKeysData[453], CelscoreKeysData[1766], CelscoreKeysData[859], CelscoreKeysData[2722], CelscoreKeysData[3251], CelscoreKeysData[1721], CelscoreKeysData[1576], CelscoreKeysData[1139], CelscoreKeysData[986], CelscoreKeysData[656], CelscoreKeysData[1978], CelscoreKeysData[300], CelscoreKeysData[1098], CelscoreKeysData[2617], CelscoreKeysData[2676], CelscoreKeysData[24], CelscoreKeysData[2459], CelscoreKeysData[2718], CelscoreKeysData[1262], CelscoreKeysData[2562], CelscoreKeysData[400], CelscoreKeysData[2622], CelscoreKeysData[452], CelscoreKeysData[3058], CelscoreKeysData[907], CelscoreKeysData[3176], CelscoreKeysData[1734], CelscoreKeysData[3104], CelscoreKeysData[2799], CelscoreKeysData[1817], CelscoreKeysData[568], CelscoreKeysData[1824], CelscoreKeysData[15], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[593], CelscoreKeysData[743], CelscoreKeysData[1128], CelscoreKeysData[678], CelscoreKeysData[3075], CelscoreKeysData[767], CelscoreKeysData[2721], CelscoreKeysData[2379], CelscoreKeysData[1988], CelscoreKeysData[2692], CelscoreKeysData[2005], CelscoreKeysData[1063], CelscoreKeysData[2199], CelscoreKeysData[414], CelscoreKeysData[150], CelscoreKeysData[1702], CelscoreKeysData[868], CelscoreKeysData[966], CelscoreKeysData[2715], CelscoreKeysData[3111], CelscoreKeysData[837], CelscoreKeysData[3280], CelscoreKeysData[3288], CelscoreKeysData[327], CelscoreKeysData[690], CelscoreKeysData[1693], CelscoreKeysData[2717], CelscoreKeysData[3155], CelscoreKeysData[1834], CelscoreKeysData[1932], CelscoreKeysData[3270], CelscoreKeysData[2110], CelscoreKeysData[1524], CelscoreKeysData[1062], CelscoreKeysData[2992], CelscoreKeysData[1227], CelscoreKeysData[638], CelscoreKeysData[244], CelscoreKeysData[2516], CelscoreKeysData[569], CelscoreKeysData[849], CelscoreKeysData[3055], CelscoreKeysData[3297], CelscoreKeysData[2893], CelscoreKeysData[154], CelscoreKeysData[3069], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "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:bFXtn4HrmppE5CZrY4hpyv-e5OZUt23lK5pysoC7QB500PYdatLqPbrBUNR/2fM3+eQzTetFDLKxClcNi0lDAHXnsPtlhBZOKuUSqUy1fUjV0SnvnA49MTqLs+QoiTz96rvTs/hDqfIwbYbmqoMXdw/4xE82bzbzt+brwnb/vaXUwI3+h0/LPe/NWFp5BWbK6dn2YBvk1CdFJhJkn6SxhQWhbbARqXQ5LnYu6bmQunEJoa6t9uECzoO4E1VdxMLCArJIPj+zvH8iJSgXPwDcIxs2rwnFo4HNK0Fe4/Ee2HS9BwxoYMkW/0UBuodjIQH1MT57XsrBX9Wkc3Oo8RhnvtmSJZhiBJIw8U0iwMmCEManonsG9t7RPttxcXii/sayDONULsHEGs+LTb4CbhCd90I0gph97aaX6c7Y5tXdnCR96k/S4IZCxjy2SSIjGbCJOjBtxhlLOPpEq19jyZQBKdY0cpghqn6tYrR2Zxj+kMftMcGkOziA3OOewCcc/be1N2hPSRBByVpeE5c2n0skdqNUGgBHX86MT3873cNmffiEZvigl1n2FRDLd955T87dEaZUUvuh+t89zioBP6PbP23DRaEY2Q9y2FGNzEJssa/BoocNiJhFLIhqQ==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
