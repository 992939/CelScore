//
// Generated by CocoaPods-Keys
// on 14/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2021], CelscoreKeysData[598], CelscoreKeysData[1056], CelscoreKeysData[1558], CelscoreKeysData[2183], CelscoreKeysData[718], CelscoreKeysData[43], CelscoreKeysData[2150], CelscoreKeysData[2181], CelscoreKeysData[1521], CelscoreKeysData[357], CelscoreKeysData[835], CelscoreKeysData[1557], CelscoreKeysData[271], CelscoreKeysData[2491], CelscoreKeysData[588], CelscoreKeysData[798], CelscoreKeysData[2343], CelscoreKeysData[303], CelscoreKeysData[2163], CelscoreKeysData[2232], CelscoreKeysData[918], CelscoreKeysData[2311], CelscoreKeysData[666], CelscoreKeysData[2255], CelscoreKeysData[206], CelscoreKeysData[1067], CelscoreKeysData[1973], CelscoreKeysData[1389], CelscoreKeysData[1631], CelscoreKeysData[869], CelscoreKeysData[2296], CelscoreKeysData[1598], CelscoreKeysData[847], CelscoreKeysData[2471], CelscoreKeysData[1429], CelscoreKeysData[1786], CelscoreKeysData[2213], CelscoreKeysData[2532], CelscoreKeysData[917], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[785], CelscoreKeysData[2225], CelscoreKeysData[963], CelscoreKeysData[606], CelscoreKeysData[2084], CelscoreKeysData[1886], CelscoreKeysData[1992], CelscoreKeysData[1084], CelscoreKeysData[273], CelscoreKeysData[6], CelscoreKeysData[2729], CelscoreKeysData[1961], CelscoreKeysData[2309], CelscoreKeysData[1011], CelscoreKeysData[1858], CelscoreKeysData[2458], CelscoreKeysData[247], CelscoreKeysData[952], CelscoreKeysData[54], CelscoreKeysData[2507], CelscoreKeysData[2393], CelscoreKeysData[2288], CelscoreKeysData[704], CelscoreKeysData[758], CelscoreKeysData[856], CelscoreKeysData[1210], CelscoreKeysData[848], CelscoreKeysData[2337], CelscoreKeysData[2570], CelscoreKeysData[2485], CelscoreKeysData[881], CelscoreKeysData[811], CelscoreKeysData[2348], CelscoreKeysData[616], CelscoreKeysData[1032], CelscoreKeysData[16], CelscoreKeysData[2100], CelscoreKeysData[24], CelscoreKeysData[2523], CelscoreKeysData[2466], CelscoreKeysData[120], CelscoreKeysData[330], CelscoreKeysData[1645], CelscoreKeysData[1133], CelscoreKeysData[2047], CelscoreKeysData[2487], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2754] = "B2GS9G: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
