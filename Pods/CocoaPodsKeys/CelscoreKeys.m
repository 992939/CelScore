//
// Generated by CocoaPods-Keys
// on 24/09/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1725], CelscoreKeysData[288], CelscoreKeysData[308], CelscoreKeysData[2209], CelscoreKeysData[1057], CelscoreKeysData[1858], CelscoreKeysData[2966], CelscoreKeysData[1129], CelscoreKeysData[439], CelscoreKeysData[837], CelscoreKeysData[2469], CelscoreKeysData[63], CelscoreKeysData[1831], CelscoreKeysData[418], CelscoreKeysData[7], CelscoreKeysData[2004], CelscoreKeysData[1018], CelscoreKeysData[3114], CelscoreKeysData[2959], CelscoreKeysData[1702], CelscoreKeysData[1940], CelscoreKeysData[1689], CelscoreKeysData[564], CelscoreKeysData[1957], CelscoreKeysData[1838], CelscoreKeysData[505], CelscoreKeysData[2979], CelscoreKeysData[2032], CelscoreKeysData[2086], CelscoreKeysData[724], CelscoreKeysData[1012], CelscoreKeysData[1368], CelscoreKeysData[56], CelscoreKeysData[1924], CelscoreKeysData[1050], CelscoreKeysData[2480], CelscoreKeysData[2491], CelscoreKeysData[259], CelscoreKeysData[2304], CelscoreKeysData[1555], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[3029], CelscoreKeysData[2449], CelscoreKeysData[1303], CelscoreKeysData[355], CelscoreKeysData[2728], CelscoreKeysData[2289], CelscoreKeysData[2901], CelscoreKeysData[623], CelscoreKeysData[2223], CelscoreKeysData[266], CelscoreKeysData[619], CelscoreKeysData[2259], CelscoreKeysData[1210], CelscoreKeysData[694], CelscoreKeysData[365], CelscoreKeysData[398], CelscoreKeysData[481], CelscoreKeysData[1443], CelscoreKeysData[1016], CelscoreKeysData[2975], CelscoreKeysData[2057], CelscoreKeysData[1609], CelscoreKeysData[1280], CelscoreKeysData[947], CelscoreKeysData[331], CelscoreKeysData[128], CelscoreKeysData[252], CelscoreKeysData[989], CelscoreKeysData[708], CelscoreKeysData[2866], CelscoreKeysData[298], CelscoreKeysData[1258], CelscoreKeysData[2988], CelscoreKeysData[1118], CelscoreKeysData[658], CelscoreKeysData[2476], CelscoreKeysData[2967], CelscoreKeysData[2321], CelscoreKeysData[1600], CelscoreKeysData[1300], CelscoreKeysData[904], CelscoreKeysData[1538], CelscoreKeysData[1975], CelscoreKeysData[2483], CelscoreKeysData[1071], CelscoreKeysData[185], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3214] = "KEGjW+wrGUzsh7Xt2Jge4SUv5b5O08RTeXhUW+K4X25Y1+pqV0Gwh1582AdHnhwiEU9FiqahtJ4DoKH9KDT6UOrDSQBNZaypyqEJ9Evkm2v9ooU/zuuKzTJ7z7xq7CY24NskJEs+g2PSiAonwGdU90MJ00iZdU9FB0uko0w8mxf6kaYbTITRo9Rbbc/AbzTEusNMlCu7rUwpz5Eu53295K5LOi0GCzlRbj/ZikKOyz1dsEEdNplRWa0g1S+r5jGyBLQ5lYTAsV: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
