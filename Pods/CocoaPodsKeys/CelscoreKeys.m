//
// Generated by CocoaPods-Keys
// on 24/12/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[174], CelscoreKeysData[1707], CelscoreKeysData[1003], CelscoreKeysData[2341], CelscoreKeysData[582], CelscoreKeysData[2433], CelscoreKeysData[1912], CelscoreKeysData[709], CelscoreKeysData[1267], CelscoreKeysData[136], CelscoreKeysData[881], CelscoreKeysData[2028], CelscoreKeysData[1902], CelscoreKeysData[731], CelscoreKeysData[779], CelscoreKeysData[1684], CelscoreKeysData[1704], CelscoreKeysData[2581], CelscoreKeysData[372], CelscoreKeysData[190], CelscoreKeysData[1389], CelscoreKeysData[1687], CelscoreKeysData[211], CelscoreKeysData[1881], CelscoreKeysData[1769], CelscoreKeysData[2419], CelscoreKeysData[561], CelscoreKeysData[1022], CelscoreKeysData[796], CelscoreKeysData[789], CelscoreKeysData[575], CelscoreKeysData[323], CelscoreKeysData[588], CelscoreKeysData[1210], CelscoreKeysData[701], CelscoreKeysData[67], CelscoreKeysData[1456], CelscoreKeysData[151], CelscoreKeysData[1976], CelscoreKeysData[2113], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1347], CelscoreKeysData[737], CelscoreKeysData[2191], CelscoreKeysData[1740], CelscoreKeysData[237], CelscoreKeysData[590], CelscoreKeysData[496], CelscoreKeysData[1629], CelscoreKeysData[1948], CelscoreKeysData[2441], CelscoreKeysData[659], CelscoreKeysData[1819], CelscoreKeysData[1539], CelscoreKeysData[2039], CelscoreKeysData[215], CelscoreKeysData[768], CelscoreKeysData[356], CelscoreKeysData[284], CelscoreKeysData[271], CelscoreKeysData[1741], CelscoreKeysData[1479], CelscoreKeysData[1536], CelscoreKeysData[353], CelscoreKeysData[1421], CelscoreKeysData[336], CelscoreKeysData[72], CelscoreKeysData[1153], CelscoreKeysData[407], CelscoreKeysData[2108], CelscoreKeysData[782], CelscoreKeysData[2267], CelscoreKeysData[1232], CelscoreKeysData[2160], CelscoreKeysData[187], CelscoreKeysData[928], CelscoreKeysData[1487], CelscoreKeysData[334], CelscoreKeysData[931], CelscoreKeysData[970], CelscoreKeysData[98], CelscoreKeysData[1667], CelscoreKeysData[678], CelscoreKeysData[2586], CelscoreKeysData[309], CelscoreKeysData[2509], CelscoreKeysData[2537], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2642] = "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:xDD+zmu63kdg1MTH/vXxmNo5xUYnCa8MtrxXKT7XbFFG+NoY7gLyC1H9bq4RACjORby6jdERcdEA/0y3H6JxI8DowrA9pJicF8nrjnkcJl5Vikq1L1JgwJJk5FP17T7EgAyLC0wv9mRll8X62Nf3PdyYQkGyP91qIqykqv2JPAIvFvzu7A86E++Oe8MDvBSGKTUg==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
