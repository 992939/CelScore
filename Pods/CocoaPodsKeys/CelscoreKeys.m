//
// Generated by CocoaPods-Keys
// on 02/08/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1195], CelscoreKeysData[2411], CelscoreKeysData[2531], CelscoreKeysData[1039], CelscoreKeysData[822], CelscoreKeysData[1137], CelscoreKeysData[328], CelscoreKeysData[1223], CelscoreKeysData[2099], CelscoreKeysData[1253], CelscoreKeysData[907], CelscoreKeysData[1955], CelscoreKeysData[2036], CelscoreKeysData[581], CelscoreKeysData[852], CelscoreKeysData[34], CelscoreKeysData[475], CelscoreKeysData[2404], CelscoreKeysData[400], CelscoreKeysData[2613], CelscoreKeysData[2293], CelscoreKeysData[1070], CelscoreKeysData[363], CelscoreKeysData[1927], CelscoreKeysData[874], CelscoreKeysData[1538], CelscoreKeysData[770], CelscoreKeysData[1547], CelscoreKeysData[943], CelscoreKeysData[997], CelscoreKeysData[1641], CelscoreKeysData[980], CelscoreKeysData[880], CelscoreKeysData[1103], CelscoreKeysData[790], CelscoreKeysData[1057], CelscoreKeysData[2552], CelscoreKeysData[995], CelscoreKeysData[1499], CelscoreKeysData[2194], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1009], CelscoreKeysData[428], CelscoreKeysData[1915], CelscoreKeysData[2202], CelscoreKeysData[437], CelscoreKeysData[225], CelscoreKeysData[1008], CelscoreKeysData[1893], CelscoreKeysData[2298], CelscoreKeysData[1732], CelscoreKeysData[2248], CelscoreKeysData[1100], CelscoreKeysData[1154], CelscoreKeysData[744], CelscoreKeysData[1303], CelscoreKeysData[2585], CelscoreKeysData[793], CelscoreKeysData[265], CelscoreKeysData[1284], CelscoreKeysData[1767], CelscoreKeysData[2117], CelscoreKeysData[2138], CelscoreKeysData[441], CelscoreKeysData[1402], CelscoreKeysData[1055], CelscoreKeysData[2554], CelscoreKeysData[1674], CelscoreKeysData[167], CelscoreKeysData[1775], CelscoreKeysData[2279], CelscoreKeysData[759], CelscoreKeysData[2323], CelscoreKeysData[740], CelscoreKeysData[869], CelscoreKeysData[50], CelscoreKeysData[353], CelscoreKeysData[1989], CelscoreKeysData[891], CelscoreKeysData[1147], CelscoreKeysData[103], CelscoreKeysData[1167], CelscoreKeysData[2555], CelscoreKeysData[1814], CelscoreKeysData[1713], CelscoreKeysData[472], CelscoreKeysData[986], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2642] = "0SfEiaYfHqljKtywi5LN/hQVeA1QkWKS1NYzyymmiqx8rwTvEo90htCorIBk2koMbBPm/hahilD6ghGfPBVimaQeIb8YaIjzO76X4yt0dKYF/Nyv8GKXR/BXe/FWQQJC+tLcpR2vrrHQZBmwodJUowPxj9EBCYnIkXn7mmx9bVUq3UXHxquih1YAdE1/eCDCxR3WEK+RoxhgJjbfE9nNbqjn3Rdo7q/w/sduSQocee7D9JvBu7A7KL7EqoN+y53rzDptCazTXb6RuuXA9yZTUr/l8qvVUhXcPmtV4CW+6/HJ4ovyCI3lQke3YGWMfPMDDk8Obef40lZvtBhWzwXRsBTkNBLbZnRGh1j8HFVltUr93+L2qP1E/UpivB6/G/xdGVKckzifgDepqY+O9JziGvGx4fJfRINGP8PLJ0q+nR7Is9lqYjADaaKiybv6ANZNt2K9eHd0njNFWlUrXIl+oyW167dfjUR3wyvl+G0xJBRUe7SlNhITX04W9cPi2MFv22IO2O0zVXji3nOWvClqJyd0tixMqRb1XNYC9RB5W3kgz28Mn/WoJZt86wjoNRH036WSC9YrEm0qrnPfUd0b7fSO/RY97Ohcxv29f1/72MfY9h2ozmPa2S6XKdhBdrnCDN6WXjc964Y9xlzwPThjc9K8W3JTQDyIviXokzevDitPjfy0oBJTTSYl+eRoyXTGFA7dBvdezWH8RYwBopBQDtW113xhCyKJRs7pfpu6dYwjEaro5TYMSoZaf7/T4Ez+fcA1Mil14+RfH7zSjRiJjy9Dfesb9KDjR4edYO7GcNaOrkjOLycS0e7nYj8A59XGkHqeTUDey3YS11TS0+vVr34h6EPHE9kvihTTK-M8KFO/K5WD2g6yCMYrsnfb9YDsIDStxNdcmh02BPX/g6OP+EGF8p8wsxVl2DvSIvfn083oGEnMK211V1kDeBkKWjpOl1GLDRV4tp0dXzXXpCkydYDUXQcV73FV2/u5hYnRNcCIkIt8tu9HvZdinxoxmqNo9ZAionXqPHQ7tAjExwjmlBcjFCBTyBc4sjrJvl8XKUpzbP8rtA3smsapGgOfGsi+x+lEWZlV6nwq0NCTGMgAIVmStAQ8L89U4PZYcT9+TLMq80Tph6oEpwb8ns31/5Y4M08zM8Dc02hCY9X8Q6S7DuQqHSjkcWmqmr34eGVYcdK0vCXmyYeBCyAOiw3vzlHt4czf68pY/hJSAwM8OI7Kntsxgp0YcoAcBuX3gsJFJbJJPhex5GPQrHYkFkV5+B3GF76M-PFCZ9xqCV7dFO+ZSo1d6SOLSnr+kFwnIzy42hjpAr3TdKuI7Rl57y6NhWZ9XtF0o3E6iomcEmws/6jjSSRwrzWz/PSN4kbOBLwhF7W29Fg2SVJ/JDp2MV-afTGzNZQp3iPEM9MV9LnwT+nIDyxEpKAyT9WJ82fQS3PkN6OWT416/Yy4rLeq/ckmCeMSbBRckprWG/uGmaDiUCQy1CLv7DTuVuK7y4JIB9kw+3HzqtGkx4o/Wf5Z8n+MbHU+SGe6WMeE+dlJ02y6yOEDkwEyjlSp9aHnBMrGtzH30ABKAwmrtPAoQxxUE9iCXENFNAvpYItqpIr8weWVrRee5DaUp3OxxCnICczoTBALyn0UdgeO4GA9YCsEwdIRsP+ZDogZYzKpMp5Bh8cGtVlEQJ/dEGypMNwhu2poCM5QnYtsxN2b11qaIoWz8PUslZSSJRJj:SLMg2VRMAF/DvjKjIXft7qUhB0VMgUDFS+7sl80DfP-QQSpGPrbgtqt7dTkqscAfytujywD/cwjDLGlKx28zl7bnioBxVqTI/gJLqcWWlc46suLwkycaWS6lZkj6eeU9ZGxAKQpm5jQHzum9QzeaIBdXNd5Oqbxk-ovySZ9HwrU4h3TpJlz0M7-raFMIbFxf5u8EGt2OyatdgxEmDsTQTXGcyB+20viCqcAL//FBw/YdMQxUPH8Cw75QcYi1L8UicynCKYGJ4i2+ebEbP6nlFwhoT0RKXSIwFBeK4S7UHr9seitAa/uKC33E41lvepZ4ksYWns3ymwJSKGJ/eMc5DMMnrWLskc/6vSL4WBlsGlMqmubQqq9XTYMVtmWUHYil1Tm3YPCWIhQQaaTNcETt09ADAceqMLXgIJWLsOIF/1ghRQ2F/j9iSwACnHMiMMV28MO7BqqQktHxePCha6rdMe4A1AP08ODNaUPRMydRqw24aXXoDNT45cHW8/VbbYwRPpRdeLYnkjm8ZHhcuvZa9X+BvDRJRyTbQU9riIA6Tzk2jaXWaTyWO1bJJeAfq5G6DGrwIiKRjSp5pz8d0BscWeXMfGUY2TMkMJqlq9uolkGudRj0as9w1zTRzVg1np7fzVIFtrHY0m3ZlWGIUsAKz55ABvEktiUlQVr1fKXkoYZtLfiLNORaRkaX0elNgjFb4BZhZQaaKrEYpYZc4pUPLI89BZqEf9Qjj2v76FdfKmfn3zb6kTfGp8dgREKXIRM8LXOAmnkWZs5qUbOMpYt8eLu017d7p8wYAobLu+X4I45bAvyQncqKr4awZ7TCcDDUO9h6rqTk79CzW1AhnXOaeD6E+MKdk5Q1tcZ5zo8PuwdBH5bsywAohctvwmIlVt1P6ig9q7d5w==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
