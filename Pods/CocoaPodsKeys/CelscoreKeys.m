//
// Generated by CocoaPods-Keys
// on 18/10/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[846], CelscoreKeysData[2058], CelscoreKeysData[489], CelscoreKeysData[1218], CelscoreKeysData[468], CelscoreKeysData[1600], CelscoreKeysData[2170], CelscoreKeysData[1837], CelscoreKeysData[653], CelscoreKeysData[497], CelscoreKeysData[71], CelscoreKeysData[2297], CelscoreKeysData[334], CelscoreKeysData[1157], CelscoreKeysData[1419], CelscoreKeysData[1617], CelscoreKeysData[386], CelscoreKeysData[852], CelscoreKeysData[1034], CelscoreKeysData[700], CelscoreKeysData[24], CelscoreKeysData[1806], CelscoreKeysData[1314], CelscoreKeysData[1423], CelscoreKeysData[1118], CelscoreKeysData[1549], CelscoreKeysData[936], CelscoreKeysData[323], CelscoreKeysData[2083], CelscoreKeysData[1625], CelscoreKeysData[2277], CelscoreKeysData[1201], CelscoreKeysData[22], CelscoreKeysData[1920], CelscoreKeysData[422], CelscoreKeysData[391], CelscoreKeysData[759], CelscoreKeysData[1870], CelscoreKeysData[834], CelscoreKeysData[1803], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1412], CelscoreKeysData[1557], CelscoreKeysData[1426], CelscoreKeysData[1181], CelscoreKeysData[673], CelscoreKeysData[2258], CelscoreKeysData[1514], CelscoreKeysData[290], CelscoreKeysData[446], CelscoreKeysData[1208], CelscoreKeysData[1308], CelscoreKeysData[933], CelscoreKeysData[911], CelscoreKeysData[2145], CelscoreKeysData[1371], CelscoreKeysData[987], CelscoreKeysData[1497], CelscoreKeysData[687], CelscoreKeysData[1495], CelscoreKeysData[239], CelscoreKeysData[368], CelscoreKeysData[77], CelscoreKeysData[714], CelscoreKeysData[588], CelscoreKeysData[872], CelscoreKeysData[696], CelscoreKeysData[1336], CelscoreKeysData[1054], CelscoreKeysData[914], CelscoreKeysData[202], CelscoreKeysData[1709], CelscoreKeysData[1086], CelscoreKeysData[371], CelscoreKeysData[1234], CelscoreKeysData[1344], CelscoreKeysData[2269], CelscoreKeysData[829], CelscoreKeysData[847], CelscoreKeysData[663], CelscoreKeysData[1156], CelscoreKeysData[2097], CelscoreKeysData[629], CelscoreKeysData[1699], CelscoreKeysData[1823], CelscoreKeysData[188], CelscoreKeysData[215], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2298] = "Xpdp3VYcFiPVxjcHG6qUK92va6zBUE8ho5i+XEenNTp5Ah7hMkLmjvO9fMJ3gff6o70VZwQ28qiC89eYk44sdkZC4D4IPMa1EgllnLR4xNl7Q6NCl8yyVGLTkbk7MWutIiVAgLGXYcqEqArtTsXuEDrkyi1pLw5X0syvuJsg+ecBIFl4rmgOV9H4y4Bi6ic72NxcRrjgL49L60c8VSMPyf3cKus6F2+wlDezI8wHagkFhb076ibLHYco6x10NM866hWHFX2I6W4AwEfFhSqNNv8+OAfvYwGCH3-qq+QemOlNTBPV/Z2ee3gboDjoB+4jYFYJmh3/7Hi8g9AlDb7jic+qLC3s0olaMF/s73jibTpDFXtv1W+foqyC2UOvVpReNvfw5mDjUvnZ+61EmnZFtGKCTRf9G/26lutmsM9LFZITs2/aCDZt5ABRq4vykJ14I3HqhXYFCRDZNu0fNOzo7j//OpUUeJvaKz1Gpa8xHwjjbRgQ+sIyCsMPMJi7t2advD7s6/FNDqaK7N3XVm2eSKC5mpkW4f3yh2oxKHjsSm4BMpieUWI0raNW0EWLAYw+7gzcu/zb0R76-LKNTavhnQjcDv0Q2/cc2h4Gfj+jqZ1EsVT4GiILgaXTtyx8WXV+ts42xcKf+WHKJbbXbxvM/BA1hz+5v4mv1a30J/QLc5TAVLJb4BIcSInr4mXmyuoRuykIJxSY6IbwKHNwySSdTlYnf+bVzwU7GgkHAW0eTA2ZIBeXGBa9xqLKRmm3tvgfDK5vjq8QAhJB9mi36K+C/OQ/86NTpBnr/1Sasdw8GWl91PtUQEo89QeNnis+5csDV/uCY69JaEq/+T0bh3GnlYAgaJkX1eUvXxGGFqZQ4ynwcjQcw+yA0SrkSmols9mdsQJJDwR/SkSQ7qL8EW-nbkbgp/vu6d5R5Eb3k0YBAtOt1xi56EJmFNx0kPL/7QWEaU3UyU/uyWWnWgXEa9MQB+q6h0aeDU2+7Fv9RzNsLzy3+hT4p9wJMFlth68rRF2Y7WX9LbTUJJ9NFTWlYYCS3XWBXAKZLU9+8J3kjKEyd6GQcNJ8k2KPqrWrgE41yj8GNOoXQXbHbeQydwqaQVS1Eu3jyQKZm4Ousi/TjqOYHn9XvejZ1pkUo+GV7iTf4Fay+rXP09W6Lnb50WxNbRSZRQIi3qCJ6es78axq1n5DeHsg58PYJdSeQRft:gTKQGFSJqEL5xpgVB/7yzzrCg-abqFoccYeMgP5LnLnif7peQJcpKbjYeucbvsHPiypD8E8gWmmjEIYWk2tbkePcsP06+RTQgcod4eG6L9uvTCB05fC+lHSmc0IXfTd5YQpIh+m9EtDYn5KuDfqEHfLVquYOzA2UwtdRoGjuHiAHOlp+AC9JoVIiNw/P2LrHRbbR/0CUZUTucamgsarY1S8av-/qeF+jxyXN7LvJncIkzugKVOIglOHzSK1uAh8YDt61sLCGP4cHl7HUHuI5vKsHOR6Vgu-EewfUEoXHaQBVXWvhDtJLDg1PKgwNjCJ83D4OyYYUpZ9qH9CVHDBSecgl6cIfs73o4RqTkDOT/acnXJVD9C67Rtbme8feI21eYTTefH+61nHXos1/0WpHo8y4Yp/GoZcsYQ5lQMsPyAs037GDZycbG2KdfpSEI01hw0rcCOr5zCMAE84fgLoyJogw2Jxn9mesGPjekF1OZM26B/Pa2ixxaZe9VNn+HbiVwuuZqtCSD2FqEz3h3iejlm4EGevSYCElvijg+WhfCZGW7fI8AGoT+URDrJ2KnvpkvUu297IQbn8mQKsTYEP/B8FAMc1onw3kYoLM/Y1IFM7gDXi8fKn1Ydju+c/eA6+soyDqHsV6RljcEBMebW+835nWRG7ERCVxTFfGQ3eOhGpWNTeE5eRht8E56Rav2IWYarRtEANTyOd/ihvJebcBgh9XH1pZbc1VTA0suAJoo5yqYFSbSSp/xOMZR/THW/tzPQAQASX07Mj9LQiqK0mCmbhjtSv6N0j3jSFTNIpVgYmYOIqDwXzg9Mo5/tqIdjxofi6Wd3QjNgDZu2y3QXjJ+aGJSY/A74Su5fT9V1z0PNMGLHD4lJUAObEi8tdP3Th5Vc2PrdcAB32T2GBdl7zVN9pnQm2nnOzy4GdVi9Ald1FRNoLGMRNg8N46HrfL0htgn0IEEWq2u1ZRWJ2pC4hBwJgBl3NRmx+DPr5s0WqRd5w4yQ1IWeLRNWK5IcelsI+4YXIVGx6sxoInnfWLuKTtULMwzsdUrknqemez1ReKoS1EnKIGu8K+Yu9uuYK9g==\\i";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
