//
// Generated by CocoaPods-Keys
// on 14/10/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1739], CelscoreKeysData[1148], CelscoreKeysData[365], CelscoreKeysData[2631], CelscoreKeysData[1006], CelscoreKeysData[904], CelscoreKeysData[2208], CelscoreKeysData[883], CelscoreKeysData[982], CelscoreKeysData[1558], CelscoreKeysData[746], CelscoreKeysData[2613], CelscoreKeysData[2169], CelscoreKeysData[1804], CelscoreKeysData[1875], CelscoreKeysData[273], CelscoreKeysData[13], CelscoreKeysData[2136], CelscoreKeysData[909], CelscoreKeysData[216], CelscoreKeysData[596], CelscoreKeysData[2352], CelscoreKeysData[663], CelscoreKeysData[492], CelscoreKeysData[626], CelscoreKeysData[1809], CelscoreKeysData[1937], CelscoreKeysData[2616], CelscoreKeysData[873], CelscoreKeysData[1596], CelscoreKeysData[96], CelscoreKeysData[2067], CelscoreKeysData[228], CelscoreKeysData[1630], CelscoreKeysData[2559], CelscoreKeysData[1242], CelscoreKeysData[1062], CelscoreKeysData[2698], CelscoreKeysData[886], CelscoreKeysData[686], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[164], CelscoreKeysData[2271], CelscoreKeysData[1101], CelscoreKeysData[2540], CelscoreKeysData[1620], CelscoreKeysData[1327], CelscoreKeysData[2249], CelscoreKeysData[1951], CelscoreKeysData[182], CelscoreKeysData[2611], CelscoreKeysData[1059], CelscoreKeysData[1284], CelscoreKeysData[1246], CelscoreKeysData[1130], CelscoreKeysData[95], CelscoreKeysData[1261], CelscoreKeysData[1323], CelscoreKeysData[1121], CelscoreKeysData[1141], CelscoreKeysData[620], CelscoreKeysData[433], CelscoreKeysData[2492], CelscoreKeysData[2310], CelscoreKeysData[1110], CelscoreKeysData[1174], CelscoreKeysData[2484], CelscoreKeysData[1557], CelscoreKeysData[67], CelscoreKeysData[1152], CelscoreKeysData[205], CelscoreKeysData[878], CelscoreKeysData[2369], CelscoreKeysData[2171], CelscoreKeysData[2253], CelscoreKeysData[2359], CelscoreKeysData[806], CelscoreKeysData[747], CelscoreKeysData[913], CelscoreKeysData[307], CelscoreKeysData[2496], CelscoreKeysData[98], CelscoreKeysData[1522], CelscoreKeysData[2017], CelscoreKeysData[1007], CelscoreKeysData[1659], CelscoreKeysData[2335], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2754] = "ZGe5wPGY9phRdfpPwgomOvL1MfHSgCmin+tHhPCdZ7WU2LG9bMjTM6fJFofYAVuCC319QELy7GSogUTXaIaHtErlv/zHPSxdnP85DAIRMtsOEfi5bFWl4GkkBc+lr3Aax3t+2iLfwC2j+YVOIs94ddZTN6Bsy3FjbLLbuAeQPff66MFgcTjT7K1STaDT+aY5I1lHYsUU/MbPb9h1m0WppOrFyEcxpSFB9eKk2XS1DIs7NnVyF1bHK6YwoOpyOIq4U9QFAp+RyEXda+lOLYmxWK29Z/O2nNdgZogzsm8bF/b65JV2T6V1gggbdfmzOg/dF2x1eyGTOIejicWo3uyVkzr+fIiJQ/yBXEd2mZQoKOSsGwmWx8YyF2TAQjnplw+NgLuBO9PIUzjLngtfmlCbyu42jCSXrxbDjNL7mMe49gqNi5w7p1ZQhN/ZXUJNnCb5OjGfyAdFc6xTJJVAk8dtshWBCfa/WYFSchjZa4B5bwdp8HUP5Wr+GU+BQtU3yyeJ5hGtWrpVn1RfVREK54t3D7rjQGSJ99VkXdo9Pfw73g0GDJfW1iI17SXY8KmLAz93FJf3Gic4Jt9uPx3YaFH4ahw34Xr35iu/e1Owq4IdMFWF7QQf2EOrj/9EOepNTjkZijfVoWEburXjtO5FFs3XH/093JinnE1MExZnv/F/kBBOOIPspMTglXwEq6F3xSo+jRxlmv6XjZqSRTAhlvrA6Tz+nAIF3MJ2TajKCvq32b2c7On2F1tKICywkmtu5epCqUSIilVeY9IpjfsgBjmpOXOa9rN8UHl+ahhN5I1OlPnhlunWe2omwhDS8YRRIvxUAZrAr6kagwv4K8KueX7Y4WeJfl0MvhHeJzVwEojyeMnS+Kaf+YHY43uXV0Pz36KtsNtJw9Ve6h2zn914Wb8kMJp23agT31nrCKPqMfs019gMsPXcy8SvagDo6oBkVEWEkLZLS/5RzyVXD0yfewnRkXbDqKBfIL41v5e/9aeUqDl3MP710OIP7x74yBqiulNcHm2Ar4juI31tIPPpeIq9DcruiDcC5eN4CgTdyxKLNDGm7mq9ZQr3l81pPMeL0tT7fxb6t2uyeqF2+-MrflUycY-ptaExpzGBRbsgdz6bqedms+YYFExd7-g1JdDbXPc9-OLkoEFwAIl64jSA6Vr1xI4bqXHHVByq30mCz9xuUcbh0FuJcdNvtxbRSuWiuiUuCjyx471VPCzIzfdxKr9eUcqHoHjqbK8f37HpOGc3TEOK2endCRDG9iKkA9co2taoK16Q0crgdnN7/n3hxGCd+OhBgiSoXVexlfwhQ60f6npeF3tsfsexoSXN7KaT6JQzq7e2c1N+cJlpcd6Zg1li2mgtAwnPowi6UivKGZEgW+Uad/kEFIRpOObZQvY5bd4Uzyroc7uiPgxZHbnHHmcF38+h7fQMt5hpeFLnGO9RmoNlXVQTeQp7o9KoS/la9aBOq8BT1ZtFCeUhQiELVtZ5Lzsa1z9EzxPIec/y9eCxNUILk+orKdaXW2zOHE+8FfuoHPnf37T3rAYBQyeY3TC4p5sGTuDnIen9b5/phu1Ur1sa7IeeUqqrcH8uw0OqYO8hg8WfY/DwqxfHxGBAdbhZaoyezjn/6ATNHtiSg96sKP4TqODApu8Vo4v15K36RbPzd5aEqD0Qryx1qfev/Zic4lY+c3e9jyMyskcEapA0RfIb9+Y+0xe3zlLVDaFVjWarvrXQoGk5oq+0mluvYj8VN93Dfxrq4IE5hkq1N7K2hswgYnaNsJWNZBZOoyaLf+JEEZu2IJ3toNEN91z6JebYsrerDTcNZKskR/xnuE3JdJLFstQUaOvXY6wm0LQTpunpdrnpT30ciMaKO4MJIXbr0CqfgpvICrn+oLd0oxuOa6kS4CztZJRcTSROKfsaOK573sWfGxZ9i0NmoRBsHAkSOkZBclJ8oBp-oW41Rfa4V3RftpLLCeh+m2rLZVfWk181vN2zHS6eegJPtA08mdb5vlM6gMImVA40w2o7xHlLddMBNyt36x89H3Ab6ANkUYVuJ2ZwWRo9nRQ7xWCrz3rd+MT651qOhaKXPsFM42KERTFdcNsMsxtrFnkO0hnZAVo/IgRT8IP6QPVl8EFQ6KHuj+3Zl4RJ0i0XaiI7kbxH0IsDmA0lwXTBJnrOMALf4J2Uy87eeeKkHJf39QFHs7tHxc0L4rmeEMtJ0EnDrTQEZDrdLxco04kJ1ODR2Fw34Zah+r6XdJCX1tzhY-vmYsvJoU0jAYnZnnPsUgrlbqx00ykc6YDzzLbdJPYC0TmZ49exiovCMIbXG3dSVEwiSX7fFEppNZVeScnczkZVOkzT1P/urWN48ERf4XP9V1WMN4Nh78phvXIuaxDf61ng8VCylp2IttFFodyjz8BU5fxr/UBLIeS3T7vBkjEjE6V92mnacPw6sAzcS0bdJsWt4ArjQ7zIBxZCHnLJKdXqgXBRwajmrDXGm7Z44EOgm3d09d9D03y6ygtf9nev5rpKK8cI8qWKDIN/BhV3HpoC0JvIU93ielP9lNp9Mvz8j25xC/O9WpERaHckaYTqG5KsVP+k3+WZHYrjHP53VmK4dMp3SkV1YVe63ea:Bi+iJe7HMvRGbDos85pElWYTs2THp9JubtnEcOq4C8jm8Of4CSWeTmMyznnnWSs4nLFunftQpQcSlCO57hqK5C5+eX7Ozf5PZ3k13I7MCXSlgbkcVz8mwUEIaHWemmZB3PFv+EmUip7Q\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
