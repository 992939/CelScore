//
// Generated by CocoaPods-Keys
// on 11/10/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2037], CelscoreKeysData[1055], CelscoreKeysData[525], CelscoreKeysData[391], CelscoreKeysData[1941], CelscoreKeysData[1604], CelscoreKeysData[194], CelscoreKeysData[981], CelscoreKeysData[1874], CelscoreKeysData[1841], CelscoreKeysData[1576], CelscoreKeysData[2007], CelscoreKeysData[1834], CelscoreKeysData[1516], CelscoreKeysData[45], CelscoreKeysData[2152], CelscoreKeysData[1869], CelscoreKeysData[980], CelscoreKeysData[655], CelscoreKeysData[616], CelscoreKeysData[2016], CelscoreKeysData[247], CelscoreKeysData[1617], CelscoreKeysData[821], CelscoreKeysData[751], CelscoreKeysData[599], CelscoreKeysData[1115], CelscoreKeysData[60], CelscoreKeysData[1730], CelscoreKeysData[1179], CelscoreKeysData[377], CelscoreKeysData[842], CelscoreKeysData[907], CelscoreKeysData[359], CelscoreKeysData[670], CelscoreKeysData[415], CelscoreKeysData[2178], CelscoreKeysData[1018], CelscoreKeysData[1474], CelscoreKeysData[2380], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[761], CelscoreKeysData[216], CelscoreKeysData[238], CelscoreKeysData[2197], CelscoreKeysData[2172], CelscoreKeysData[2079], CelscoreKeysData[539], CelscoreKeysData[2230], CelscoreKeysData[2319], CelscoreKeysData[1410], CelscoreKeysData[1201], CelscoreKeysData[1929], CelscoreKeysData[1529], CelscoreKeysData[2182], CelscoreKeysData[2119], CelscoreKeysData[2336], CelscoreKeysData[1960], CelscoreKeysData[808], CelscoreKeysData[494], CelscoreKeysData[113], CelscoreKeysData[1229], CelscoreKeysData[1640], CelscoreKeysData[1455], CelscoreKeysData[1919], CelscoreKeysData[1180], CelscoreKeysData[162], CelscoreKeysData[277], CelscoreKeysData[1855], CelscoreKeysData[766], CelscoreKeysData[558], CelscoreKeysData[78], CelscoreKeysData[1695], CelscoreKeysData[94], CelscoreKeysData[720], CelscoreKeysData[2167], CelscoreKeysData[2345], CelscoreKeysData[719], CelscoreKeysData[281], CelscoreKeysData[802], CelscoreKeysData[725], CelscoreKeysData[134], CelscoreKeysData[2086], CelscoreKeysData[2135], CelscoreKeysData[902], CelscoreKeysData[282], CelscoreKeysData[430], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2410] = "hLRfvZJKfdOLblvqzTUafcnxIJsvuLdOuVMdLH+Dz62lsrc9TexWD4hCdK7oJdgML9KghAcCjy8F2iarcS2Q3xV2tG/9AwfCTcpjSxjwIuFP4+c1n7Bi2FdJtVewHpVnVZZLA38HC2DUO5Ul3Z1A+ffEbw3PNAMN7h44l7xUu1ze7sfnFPVIQyUhBvc4C1enlP0qAmWjCWW7akNVDAPOm7ojsSpvO3ifjF0js/qUcG+MUq-+/cpxjdU8hhwiDB7l0ti5tPbiSaaM1+bhu5Wl55B+9b6U3+b+9oKXGDxiRKPn76aQ4+DXeogJ53tuKJxePm9m/3tY2w602vVzvpFCPofqAVRZn68Dsk1wYf1TG62o04dGsAEfWu0bcnCiPAi2dV8OFmxEoQFvWiVii1gNjgx1PrrBJ8yjUwgc6yXAsX91CBcktDFOuzXJG8b8B8mRoP6n5dpV+Q04icQvM0/7McyPsoL+kK+qXrXg+39WR3iCEY-OVkHN1sVlsP7sgGeObfrInsqgbgnyawnihK2DlTxXGxUtHyY6TJj1KK81TyRJm/9a5qzgusoYuwlw0SlgifRQjvZ+3M0KwxD3kCmYfw7eGNWaFu4pCD33bK49y7w+brGOgK7q4pbGlOef9J+L80CWdaYleJtJkU097XyJ9yTwfnufFG9dpTWvvs5cCXrZjJkU4195OAEU4FhC44Yk/AtXLBBB6H1AcAwc-9QTv00FAMUDscLx+BHllxNDNKthYVYO6lLRtEsqSu54Yd-JtiLVwJexe132YVKhZZeaB2lYr0unjoG3te1I3dVpbpFEui5trkW+R8c7IFW2EY11zIFrVP6wpWdy1D2EAXS60MGLe8CcMdfoXBPTrUXJzRLsfYlYmq59XBvAHqIpPWmLGrUYil1xIFh2i47mg8bRgFau6I3PgmlY0p6BUjnJyEksajRAhTn+9BeyCIDfIt9eCnHufKv6C//3NPrZVzPQlYZqQfZxmt0u5+wxB8JWR3MXXCO9VP3CQKxtzD5RL1aF3wk/qpPDQehihfiP/6xBIbcLvRlkycnX8k9ndR/pvQ+yxC41F9d3CLKrypT937SVRISlnBIvnsp6ZcW7YxJ8lwyFOZPAE3Vac9AScPYioaYbCTSmmEVBlkyVbBK1hu9IvYVU1hhYTIuKFPK3QNHW5dP6RHxY4n5AWOEJqH63IF9cdttdCd9x28KMWLkvMXyBLcUgLfj5vhHEI1yLc/mGgtDpKhydCxFMah00lKmBQQ5/i9+CTUdDjB+WESyAXPfSZ61TcL7VhD7I0NdvFf6l75PiNqRXGlsnPbZQBg5pEIOvd1JsZAg0TsA+ZoQwKiIYt/wCXF0cI1oXNRNpb0Ieex7fFSfMbmQOjFdzJwPgDYxggSQeZXIfXLBSI0JERbaxaJ:lfnrcWB0ASlysAUHaigAhuu5DmWuLb4IW12dBzNSLoB7bib/aH88VAAI8D7chdsuF+SGUw4AkXcCHtyxdr4fhEoGqT0nY6pi+NyVKIqkI9xBaYVp5yTu6J8adlVgeP+DprVnT+aEK0NXgCwvZI82ITcrHqYbh/NTksr7k21tj9cK3dHdc4K683qYjOaDIHmPt6OwvSyUe9FEcv9AcfsTHElsrXWtcxcmfwc7A9th9CJ7S9dZo2+BdchFmjwwRobTtFVBSe5cFyC4Wc17+/KfMg4ss5kw8Jkb6krJUlu9Lnu1wBFszpLLMbfZINIHyStM2athiHUmf9J9i/ho5JKQ/nVV1cQwPYCRg+QqZjMsS4nSFqIC5KsG8u++7qaKzNz7DKwbCxAPZxwEblyz7Dh3iHpGJdA4Z7VsmNkAAb/AKL5yUlsfreNfMLSlLSak9PiXBQOBA0AS3pfyR+ebLoD+dM8fTXyxzJmpk+l2SP0OPCNfyUZYEapypvCDtpxs-N/4lisuKn0ucM2orUNeDZ7Ra8AMFFSld+UHKZ6+Ne8UglUIuCZ4dVSbKxkesC+uwP1hhw1F/ZETI865PaCyrBR2ifzLYr18CadPKTFle6kz7KkwVMm6yo0QLIAYQW8OfUUbwEvO5qwIMwmYdSQ0UkuVIAnstEH/sxK9GMgaYXf7bCJmNCRFNoQTxWJZKPnlk/hZphe/d4vgP7l3pVJZ7S5o2s2HtmvoObbfnOAhPYLFgaALI93pUrMf94Ytua2HbfiKfKcdk/nO8ISK8uFgD/e2sjLa/STyMIybH1RHlayv9aND2Rg9EVc-1Wk0rh3txPD7xB2g16Uyq7gKd5EjuhYOM4FYyE7zSHHYvpi/G3zu3/t7mu67WLx7KUt23uympYLABQw1qegqPlGf1dQZPzur2YeGDunijeucW4fHH21rpTY2Ne8QzW5PzOdotT1RbWTsRZaL9meKtPKypUiOm00KMDRxFTGlfOUWlrMRb\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
