//
// Generated by CocoaPods-Keys
// on 23/09/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1137], CelscoreKeysData[1939], CelscoreKeysData[1191], CelscoreKeysData[41], CelscoreKeysData[1083], CelscoreKeysData[1971], CelscoreKeysData[438], CelscoreKeysData[1042], CelscoreKeysData[2020], CelscoreKeysData[1263], CelscoreKeysData[2137], CelscoreKeysData[1393], CelscoreKeysData[1280], CelscoreKeysData[2956], CelscoreKeysData[1374], CelscoreKeysData[1763], CelscoreKeysData[2062], CelscoreKeysData[187], CelscoreKeysData[1630], CelscoreKeysData[603], CelscoreKeysData[2682], CelscoreKeysData[2556], CelscoreKeysData[631], CelscoreKeysData[2078], CelscoreKeysData[1978], CelscoreKeysData[1523], CelscoreKeysData[797], CelscoreKeysData[1496], CelscoreKeysData[2140], CelscoreKeysData[1248], CelscoreKeysData[1851], CelscoreKeysData[390], CelscoreKeysData[2505], CelscoreKeysData[628], CelscoreKeysData[1011], CelscoreKeysData[2451], CelscoreKeysData[2695], CelscoreKeysData[1154], CelscoreKeysData[1439], CelscoreKeysData[2154], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[791], CelscoreKeysData[1926], CelscoreKeysData[2462], CelscoreKeysData[1246], CelscoreKeysData[1633], CelscoreKeysData[386], CelscoreKeysData[285], CelscoreKeysData[2866], CelscoreKeysData[2450], CelscoreKeysData[2602], CelscoreKeysData[2365], CelscoreKeysData[490], CelscoreKeysData[2691], CelscoreKeysData[2090], CelscoreKeysData[2031], CelscoreKeysData[684], CelscoreKeysData[1497], CelscoreKeysData[1735], CelscoreKeysData[1239], CelscoreKeysData[2647], CelscoreKeysData[195], CelscoreKeysData[2229], CelscoreKeysData[284], CelscoreKeysData[2613], CelscoreKeysData[891], CelscoreKeysData[2657], CelscoreKeysData[40], CelscoreKeysData[1828], CelscoreKeysData[1817], CelscoreKeysData[1902], CelscoreKeysData[1221], CelscoreKeysData[362], CelscoreKeysData[1504], CelscoreKeysData[1145], CelscoreKeysData[579], CelscoreKeysData[2303], CelscoreKeysData[2165], CelscoreKeysData[182], CelscoreKeysData[2721], CelscoreKeysData[511], CelscoreKeysData[2324], CelscoreKeysData[545], CelscoreKeysData[991], CelscoreKeysData[1093], CelscoreKeysData[2392], CelscoreKeysData[2581], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2986] = "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:RL+o8qQCS0-yVws8+lmqEDmSKAw3sYPWDVnSxlipuIDj7UeOZSmvdA4AwPSgvUhNJ5IqQv051wuE0CDaJPr8U6Tz8fzJKa8/7seQBPvz7phZH+Iv8FVykN1IgUOtcFIb9XjAvJZucbdTDTfe2IQkegS3QFr+zWNvvrwU7zVdjI0MS6qe9BeZd21Sjhz3OIXVmaGhKDoTL3YCDbC5wT7kMCZ7ZoRp00M2VJhVHb8Al1GoD2HAt/XJzAcm5gtteNeiqep43Qg-p+hEPT11aIJdch/249GK0k7H6scMU+xbr7vYaXVFTd2moxzB1J1YNi4FDcchj33bxpTt5FOaAsj/xA50lbqWybZmq9regmzqv96zZSIzCyQt2s6JhQQ==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
