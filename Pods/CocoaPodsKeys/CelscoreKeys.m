//
// Generated by CocoaPods-Keys
// on 21/05/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2438], CelscoreKeysData[404], CelscoreKeysData[2586], CelscoreKeysData[1891], CelscoreKeysData[826], CelscoreKeysData[2246], CelscoreKeysData[2], CelscoreKeysData[1399], CelscoreKeysData[635], CelscoreKeysData[86], CelscoreKeysData[2549], CelscoreKeysData[1934], CelscoreKeysData[1909], CelscoreKeysData[2125], CelscoreKeysData[207], CelscoreKeysData[2417], CelscoreKeysData[1557], CelscoreKeysData[1936], CelscoreKeysData[2411], CelscoreKeysData[2075], CelscoreKeysData[2539], CelscoreKeysData[2027], CelscoreKeysData[285], CelscoreKeysData[1131], CelscoreKeysData[127], CelscoreKeysData[2166], CelscoreKeysData[608], CelscoreKeysData[1133], CelscoreKeysData[155], CelscoreKeysData[1416], CelscoreKeysData[1033], CelscoreKeysData[687], CelscoreKeysData[1262], CelscoreKeysData[1621], CelscoreKeysData[2189], CelscoreKeysData[2553], CelscoreKeysData[107], CelscoreKeysData[1851], CelscoreKeysData[2328], CelscoreKeysData[566], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1631], CelscoreKeysData[1526], CelscoreKeysData[2324], CelscoreKeysData[300], CelscoreKeysData[1509], CelscoreKeysData[1365], CelscoreKeysData[1558], CelscoreKeysData[60], CelscoreKeysData[2443], CelscoreKeysData[2078], CelscoreKeysData[1919], CelscoreKeysData[1539], CelscoreKeysData[1164], CelscoreKeysData[383], CelscoreKeysData[440], CelscoreKeysData[2403], CelscoreKeysData[2131], CelscoreKeysData[778], CelscoreKeysData[534], CelscoreKeysData[2230], CelscoreKeysData[280], CelscoreKeysData[2228], CelscoreKeysData[1798], CelscoreKeysData[1240], CelscoreKeysData[1057], CelscoreKeysData[400], CelscoreKeysData[2540], CelscoreKeysData[1632], CelscoreKeysData[546], CelscoreKeysData[1351], CelscoreKeysData[1182], CelscoreKeysData[1087], CelscoreKeysData[1845], CelscoreKeysData[1055], CelscoreKeysData[1524], CelscoreKeysData[270], CelscoreKeysData[1801], CelscoreKeysData[721], CelscoreKeysData[13], CelscoreKeysData[2062], CelscoreKeysData[2551], CelscoreKeysData[2550], CelscoreKeysData[2462], CelscoreKeysData[2610], CelscoreKeysData[2196], CelscoreKeysData[540], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2642] = "UM0DR+nC9tMet1J4yDPaP2sGgZzTddahuqAN6hvfRNOBvfAq8Pi4xiIwd4Un-7S2ytYFAB3hYDCV3wyl8u0TKps36gpVRkSsSAViXwvycnJK7WDmb5fC/DujykJgVbQOHw0eYx0lgDknNgkEgOkBoWG3jEVM4vWUAlqlnl2JV2vLrhpwtVtmMpVcAs2rMN3bnxlz7Mdbsb+W4UrrYk44bD1LaM3r9g/cLbgjwO9Bf5F/G7JKyxDGuR8SBHp+xoe3SltMBlvMwiPRT51lLhRrbfya1ni/j9K4lz7aoz/C8Btfezv+kCCI/o91EgHlCBgwyFTA62vO9KsGfaBqdTWGfRj5VSb9nqkeMbFIzN+ztb735HsHXsHeDaiehvkSh6mdaV2My4FgHXz+ucnJ4cR0XDlWrmwgCud9J0uivmdQ5/osQJ7pXVjWFG9MdbFYLwwCn26ugYmaIMKLCuIgZer4Zywx0MbOiKkibfNYLDDjuASaL++udfpGWgOj5BMqSRcZTkCYPTlJnRbU1aZcdIgWRa-b7AKKcRY9Yp-hWK0BShgsk2zr5Pi0KCPBsDODgLTmcaF+6ZNpVvuB3q8Q5HQijB7BbAKAEsX+AbPi1d3kpyechIoUwg5wEzNu33sbx/AOltCl0dCoPTEh9ZAh9D2XrNQOZZSuwjK78STAze6WMC6ft/BdPxN7CF6d2fwy2tWBLo7rSQL2D8RrkIQnYbBsmUtJGoatOwgeFRtvEgl4Kl3BTxVkXgAWQgAPxutdeu9mdRQkGNmJuPbURQY48WsUKoLdpjbTJOjRl+vOVftqpnStInfkB1JLw0tLrv7vKKGEERugW+uM+TDa1RgddMrf7CbJsfA8OLz2sHJmtTXfopgw0k8/F3tvwV+7oE90IurcY7Vv/gmDVr9uVWe7wxDWgYV0Ll7zd6Rp3MHV935h4MG+0NR/Jo+rFlLpzAYbhA8evKLaEJZaIWLgmXRCfi0WczdjvmqFwY4HvQHPMPbJuexLIdp/Unrn3rP0t3Ybaeu3IMp5ACOxNnorh4CkXdtcJ6R6A7n686U-c48TJgajOrJRqPN2Aa0h8zidFt1Zsh78k3Nygg4KHw4clevL6hhFroQ/mb6EgF6R+5ASg9LAAXV8TJsm5Pt9MK/KqhJrdzvzDLzSH3RsYYp78J3Tv50wtqv+NJrYoHat0e7G+P09JaTxvIx10iHERKiw2QuBHjTcyneA7Wpc9A6sGvYp/tPsbRmb-Dd2CAROW4vkQX59b7BwAA2F4d0dmnoLzsv94CKTqg9iIZJjlUpX6GTcdbfSDDZ106NTlqJJGPIuIBsMehiVHYCkt6Mpj/4kqPpd65byOZlNe3r9Gd57hqvNTa71osAtY1krrybONvbWY54wHgjLSKShIgSnrZbYHNj+XbsZzszHS4KMY/dcVb6DvPVuDwArqJgAbh6E4CR+bwPYw5n55d69zVsdlKTKShPTR3tpiQPP0BE6pNfY3KeW/g1Cbghz0V2kJnzJkwYGGane1OrufgBnr4Ji9FssFBKvc1iW1h40PNAfwS5RVt5Pip0TZftOp1dsA0RGbpWYPha4YFj+eC8HQ84vX6TgeaYwVvvCIQev+YXYrdR3h2PxRRLD4TU/+bs5FNmu9DAEQw+SmBfOpAZq8oTcLbv0zhcdiTorIkm070JexyOqgWC4ZnzsFj23X7eg2so/hGrsutuB4IgehtrLEwif8/ylBExRaAqRwy6+p5+X+q1XVaGfCJJ2ZwmKddSMRNUufRFnLI4DDD5KBPPiQYX1gSRFgfDVazMlxTUr5qbfpcyqFM6tRHmrGLHhbU/oZ5oXRWMslAmtZtKSxAVRidVw0foYBhC55Hq7utHsvwCuHYJS6PLHv/uIanadyUZQ/oWDBUkEPbaquHa6ixG4QJ6xcAWlHLtogGjdnH2jMFtM9jgJuiiilD1X6Ff8B2awQhk77x8ZZ5uHbuxJUPVn+AHi659Pbhm9RZqHS0dec0qnA4DkJrXA1ho8bpQB5A3zioVisfCafVdCfcR8yAsfrRSaqEqutHB+0PqV3ZfyrR33zBLEU30cLWl+GqCNJa6yiz:O/mzhZqNnJM6nWujxbu+fMIymQ6jwaNseTPo42jnDzLxTg98fDgGenfZ/yolVSe/2AmtAcHQ8vmZES6BcFPicrces7P2oHdqVeFBQzWoBSm7h79J7AcUb6f3dFaq+M/iyUtBOLewjL8+xklFcjYgN9T7R6UhubawA7g6j6g6b248RVRQ7zi87YMbkHg5Ypij98MlNzt6k7TqCYM4Rwy+4hvRl+KcI6kXXavQ35kCDH+mX2S2G+tXq-K1VuPWzWkepsR7PdTeVBxwX9p7O8JarjfkyZwL6CxfNGtIzAuo4W8eS/CSaJlXD/ytQEHPFvcQWKsOemXh3fSb9tl7FZYjv0NBHWz4SN1jk9zMmgx0Adao1D/NwxRFq5cjln65gXT2gYF8eht5g371hvjJoThMKv93fFiB89IAwyjsdVTEHtvzroPNNgWgPxAWLANiHh4szkLj52h852Yga538IFIJ6S2a8vjfUCAg23kO2Kv9sso+e42oKsqZRQ1GgjZwd0ryzTViqZVWJmOkrkVozAN164fl/+PzlB1qkqnC/7P4kKOQPOg==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
