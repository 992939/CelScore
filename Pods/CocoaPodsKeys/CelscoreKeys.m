//
// Generated by CocoaPods-Keys
// on 13/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1599], CelscoreKeysData[2169], CelscoreKeysData[2983], CelscoreKeysData[2193], CelscoreKeysData[2790], CelscoreKeysData[95], CelscoreKeysData[3007], CelscoreKeysData[267], CelscoreKeysData[728], CelscoreKeysData[1488], CelscoreKeysData[2510], CelscoreKeysData[1579], CelscoreKeysData[1176], CelscoreKeysData[2606], CelscoreKeysData[3071], CelscoreKeysData[181], CelscoreKeysData[2224], CelscoreKeysData[892], CelscoreKeysData[2966], CelscoreKeysData[332], CelscoreKeysData[1732], CelscoreKeysData[1539], CelscoreKeysData[2388], CelscoreKeysData[462], CelscoreKeysData[1208], CelscoreKeysData[1233], CelscoreKeysData[1383], CelscoreKeysData[2394], CelscoreKeysData[487], CelscoreKeysData[2495], CelscoreKeysData[773], CelscoreKeysData[1543], CelscoreKeysData[1382], CelscoreKeysData[2035], CelscoreKeysData[750], CelscoreKeysData[2403], CelscoreKeysData[2473], CelscoreKeysData[2186], CelscoreKeysData[1040], CelscoreKeysData[1827], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1938], CelscoreKeysData[53], CelscoreKeysData[2588], CelscoreKeysData[190], CelscoreKeysData[2595], CelscoreKeysData[1992], CelscoreKeysData[2610], CelscoreKeysData[68], CelscoreKeysData[123], CelscoreKeysData[2039], CelscoreKeysData[2384], CelscoreKeysData[848], CelscoreKeysData[1353], CelscoreKeysData[2534], CelscoreKeysData[2350], CelscoreKeysData[2188], CelscoreKeysData[187], CelscoreKeysData[994], CelscoreKeysData[2479], CelscoreKeysData[1017], CelscoreKeysData[2497], CelscoreKeysData[1108], CelscoreKeysData[843], CelscoreKeysData[2174], CelscoreKeysData[59], CelscoreKeysData[1961], CelscoreKeysData[2961], CelscoreKeysData[1908], CelscoreKeysData[444], CelscoreKeysData[1898], CelscoreKeysData[456], CelscoreKeysData[2130], CelscoreKeysData[2543], CelscoreKeysData[2719], CelscoreKeysData[1222], CelscoreKeysData[2412], CelscoreKeysData[1321], CelscoreKeysData[2526], CelscoreKeysData[874], CelscoreKeysData[622], CelscoreKeysData[2892], CelscoreKeysData[2286], CelscoreKeysData[2163], CelscoreKeysData[1465], CelscoreKeysData[471], CelscoreKeysData[3029], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "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:xwoYRl8nB0PCyJECV5e9hPzjxizgwktTCQYFyOgAUp404xpoFnde3CznNnd3HBTwv/J3SRqwWlRZSVnupVfIcA8MJU8svyyh1arpg1cqpGfRJcV6Q4C+FjQiR4J2TyaveXSHOl-X2bSKtQRKZG5fevK4MEmN2RIqNleRmsGgdf4hjtETcVpnPuGafwU8fnQHK+BWyuHy48aRlithdSlDhPRPnTlXju1KpD5aBb94W8ofD4Rz7+iDccaZZnbnd9mhuZUd7CdpZlCHyiEzMIA/HfIhBwr4Lf/N1rxAk+Jm6egPpO01WASn+SdOJLVGzv/uaAvHnUaOkDh8FZT51JPHI0qxdSnC99xsHMJlBBZPmRdjUOFWSoDu1EfF5oST1dowDUTSiVdnbC50nMzVO0h4YXJJKc0fwhH+pbPUwsoOmBK3pSeL/KHRZAv-oD51ok7XLFD+tWcYH1/4fmoyz8cu/C2DBaFV15scaQ5WCXbYza4oi2dK1y6Cc1Lf6srWaWvAWLnhz3sVyeXIGqNzI0/iCf0zXuXUEi2T9k7M-eVwNoUaZFEcigOVA+9DyetzdsuW2745zeovNvH2T77KxeYYUTzt1or9SOLRvBzxMJcvOrhTHxx4RNPXnCC8aCc+wXpPMWLFEWT0GDUIVLJayqzKfJ3aiEAxEQ6cQPHBWvi-m5tZmgSAMxSrZFC+v9GzCnUIWJNuxgsltUJ1E+OPbSSz9xmRsAKzGpGQOAzD7lj3FJ6vbL7I283dHdpGBb6Ap4a00GV+jwuJfda2Z0MLWSHhAZULEO/YtHohouWpiI8PelQ7JO+SaEcnRP18KjuHA82gGtYH2EnMP+eX6eldJcbV86PHTgrEWCoUJ1ZDPRFLiuQJKK8Al/ZtS58YKoToy6bKBsbKMiIVfgGdNUdRheDZHsY3Z5yZBx9ix/xJC129cAQXmn1wQHUI4XeltckdsC/q0lLyN9o0cZcZGxhHGWcQQcyWYQKdjcl14NxA+h4acdulKHRAd4Dhe32e4kWqCuZZ8dCs+4ZrQvoGBDCEu8pDiHaMiFyLweYp\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
