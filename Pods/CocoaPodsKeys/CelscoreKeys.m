//
// Generated by CocoaPods-Keys
// on 08/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2057], CelscoreKeysData[1695], CelscoreKeysData[2186], CelscoreKeysData[1172], CelscoreKeysData[23], CelscoreKeysData[2171], CelscoreKeysData[748], CelscoreKeysData[2617], CelscoreKeysData[1391], CelscoreKeysData[52], CelscoreKeysData[227], CelscoreKeysData[1906], CelscoreKeysData[1423], CelscoreKeysData[1879], CelscoreKeysData[657], CelscoreKeysData[969], CelscoreKeysData[658], CelscoreKeysData[1362], CelscoreKeysData[2280], CelscoreKeysData[2634], CelscoreKeysData[918], CelscoreKeysData[1413], CelscoreKeysData[1779], CelscoreKeysData[1643], CelscoreKeysData[871], CelscoreKeysData[2202], CelscoreKeysData[228], CelscoreKeysData[605], CelscoreKeysData[324], CelscoreKeysData[1611], CelscoreKeysData[2254], CelscoreKeysData[2521], CelscoreKeysData[2575], CelscoreKeysData[1298], CelscoreKeysData[1580], CelscoreKeysData[2570], CelscoreKeysData[945], CelscoreKeysData[18], CelscoreKeysData[621], CelscoreKeysData[2513], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1964], CelscoreKeysData[2540], CelscoreKeysData[2395], CelscoreKeysData[1713], CelscoreKeysData[1013], CelscoreKeysData[1460], CelscoreKeysData[2130], CelscoreKeysData[2356], CelscoreKeysData[1405], CelscoreKeysData[1421], CelscoreKeysData[186], CelscoreKeysData[2636], CelscoreKeysData[1438], CelscoreKeysData[1253], CelscoreKeysData[1977], CelscoreKeysData[202], CelscoreKeysData[515], CelscoreKeysData[1756], CelscoreKeysData[1093], CelscoreKeysData[2113], CelscoreKeysData[1860], CelscoreKeysData[147], CelscoreKeysData[1084], CelscoreKeysData[2222], CelscoreKeysData[1863], CelscoreKeysData[1219], CelscoreKeysData[201], CelscoreKeysData[1263], CelscoreKeysData[168], CelscoreKeysData[464], CelscoreKeysData[2026], CelscoreKeysData[719], CelscoreKeysData[2068], CelscoreKeysData[1490], CelscoreKeysData[1533], CelscoreKeysData[1010], CelscoreKeysData[21], CelscoreKeysData[2527], CelscoreKeysData[721], CelscoreKeysData[2314], CelscoreKeysData[2316], CelscoreKeysData[2212], CelscoreKeysData[922], CelscoreKeysData[2394], CelscoreKeysData[1558], CelscoreKeysData[199], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2754] = "6Rc/iEv6MdASG5JHfB5IdcN7Qi8KTTVwGGfwvLnCdL8yyowb8Iu+sKeUHFdvGO6aSXZFxRdoaSEvRktndxodJhB9WsAWus/PbU6PN+F1PjQLIqveV8YU/UeBNMimNbqlO8oiY07BrwJXU8/eCxJ9Oe4Yo7wKleNSDv5uGf5y-H9ZDc5h+MNBOFhdBwdlVz2prWgXCLZcE5e3mp/em25lMGr97LkWutoVYTW2ArYA2HwGYkwX6Av4m+wPVhn7PhY6VcLQE+Mqlfy1exIwQ1PMzchU9IL8zJWv47AQDXyxVVw+upZiX+Oo77ey1MxxYhQiEgDuMRwvOC/7MR1V7mWk7yjxNAVaAspBhP+FMN+CJGXTsKN7O1fOJjtWE7bCnJQNokHL8Stx7AtRg3q+5W+fbZ1mxKU2R1e5JYjweTscrrtdawuGOcWyjSacqwHqZ5vPOrO0oa7RmF+b0gCM9miTFbfj1zbml841X+M9Ca0MxC34N+udMKPRNa+Uo+qf2IJp5DQeLH6ZO+0J0jqH9d5MpBZhvndDDgH0otyTBiuXUw0fDrDXTXfot9I/+N5Pc0ETazC6YVx3AKeLIBqJcoVFGXp348AjAJ2jO/c3C5tH16wR+uuw2LoC2LKvPRGpe7qeQOgOn+khbmaMRufGrrffDZpNcwT5nA+68BsWcNFjUgz6n//casLR+iLMHk88Gb1RuIBQfcSRc4vZJs08616NpiAmiExdWvv4EkCH379fKGON0fhto9NXgvqD13zAnFspcEO/4Mt7tEcVrXvg9euNumJEp6R4aHTzMsvW+Acm5Z2KlFRX23uNcgAF+9dOR1Zm/ZM9GgvRrMaN5yKB+PVGf7rhOZpxpdrfvyHKSSuOStHdIAocB0HUXultWKKN3yKVeh3+nyNRrEAUPU2a9o+SVhale82a/dmmiMMcm3Mm/7bVMY3x0KbTx9R9RsdAUKXyitKcxCqhXYAP11p9etgw8q1AqdM5fZ2cZFJZ1NErUKXV52+CEI1cNaln9IMv+RT9ys3lW6S3V9S3DTsZ6f9MnmyO7wOaIrIonGzSJJ7mqODbeBTdH+9XwsGQZYOmbhxlOk/Wp-5GCmHxfQU4Rc+BIcby5IxKcFm0Z01oUVfEPm6JXXyGRGnvSW2/Qng3eyu+PZgugEqmaeY2KCfuKezOEnHs8NhAWpBJOYu7sdhMPq2iDaBwXzCVBwVuTmB0A2bCxMO4BXjC9dKzVcY+HQAcvJRyDci8sbbl1JgeTd7q6KdXcJe9xyJXnq4+Yg1eaPAMuEdSgPJe38OmNKPbJrT+SoMpJXb3tEFyxkE1X7ray3oHJwmz8GUWCEK8JjJ6vPoxsrduSinfyVp7YIzjY+lKTkyba7paECMtTWKwnw7mDBlSMBxb9BMtjzMjC900+1CBq/wBY8XaLt9Kj:IAGw5OcnKJ6gLOZI84xsbf98dY16OUFv9ZyFZ1sHQknRcZrR409T9wgt4ve3OCnOOZen-mfL+DdDaRZdl4pODRTNbKtJdXQtraIdZxn0u7syH/Z9JDN1AXlxOm6odTV64Sv78jLQ6cfmR2tKrBYK6hYiYGdqLx9ohSchPpvyRqxNxVJmuJ07UuiQ56br+Yvfp6x+UGzLFF49ODcvJ8E4Fa2F7N2sv8C2ob+Y1HIhvDNiC14By0qDRpomvOt+6X3Sm4dNsvX2IFE2pE0GXXGobi2dAM+WF6pl1yPexaeQdn9sYI91cuu36Qm2JO2SBdCBHCiOwo0+5nse7XbEbyVmWy28wzENcsNn0368B97KeXjuuofgC06vuNEUdCCYCd9aqZw3JjTeiJnNfsoo9OsK3THSa67j9yDOytNbX4TL03ZAdnWQ/Dwh+d1KE4VnLm0feFPg2iRx69MAOYIqtiHXXk+wg9M/h5k2XE7Bib9GrK2iEQOmI5pIVtuh7ubKQc4Cl/k/uJJr1f5yP1bGDLopHpln+Om8p0uaZxaf4qlR2OHdVHr6cqov8lJXnMivzN43qSgKBga74g14AZhY7+GgoB5UinIVaE8W+MAQX/qvX6wRUvrBqt65ntpS/N702ooyILskNgf9AG5sfc+97qQ9Q3SnRies9A/AFBi3vsgs9OtMD6+3Syq75IosPG5jn38xDuEct7qGpoiMKUMQrdUxmfTciHrv3fBBnaX9f7COPuXv36nFk6uRo2C0QOhdwbghjzaoo5fO4pVKe8g9s1uivpalgHwJslIW-Ai+lrXWL9Tgr8cAZVcBZrAfuvWFhZBcnHE0zd/uuq8PgfxqU3jyD0FYDV9mFFUUPKoIBiocblsx4Fk2BcaJonWihbad0A8qyunDCFKDkBdAl9I6CjOT+jXml+YitOQe9jBqSi-yVf6aRE74etvy+lnsG5uGvjn9qsslNiqDUhn21-tbW55mn4D6zBConKmk0tEkrsrOgYQD0ew83c4fYVWhDxVu1810MFsbkYJDW+SyDBqHNr4gSf9MexGiOxbjbPKn54XZzptFPwHffzCy9/QSo6kWeeXSzTqPDLvdkF2d7j4jzbvyKlV629uVZysj2+S4fasSre2QqrVavrh+C8FEiX0WjOtlf283TOlPGOplqMeGg4Wpfsu3/Ip9CUkMQ9+pFCPMpNGYKU8I8k59XtUPkgcOy90DbC6RXVmesedhropXyQrlKIueHYajTvOVLMyC1SC8RK37TXr6dBhEv5txwD27E6Kdl/Z6r+l4HXMYywYi4l2wEAI0uu/bbG0Ka20NUeQWLFxbH5khrD\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
