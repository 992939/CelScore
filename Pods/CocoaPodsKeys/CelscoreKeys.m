//
// Generated by CocoaPods-Keys
// on 20/03/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1229], CelscoreKeysData[1921], CelscoreKeysData[3118], CelscoreKeysData[2142], CelscoreKeysData[1755], CelscoreKeysData[1567], CelscoreKeysData[2849], CelscoreKeysData[88], CelscoreKeysData[2548], CelscoreKeysData[3062], CelscoreKeysData[2825], CelscoreKeysData[2273], CelscoreKeysData[2818], CelscoreKeysData[1360], CelscoreKeysData[1862], CelscoreKeysData[2071], CelscoreKeysData[2010], CelscoreKeysData[2834], CelscoreKeysData[452], CelscoreKeysData[254], CelscoreKeysData[952], CelscoreKeysData[631], CelscoreKeysData[884], CelscoreKeysData[113], CelscoreKeysData[1615], CelscoreKeysData[1319], CelscoreKeysData[591], CelscoreKeysData[2076], CelscoreKeysData[1222], CelscoreKeysData[597], CelscoreKeysData[302], CelscoreKeysData[1652], CelscoreKeysData[2199], CelscoreKeysData[1297], CelscoreKeysData[921], CelscoreKeysData[3107], CelscoreKeysData[2075], CelscoreKeysData[724], CelscoreKeysData[2077], CelscoreKeysData[1722], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2877], CelscoreKeysData[1272], CelscoreKeysData[607], CelscoreKeysData[259], CelscoreKeysData[2670], CelscoreKeysData[870], CelscoreKeysData[2722], CelscoreKeysData[3179], CelscoreKeysData[561], CelscoreKeysData[1013], CelscoreKeysData[234], CelscoreKeysData[2699], CelscoreKeysData[2156], CelscoreKeysData[1266], CelscoreKeysData[2846], CelscoreKeysData[1533], CelscoreKeysData[1450], CelscoreKeysData[169], CelscoreKeysData[2445], CelscoreKeysData[3155], CelscoreKeysData[1507], CelscoreKeysData[2900], CelscoreKeysData[49], CelscoreKeysData[695], CelscoreKeysData[3114], CelscoreKeysData[2382], CelscoreKeysData[2127], CelscoreKeysData[2554], CelscoreKeysData[2046], CelscoreKeysData[1810], CelscoreKeysData[2897], CelscoreKeysData[2822], CelscoreKeysData[2782], CelscoreKeysData[1404], CelscoreKeysData[1129], CelscoreKeysData[2287], CelscoreKeysData[2165], CelscoreKeysData[1081], CelscoreKeysData[2330], CelscoreKeysData[2688], CelscoreKeysData[542], CelscoreKeysData[2207], CelscoreKeysData[1015], CelscoreKeysData[1306], CelscoreKeysData[1905], CelscoreKeysData[1386], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3214] = "pvTaSA09MI2arLDAITGM6FnTjYHzfNI380r2FXPgxfv2h5FMwb6BKJ8NB2iSsXhwL0w2sSh9twIJk6c2FyaXE+zMYv1i5KqXwPAWWExOJKp3c2aPn8uYLtrHW/YS39chYLU8spYPuQP2rSN5UFjVytyNfKP4+62d85Z/4NkSjbipwCUh0mbr8NnOfsEf3eMy9uXSfd20N5On2Le5g2tlUHhzs11S8fx25PuPBHgAU4dCCpCIeE3iQ3TC1qrWsQyx4EKeR/XzifLvYS5bMRjPPq45MiBj4LTA5OXReKBeoZ/vL8nKe+EjmRJeC3eFn/2kXubTNoe2wLTm4KPg3D5Z2PoeEeIF1CZ7ru9qrA+TshvtYVJfofOC9QARImGHwDUhhGJedwySXbGH+TDVZErbLoCCnqPZtwkcGL4XGYS5eRMm7+sVU9xTdiDr2//nmThUS9sh9mqy7lwUKyOenxVN9sLCtYnZT9vMihGqV5VXq2sJvgHRh6qy515KrmjNqJ514ZpQZPBSxfaOFtz4ORPUtV/kiFqxgX8vR7GuSMS5jeINZXd8n1Sq4Smtr7Kpl+VgVYDixaOkM02Nog/AngyW7YqFGylIZkr-Fa2wDxY3WZHtDMvOQTDvZzd8AdqtU7azP823XefQP1eUrZra8PawTidSi9wL1GTHDfwUBjXoGWVrbxnM0VV0au6-TbqzHR3HmMFdSTFNFlpzBpW9oray5W/RzqLprnXhgaqX1jC9cI3r7oXk5tgiSeoBcEre7EpPEYa5W2oY9FnvusOM/MLqDPlJ+Z7FmIi+TicbxNT8mAKMhO6cQ6msXPMx9oq7idjtgQRvf5HzERRqI2urINCA0MEcuBDvkQrgag/hOosMvi4DECUaMnar93WU+Y6RdKenS7G0qsDPjyMo5HxH1JWScbsDu9Ev/+UTLntOYUR4xiCire6N8ocTa8I9anW6Zd5drz0os+gxr8yYp5qTLC1tH3qc2iDu5PHeaqNNl1KkK/ewZMvQ8aQyy:l2oJ8Qqf3Gz4fIYVf1dlUhJ3f6SmMjlv8qomRZFAe4HD1Klh0WdyLkYTe534/7IQQLobSFHiU5Z7KHXUhXjhJMqJSIZosR7vOKMS4KPW7ORc3EWBAbK9UI0murVP/RHLCP7rY4u9KWt6NoaKnlvZ6reiN2lB1Hpzs+UI1J6JmrpsfYj5cx8J2uO/Uw8SsHLtgGvTBRE4CMg/PWY0MmWIIS50gsXFjWsNoB/VEXQQ29vE+aYv/Hu+jvq/ZYs1dNF9p3sWe0YpSR4Kc9C1O7KR2vVSrPSTXoHgUdg211oYQ1EtXfzgVeapLllktP1f0GxADMl7KdUq4oIQnm+QBVb+pgGnge9gn0u+BHTB55sKLj+6lgBOt+rGceow1NjVsNHBHoFjbQ-uVbhLtxP8rFMqNTxmu5anycQtskFzPpMVpS/UB0xxhPYTe4nr08G+sjNqPvZcfd7jviJVvvQI1gJywyYKKdnQiMyOP7HxYM8jUslLD1CgipKRG/kNmdwQbMkU/dXgaFze5Pp1bqlmTWS21MBFXJiyQrlEqokUpEbH56F3XZPEBfYZC3Dgkh2Ge/flHCA3Q5p3FoVmJivGty1LxKGrCO7U0y96hCUosANuKrQ2PoS98ONypeWjfe5pNLd7f18JwkYbQ1r83tZFR/SsGh7y+FoLQ4OhjwCboWsdd7WmZ9rjRq5asOQ5L/6Pz8UXtWaRPDqwBtpbRXl4NlSWvHHuhTyPugjHEG9wU7EwoZPJWX1IoWjUdKySNu4ecw3K32JReHeOXzKhEieTvtsH4d0edQrA9780u5EWs8j01wwM2hUEOaSRSlXaaOngS8jdDocZSYCpgGfLDbv2rgkwMTkti5U2PGAFmRKjhMwlb3IQ0MRQUIwuXvbhShQ6+nl5XInCDONkjQjXx89OGNKLhm66N5uD7hzCEj7nyf62Ggxpbv6GymqkopwhavNFbL1wXJmuwOVbo/WaVxWl3MMbkGz3VHC1JclF0Kc3fnTfU7FEAC5dyhRRAEGCUZ8mPToMEQszv2GZ-MrdyxeE9dckxMAQ8B5myLxyHYnbPKJuZ4O/DkkIVgZDLP650J10ToHrKqpUyb62P53wGgiqNZ7kTvk555PapLrxNMPnXb6HEyFBIw0wOFQLmh8XWsf5vuZcc9hfPU1Q7jSvI8KU+P727PqM5T7xt5WhR2Pmk54BPa5E35u4eDSUoubmSs5lcbu6hmpY5KCUSU9y4Zd0zSV132ljxsmuPxAf4C/OT9Jgrsri1qwTqXVHXG8rI1pFX8Bx/IbLegNXD1gvr82JRRohCIvJUXWWSK04vxfo104Z8gQh9lettRU3e6z4JN/dxiy3c6PdM1hFcM+DyD+VOSOitaJ+4GcOLHSKGnNFvoQrP1/NTyhOzB5ESmHX41wqm3gjaibKGLQHA18UD+zgdDhN39b-0INteLqokslzPwrdbyBZoaeYW7AMtC4jt/BFsVOL0XZLTFA0Dt4CIKN6jJZ35zhWDr2TblHqPdIDdFL2JKANu4xXWX+LjCtyDikBcTbRdO3+9dz1QnXJ4QdplkIeH30B/PdJCEKj38DaJzM5DU0C0jSD0KiP3/uRjHKE92HpfNffG/Tcu2dSvoleKkLqv9qA00SZctkbi8VlejryoEaZ15CG4KL+zJ3oaXFfcnpRP94QQ4f0fh0iOgwhiEIDy0yOu9I06UKoAiz0Tmdn4oi8tGDkBhj03A4cZIYXqjiAvQvcPRYv2Ee/k9QL0aCQhIuXPJHSy+AKXoZKg2EvfR57VYCbXKyOnOSRInZoVmmW400cI7d+PyGlAAdb8zj2YAdGsJl4lgnm8u2vMRE6d5k0/qVFESrbp3ZJi4zgT9SAjkTlZbDuk2BfsGEy31NrYGViTioax396kAOgklffD6xp0IVYcbbWUfNYz1s+USAMKWQw8K5rlaD+9WRpvPYzcGiHvJo8j2EraOD8rwlyJOg/95zXYRfSREzhnkOYABCBj5n1VsZVEWubVsz/suXg1CCzGIHxHTbRN4VUInJiLQEemQ9As24PzYyKSQrQzqXksDBJSqGO+5YC1JDny6nJmE+z0ZX+hpCE4Dij9jqE9VGyajoQTuee4KOHwZWmdxOZsfMfX9tm2nS1W1V2TnFwJhfXXaBGW7KM9gXsnQAHCMomOVW9iwFni-/LweoLpw5g3404atlA+tQmHD6bkB38s=\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
