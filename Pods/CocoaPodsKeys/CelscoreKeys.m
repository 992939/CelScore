//
// Generated by CocoaPods-Keys
// on 09/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[564], CelscoreKeysData[833], CelscoreKeysData[1678], CelscoreKeysData[2837], CelscoreKeysData[1413], CelscoreKeysData[3079], CelscoreKeysData[878], CelscoreKeysData[42], CelscoreKeysData[792], CelscoreKeysData[2002], CelscoreKeysData[614], CelscoreKeysData[2546], CelscoreKeysData[131], CelscoreKeysData[2147], CelscoreKeysData[3221], CelscoreKeysData[481], CelscoreKeysData[1574], CelscoreKeysData[369], CelscoreKeysData[366], CelscoreKeysData[3327], CelscoreKeysData[1689], CelscoreKeysData[2966], CelscoreKeysData[3006], CelscoreKeysData[1209], CelscoreKeysData[1432], CelscoreKeysData[310], CelscoreKeysData[569], CelscoreKeysData[892], CelscoreKeysData[2458], CelscoreKeysData[1636], CelscoreKeysData[698], CelscoreKeysData[2036], CelscoreKeysData[3162], CelscoreKeysData[203], CelscoreKeysData[3236], CelscoreKeysData[112], CelscoreKeysData[1384], CelscoreKeysData[3304], CelscoreKeysData[1853], CelscoreKeysData[1653], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2874], CelscoreKeysData[220], CelscoreKeysData[359], CelscoreKeysData[2953], CelscoreKeysData[1977], CelscoreKeysData[38], CelscoreKeysData[910], CelscoreKeysData[1671], CelscoreKeysData[402], CelscoreKeysData[3256], CelscoreKeysData[671], CelscoreKeysData[2101], CelscoreKeysData[1263], CelscoreKeysData[1649], CelscoreKeysData[2262], CelscoreKeysData[594], CelscoreKeysData[167], CelscoreKeysData[419], CelscoreKeysData[1932], CelscoreKeysData[2925], CelscoreKeysData[1714], CelscoreKeysData[9], CelscoreKeysData[3322], CelscoreKeysData[4], CelscoreKeysData[1145], CelscoreKeysData[427], CelscoreKeysData[3257], CelscoreKeysData[724], CelscoreKeysData[2685], CelscoreKeysData[2690], CelscoreKeysData[3161], CelscoreKeysData[2311], CelscoreKeysData[2792], CelscoreKeysData[2033], CelscoreKeysData[2537], CelscoreKeysData[1362], CelscoreKeysData[2468], CelscoreKeysData[1479], CelscoreKeysData[854], CelscoreKeysData[20], CelscoreKeysData[1676], CelscoreKeysData[881], CelscoreKeysData[897], CelscoreKeysData[2883], CelscoreKeysData[1573], CelscoreKeysData[1217], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "Cgec-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:5E6DbPVgaSiDOqzQBCK9SotcKLpuIDpOWOlUDMLCD+C6uoM5d67Q8wYoiPTxS0aanbsGg=y\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
