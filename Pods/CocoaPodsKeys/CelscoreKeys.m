//
// Generated by CocoaPods-Keys
// on 01/04/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2385], CelscoreKeysData[928], CelscoreKeysData[1182], CelscoreKeysData[930], CelscoreKeysData[567], CelscoreKeysData[1018], CelscoreKeysData[1261], CelscoreKeysData[1778], CelscoreKeysData[126], CelscoreKeysData[415], CelscoreKeysData[380], CelscoreKeysData[780], CelscoreKeysData[448], CelscoreKeysData[1711], CelscoreKeysData[670], CelscoreKeysData[747], CelscoreKeysData[531], CelscoreKeysData[1119], CelscoreKeysData[542], CelscoreKeysData[428], CelscoreKeysData[149], CelscoreKeysData[2021], CelscoreKeysData[1636], CelscoreKeysData[2238], CelscoreKeysData[1141], CelscoreKeysData[1530], CelscoreKeysData[2152], CelscoreKeysData[1708], CelscoreKeysData[696], CelscoreKeysData[728], CelscoreKeysData[945], CelscoreKeysData[1266], CelscoreKeysData[1430], CelscoreKeysData[320], CelscoreKeysData[877], CelscoreKeysData[1213], CelscoreKeysData[1010], CelscoreKeysData[390], CelscoreKeysData[466], CelscoreKeysData[1374], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[843], CelscoreKeysData[1855], CelscoreKeysData[815], CelscoreKeysData[2016], CelscoreKeysData[1560], CelscoreKeysData[1253], CelscoreKeysData[1428], CelscoreKeysData[1843], CelscoreKeysData[1133], CelscoreKeysData[2318], CelscoreKeysData[511], CelscoreKeysData[1109], CelscoreKeysData[1907], CelscoreKeysData[1601], CelscoreKeysData[1035], CelscoreKeysData[869], CelscoreKeysData[924], CelscoreKeysData[618], CelscoreKeysData[413], CelscoreKeysData[1100], CelscoreKeysData[1005], CelscoreKeysData[1390], CelscoreKeysData[122], CelscoreKeysData[1803], CelscoreKeysData[2213], CelscoreKeysData[838], CelscoreKeysData[1723], CelscoreKeysData[2202], CelscoreKeysData[1827], CelscoreKeysData[445], CelscoreKeysData[1451], CelscoreKeysData[716], CelscoreKeysData[2307], CelscoreKeysData[1925], CelscoreKeysData[1932], CelscoreKeysData[64], CelscoreKeysData[1481], CelscoreKeysData[1391], CelscoreKeysData[1532], CelscoreKeysData[1034], CelscoreKeysData[2228], CelscoreKeysData[459], CelscoreKeysData[1891], CelscoreKeysData[2154], CelscoreKeysData[1131], CelscoreKeysData[1960], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2410] = "neT85jmtb2nrPJD6tn8F6Y4xPzDbGghrKDqQdCQdL50ccPcB7NH35DJupbPd7ZpU1btJUBe+FW0eFhVP1qIJ/5OerJC0Qfpgser/RRPzSYcw8aLfq9CVtejH1SbbBFbklBWWG6Wxhd48IfkGAgEv+aICd07BHgr8dwQHnNqwYfteKs6uzCCG9qwmaS4pyBD2V87vg/R7RZU294xjJA+jC04RXHB/wyQPuP73xL4Q2BcULmr3HQ/nN6pay8CLZFIECQ4q8B0+6o22tvhXrmcjder+9Vwr6ms2RiqWNcnNlrxGevSzgQtLVfkXMNpzC96TTIaN1+RtYfCqww7UhbKVDJbID/eZ1DB14y4TOFnqdjBCtyMEDvsAhm89TY9K25X57DG8545YKRGyL4HhXvOnUQwzBB2gj-bsK8t4bb/gBQN9ykeJkeXZZdfRJb7c69tnAffXG6NkUHFaDRXy2quG3Dv6yCT/ImHBX4hpmQqcOjrjf0hgF+dvyHxppx2MeDZdl8OfeWT/OgX87zz25GYfJMiKNbO5f89xH7QQY14fl9r+wAp6GVtemSf7pJqh4iYJ8c51GkM8KQmiqAbgSzGMLQ5lq6SrR9cmu7O/IJY91kbdUTAdmWcrbb/iJu6aazfxJZiJv8b+aso99AJpw7KAfy7uUbeIh9rHyRN3lOUgvK5EHdSs3TbnOiO2Mu9PJ6qQS7fr7nr2Q2OT8KVXbZfS4p3pYPqvbsJKi7rRTxFW4ARYrxqUXpmdMpmtc4muvzkio1BLzDLvFHmzinf47WrKHCb8IcZxxxHZWZtZ5OydFP9BpxT-Bki/+wBhfZNJ/DCUljlvCl4zeSwuYfb0/nfm1Qkagj9re5WYyKGgSeNikYar89ff+sJQYWUX6smAvqZJ7Kkebqr+l8an0skh0AeB6KvX2zqIeT8OXpE9o7H54FGI8jWPHnF6bjFawrNqP608r/PplYnVCE7Ngil9qkN+vu/oj2Fm+sLqC9LaK0q+MoN321vxCEKR93020I6St9uPBsUd5v4lyl0d3f6hHioFd/h16BdKPd7hqazF5w+bnrQcVUo/NiZBU4Emg4izjfsf/MhSn5YmqyqM7MxnWTscd0RiiQKiQX2laYYKQ/0FHIk6w1BFXhw7wOl9GStdbMvbsVc79WNZnWpt59Cr7dcpPUN81DxU9Swd+VGx2GFc251XedHeEzTWLE0Sw9i6ujxVwgB1SnHt14REUsuJcIp59MWZ2miZYPXxPVxCssbJXAm7Z0qccZdQMdlla3SJQZzOtFZ9ebRxQbhKRYqfTicni1zwlGa8WCkiVcgqg50eHxTZ3gKMbzZl1jKROVxGhCe2n/XD4s046tbMfBIv1+l03NI2dPfaPEPVk+GFzARw1+QG9o9bhyOwP9my4riTBm4TgzWgZjG1jnEhqvqjPFbwtZ2TYcrJiXoM3ic+C3cJaFaagx/TCp59n2+QOnUbtF7tsao68uzSqcYGnb97Ne9HQUmSmBBsCWJ2xQw/YW+JvFmbRRd3CZvAgUu8k4ev1f9C2Q80Oy4tfixDJWSxL4mKYoY1a59Y4PNlQcfDMu1oosyfELErQcqYt3KLiJ6Eb2fOjdROx5wL2oSPEWSRzWabt2Rc9e9E07AFSuc19mpDvB+dCOH0A6eupJzqVot+T7Xtk9EzQZkrwmJKjD2I6C5mnWshCmTFPMWvdEcT5R6P98HkJ4K9RLDmPyS02ZZ5Y7D4Ss/Dhon/FRV/XujqBEUlFjaIpXaHzK/do+oqDkejxA+nieY6TiY6HDBVCf8OEZaElpykzrpZBnP-lht/PHXs8Cdgy65myyYwgRQ-rYR3nc4kchhZrnS-HIHkBE+fG1fsIKDssv7AGPFFzu6no6rDkjREubMxCjZQJKt2vFkTjbfjKJxEZzk8LKEDPV0SCH2Utwy5H-v0lu4X97tjeNO8BOG4vIJIbRrqrMWnw7tnck8W4yPVufzJiVT7iRJ0Fa0P60Ht+cYWAetCofr7c/Fz3KayZTO8dt9TeRp2B8OQKkVa9h/kDpVseJOZ6ABsH1ORHtnDKkUZAy43yyON85GudrQc3at4IDhS2fmvOsECB9KYfs+QhhhiNMUWPMNuV/tvFRIusD7CfGkw+/2U7kcvYS70oTvmSH9phxOVTPUYAi1VebtwWTPveKl30IXvoK56fOSl0/3SCcvVtCnw0JmBrq55UC9YAbCiN5SAj4pf8RrTvNuQgUhK8cQ8fvz5a684OBKlfAVhyzRiMcZ4lthyHeLtsXPx+TGr7A1DWsmzW/fG7q41CyIH53lVND5KdONlSV7fshCBuERH4K:f46Jqg/MiIppAj0gnbrzAJCK/VJPq+NYBGUlSZY9A17sE8khmnwHJq0f6hQh0Zew8L0KjXPKJSKAS7aWEjuSnmjRq\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
