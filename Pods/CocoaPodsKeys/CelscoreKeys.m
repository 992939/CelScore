//
// Generated by CocoaPods-Keys
// on 29/09/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2536], CelscoreKeysData[689], CelscoreKeysData[2195], CelscoreKeysData[239], CelscoreKeysData[294], CelscoreKeysData[1657], CelscoreKeysData[1214], CelscoreKeysData[1766], CelscoreKeysData[1090], CelscoreKeysData[1779], CelscoreKeysData[2396], CelscoreKeysData[1073], CelscoreKeysData[2618], CelscoreKeysData[2310], CelscoreKeysData[851], CelscoreKeysData[1108], CelscoreKeysData[545], CelscoreKeysData[668], CelscoreKeysData[1312], CelscoreKeysData[657], CelscoreKeysData[405], CelscoreKeysData[2432], CelscoreKeysData[456], CelscoreKeysData[1632], CelscoreKeysData[2500], CelscoreKeysData[2672], CelscoreKeysData[2696], CelscoreKeysData[980], CelscoreKeysData[660], CelscoreKeysData[2434], CelscoreKeysData[530], CelscoreKeysData[1496], CelscoreKeysData[1881], CelscoreKeysData[271], CelscoreKeysData[1770], CelscoreKeysData[326], CelscoreKeysData[2423], CelscoreKeysData[692], CelscoreKeysData[2133], CelscoreKeysData[803], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[770], CelscoreKeysData[329], CelscoreKeysData[339], CelscoreKeysData[1072], CelscoreKeysData[2698], CelscoreKeysData[258], CelscoreKeysData[72], CelscoreKeysData[1152], CelscoreKeysData[1964], CelscoreKeysData[1313], CelscoreKeysData[532], CelscoreKeysData[2196], CelscoreKeysData[899], CelscoreKeysData[27], CelscoreKeysData[2863], CelscoreKeysData[1174], CelscoreKeysData[2464], CelscoreKeysData[125], CelscoreKeysData[1225], CelscoreKeysData[2563], CelscoreKeysData[1466], CelscoreKeysData[2702], CelscoreKeysData[2839], CelscoreKeysData[2655], CelscoreKeysData[259], CelscoreKeysData[698], CelscoreKeysData[1088], CelscoreKeysData[2806], CelscoreKeysData[262], CelscoreKeysData[1218], CelscoreKeysData[1044], CelscoreKeysData[498], CelscoreKeysData[1126], CelscoreKeysData[2285], CelscoreKeysData[1522], CelscoreKeysData[1039], CelscoreKeysData[1043], CelscoreKeysData[273], CelscoreKeysData[1680], CelscoreKeysData[1209], CelscoreKeysData[2851], CelscoreKeysData[1186], CelscoreKeysData[918], CelscoreKeysData[480], CelscoreKeysData[1160], CelscoreKeysData[617], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2870] = "jKND/7+tvOplbu6++UzMWi3amnmddTKFK0Fg2G17a5efoR66MdSzegRG5Qr5ZcVT2FMDu1pKtVB1kmOC0B+7bnbbJc35Be5Yb7fRt9lAfM2PeQPGFenJhrqw044dzbN6pTZnwqX5Vq6n06o6uZEpx9X+EHTUp0U2ahRf1YPdNngvRNFNxRSnAsZIvhfhqTe6Bd57vzvonIBK1Qvn2+1QJi910EHF7M8/Q5OqV2c+UGUQ2CMELGbR4VrNcs4plKBiNts45I-GVj5KVDFTubPv+vfsd7GPoNwGMcG/gQ7VF+AuG45iviQMOK+rk1Wsu8LwVJWBtfjTZsFSDySGLfA-NKqB1KLgaQFGwyIwKPHH88Prl5bYc+B6IpJ+xWW/YZ4fBG3HmUZ58di4WLljwtQCYaxtQ/tw9Fwq03d2TTPpq+zwx6W+wvL+a2cQs0Cj4GQqeVD95BaT9ZGPifhzMhlANU5lMIqTqP4F1XCLGGeeZuCdM8IuiW8YXOnMf0aCA/6JZmVhnAct3fF53SC1iCnidvwtgt0EfKJhDfMzHh8DsHmM93Td4gzl+Oj6Vov4cPq2iN+SxRvGiutBZCBG6K7/FgLVRd3kt5ClHpykQDVd4cXnDJsJzYiQumrGx7hj/yY5zEExhumdnBfY61xzDyJhMazKXQqKl5M7NfPPH11r0QJWx4J4dXpK5pmZ6b4u/bmoNRCQm+bpumvnt5ylKaiOI1RexvDVqhQv69nhfK1ruoK88c6gZ1cKe2Tc6yzutXUn/YuMvfnK4+13sUCcH0iOigtHHnybel1ezh9P/foKMUishsNh7DLSclMAjNSqbyQhsjX4Ps7aDMVTEzziBJfrMoaLMfnUrNgxYZ8qgvtTKPZvGuNKwCUB/RCo0IKsYXCbG0C8QrrG9DSapIMoztc/d12SveLxncy+mebjNJ+q903QBu2N9MsvfMTe7Oy9FT+NvlhtDSdY0UuYLqv2uxcgJ1lXQp6tpagvRh/GRwsFscz+EfsjEVqoRy2jkYDsrenLt45jQIfBtyp1Flf15QDcaiiUQVvJQnbnGHKMSWs7wMe6oqDaei4UaZVc9dbbMWxa5xbYUTcZlvF814A9gGEbYEMLuWMsK6uy363FNyf80xaAgSVLfylTpIl/6j9gqTmk-48l35rl6BiTsLdPtVpgb9eeDh5GGjcLqDaKN/0gFONWdnq/eHa7OB9eC0oirG0YfK9g7Jux+-+8G22V0loEsgprTul9FxU5qhXH8A0c4kT5D37o7SR21NMs45F22pl4N0kyvR1jndtjbtIguPH6yAewiE7Q8Hit9:ks/fjeYXJduPqZN/iBjRYgnJDPW7CU5MRMnBaoOZ3nAznhiVEWGUVtCMsjuIjvaIJ9Ar99gYsLM31JhHoZ4WL5dO/93NkHVf3h9z5faOVGgbEDjm5dx+vZhiKGruh6XbYPQpvqtiVWUaYja93fABLlIp1aqbChvNY+HNvHZa5+DyVfQcHBZrzAdyVv8hPOqvTWcx+t0bMXLPELT79V2rGKA1iqv+Qsokchvj1HjPCUOdFm9nlI7KOnMqorFGDEw1qEAteRqijMH+fXbawjJN3FkfgNlgRRx+/AD+pVyb4xRyTr2LuoMbABCjFrST0P8CkwhpaUCfVK0o7+prSrS6XZ06U7xj6IhgnIRvfehpMteRgX18WyLGo6adYiUfrf+GThqUa3D2qm2Q9Hv7MFVxF3/fzP3Ockmha0KTiPCM7o110fxlZm6CPJ53vVh0y4E2IktEY7st9jX1HO9bkslG4LclY3+RdGxcqmwEsdfnvOZGxVIiJ250/+qdQmE/zW/+C++BOrEajyeGcj+b4NArw8/Xx+q0W84jr/bY8ME8X957OVl1c87AUTb2T14KnAqps7RIZEA7UMh+hADW6l43nU7HDriA5pLINI1WT/wi4U9QROUlVOl23qncGUEQ3oFOYvqEbtwRzd1904Sdg3SJt13/8Y/S/d37s7885ZbmHQGsquyggcNPlGC5l385vRqdgq3KEC62wqcUI6LyfoIqEbrNf6nCHhq37F8GzPeIWc1pZruZ0G5yVo0Amsi+FECGxw7KckF+eFY63UCj68TG2dBeeXkNJhDG3YXXKiL+qPpPqLuPoe6upk2SQll7gperQttsstk235sHRfWzKL3SGdU7/vWUdcpDzwQe0VnfAkq4L0dBmw0pW7fls3VnYfRLYrUV2L6gSeUrC3wyYeSaVRuLGJeHGQBjU0IoEyHJ4mu0lvP6hapwEHfDgZJ3O8KoDzaRO99/Hjx-Z+13tYzDqzIAINSv6EHB/f8z9cS6Uroc8Z7PmmlaztS5UwynyIrtDnvxMWdlr+3Nf/2Agd8d/UToR5C0FK0pOKBk51cAOaLBnChQ4t5oRXWJBT2mbIVRTAIbTXiDrXoYms6Aei/qeK2Z3l5NI/8gYfDQYDL6K88jSrIXghNpxpl028Yn8Ze1ZDm64ynINNbSkL+5RPqcXclHaLo1AUf9zCORMZyfzORyWZuBv05JSziLpKp8G4vYWbAhTf07b0CYs0x5CW9SZSurS7M12WMQ27KZ8T9bqmfAogm5DvaXWNoowR1B0iip8rgHxybYMpYzUOXxPbkeAFmVAI6fuCMLn1py2Jkt9kR9XqHMi7ng2uB7p5TEQ-SHC4J06DbCOVNGO1epPVAbcZ008IP6vv1/ju7JnsAMaxN39fF7d9rlqNsfkj5ICtFzWR9tvGktoGclWRPQariy9KVHonVYIenqsK1rYwfvYOapBSGiZA8AkJUDZhoFjWQSAMk/q/2TLUah2zy1Q+/M9hJgTuET3nKUaX3gcXEd/SWwvy0iKnZSDb4huQfV146j18qBydJT4dLS4dsG4=\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
