//
// Generated by CocoaPods-Keys
// on 01/04/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[202], CelscoreKeysData[2554], CelscoreKeysData[537], CelscoreKeysData[1912], CelscoreKeysData[2223], CelscoreKeysData[2912], CelscoreKeysData[21], CelscoreKeysData[2900], CelscoreKeysData[503], CelscoreKeysData[2044], CelscoreKeysData[1888], CelscoreKeysData[2975], CelscoreKeysData[1676], CelscoreKeysData[2052], CelscoreKeysData[697], CelscoreKeysData[2234], CelscoreKeysData[993], CelscoreKeysData[2057], CelscoreKeysData[1105], CelscoreKeysData[2800], CelscoreKeysData[638], CelscoreKeysData[3076], CelscoreKeysData[2915], CelscoreKeysData[145], CelscoreKeysData[1225], CelscoreKeysData[82], CelscoreKeysData[2741], CelscoreKeysData[266], CelscoreKeysData[2510], CelscoreKeysData[627], CelscoreKeysData[518], CelscoreKeysData[2340], CelscoreKeysData[1254], CelscoreKeysData[187], CelscoreKeysData[3022], CelscoreKeysData[2251], CelscoreKeysData[3060], CelscoreKeysData[870], CelscoreKeysData[2641], CelscoreKeysData[8], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1807], CelscoreKeysData[696], CelscoreKeysData[1080], CelscoreKeysData[2659], CelscoreKeysData[2315], CelscoreKeysData[1923], CelscoreKeysData[1011], CelscoreKeysData[1561], CelscoreKeysData[545], CelscoreKeysData[1722], CelscoreKeysData[302], CelscoreKeysData[1893], CelscoreKeysData[2958], CelscoreKeysData[56], CelscoreKeysData[2764], CelscoreKeysData[2084], CelscoreKeysData[934], CelscoreKeysData[1411], CelscoreKeysData[1068], CelscoreKeysData[2953], CelscoreKeysData[2824], CelscoreKeysData[1546], CelscoreKeysData[2813], CelscoreKeysData[521], CelscoreKeysData[1299], CelscoreKeysData[1596], CelscoreKeysData[2574], CelscoreKeysData[3053], CelscoreKeysData[1797], CelscoreKeysData[2940], CelscoreKeysData[2304], CelscoreKeysData[1056], CelscoreKeysData[719], CelscoreKeysData[398], CelscoreKeysData[2332], CelscoreKeysData[2344], CelscoreKeysData[2453], CelscoreKeysData[2191], CelscoreKeysData[587], CelscoreKeysData[2119], CelscoreKeysData[504], CelscoreKeysData[2993], CelscoreKeysData[2248], CelscoreKeysData[1247], CelscoreKeysData[346], CelscoreKeysData[1559], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "V5RvKrG2P2GIeCpjSaw1M0isf+0c/vPLR+CGZSew3+ZIuhESCMGkpAH9dl3q8BqhIp67+gARe4rLMQzGIieb8yx65USfQOJNV/gn4Rf3OqtUgj+OjUsaBOLvMuiFzIB3exYpg/GOcxhTPoaI48V4NJeQ1afP2J04jesI/u53tRvJ5fy2Uj6nrJZFDzjTKbxy3w1vhyLKQK0CDqqowKWp8JZGJugrfPQETCCnFmi1gpzJv/ZO36qx280b1Fe1NJWKeqqIU5ycSVJ1v4P6HbU4btnFbo4mbPJofyM7auTDKfO2hXd0b7KI1fWomF4pqpziszvS8Vj676gLDzRffoC+d4xZOm6BpzZNS4bj9MdKzA3sWugRAg633WqMlYVvabBuAmBMxr27pmuRkM-bwADmEhzLzAVeSE3NYOWD7fySfCRtpFkKqGloXfACTYcDSRrGcPOtd3QK9czO1/pdvYBM3hyxbm7CLhnrP2j3Db4uktGuOifdN025+zgb8+fMZvWtHUJAgZniN-SeGZTTkLbZy0ns7waCUP4Tr1ckfBAjvzvIuxMaYsppo9Iz8K3pni9hlxI/Oj3877A1ck0Ya6hxpOpayOM/Eyw8NM2SwPIxKBTPe8fWKHaYlcpkM4NayEab6a4EPFpDzxNkSegcs89MliPMeGL2X9J3Q/uwTW1qkjtCoJ3o2YOTVhxFsrIcGa7aVpRoam2Rk+VA+hVfHGI2NImFBLjH3cpQR4Cmo+otexfFmBUhL254MedpS238r3MqVVq0Q6rsQIpT9TMBKc+RWA3pIQ7O6TPbc0rcMLRwsJEWc/RrrnkR/szieJrmZ7J4BIAkyNEsSAyhVI7ducAXDZlR1r/x668eRCxOL65QcKLqjvCDwxayVqDeLioodzxXU1EgoiWpIBSo7Rxc/u62bz3UUdfx3V/l2XwKy6eE6+C+tKE3z3xiaVQPtYQLrH66D02iqbOuIWTRwottHXVP7LbYbhKGBBbgLfXtAdHlwWQ4s/Vfa99tX5uIFKobNU8DAF32MX1h7Sy1fvkq5r5CuaM9EYf7Nn7f8+69NlPlJR9g-Ab+BcwLTiNe-rTKpiULeelGDOcD78Rj/Ptec9n4DBqyimzuEoKMGCj0RIGmzcB3dUJZrlmtKIb3wuCEyaPMHE558a7LJYiSha+NoIhA/rmN6E6qnEbaSZx5K7Ht15ExR6rQT30RTVz11YcNnKkqDb6xF4elzOTpx0uBaANpJKB3EouuMru1MvS8Qd2ds1k26z1oaasWNoKEkGecmJZbsRihUT0jHZc4lQgthyh45e/1HnuqmWaA2nK/NtxoZR272THAlr3dCj6fCUxeGihziclPlbx83EQKl8kHOf/5rHCTw1hgYlXI/PJSmK0Ffsmv6M7le6Uke5SCmCMXJYPK6W3bpnPXFDwhE++zLyxkPF0kHS1/9AgRkidj5DwMkWu/ZuC5Hp9alLXCvkRqSHxgnWz4YF1ZLDbRb0za4t4JG8OjL+V+0/oxl/pqe6jX818iRdY6e1k+7RYpT9yWt9niphu92s1YxR9dehaKaZo/+PdcI-fSeBW3j+XmEiPod6muK/djlvZWjN5w3Agy4tyOXG9qAvCLGVIEcZeTMqLklFTBQb7zY/ePfjNWzpWlpgZSCvzUkvcB0qeO7j0TjcrWpGTD0ffdv7YRAWeix4sgUa5KpKhIs0+ZgUJXSciDUuumiwGqRZL66qBFoM:Kc3m7Y6xWhF31ZixVmpRSKtmCQ0NiIYu70cEWMfCf/6s36AkSlDOP6wuDE53qLjuydIDs/nXCq-NugRm+mkVul80QCANsIZSjgRv7iLiphY2kT4fhTuF0aAGLWC9PMzJiQUfCGoTVP+QOwHk48vz9FnmvisLVsI6wRTH32QmnG0wOU2dpkzS0s0taDzQpE/a5t+H04e7sKytcrilf3X7yMzM872C0cWtiC5v3DSW8yymq0jKsuIBBSWfQejajJ5zJznzsAcu104lgL7uRtz9EORoerD7JNh3HprU6cwOVUvXK5ZoIgxx9rs4rCZ80ae/ls6luVTjz92tf4lL2h/8KpXXwzfqvYb1XTB6/FJ0jePZ/lIHlyq+6kaYmNkdZD+XBVenRGQ/DlOR0LaKBzjC0mpNMvBscWEr81N5QHBDB8oN6rdnoMEohg0tAxGONhHg6igObAeyNNJbY+VFQhjEb+52zhGmezEYdWVzfbR5vqYRgk1nBcc+7fO1H7mg9QHYgEhMv8O0qLQua2lFjSoyEBDSF4RIXW2N6j5qk6hv76CM5UgNekHeZFEkDcywnq/B4Im+gaoCxnZYEWOPa87RIuba8GmJ+pOaF9NrAo4KTdCIb1ZmFGUo7Gs5qdtGoqNzL0p7Qk4xK7zGRsku6CWRNbjG3lo74nIzx0/zuG2xOf0YqF0AuPL04YkUVZBlV7rrwyL4ddHA5bcEwgRmgH0XUqTaYSc55jGvLTBzyAbKceUWzualrP8JZrGtf1t6GUeY9NkOukQFsJa95pGVpu+MUyE9Rys8v9IJ38jR6TBGEUJYcMrUQDeLbYOB9td0uxYXFgidhw0ZkoZNuDAKk4e5mwzlRPsP3WhEu9rMUa32dRGiewfYwgdnSoz2Jkz9OqkqET2TIOOaH3q8sADgEbUTVGub2kMOMeBMHKNLFhzpe2pt+B0c237Wn3i3Slqgsh5smNawGFo48OByZUVTdrWsshjihH2PX82Ljdr8KZxNTfCPmp9tAKJJTfwPR7AvXjg37VnvWXgVOf6J8z5FEdaeccYqtjOWrc7SHCpCg0Fwv+/u6KCHHqEsry1cX6M9MwzLGybZJR11YuZps1zs3EX/w9npr/5AMRmO573RfODLffzrtl/pT3RVOd4kidqaMVhuDEqmAijJ/LPrlfhUazw10JjFFYPcHOKi0CXMa6o79tkL6nyCnq9Jg8uZ2LY3M8cul9jzU08AOrOUxx7vJ9k8UVb46nHkX9QCLXl9iuHRqhycBb9RkO7PL4ahRy92hK4Tmn6ZHm+wIiWotbc7Z/z9iPrW1yORrwjmAzCoBssh0veocl6J5Q9pJfHm3Ktyc5PYpricmtlC38BoonJOuzlsJ1Bqdmn56\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
