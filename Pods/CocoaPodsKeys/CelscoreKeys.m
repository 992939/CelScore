//
// Generated by CocoaPods-Keys
// on 05/05/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2356], CelscoreKeysData[603], CelscoreKeysData[1043], CelscoreKeysData[2521], CelscoreKeysData[2208], CelscoreKeysData[2679], CelscoreKeysData[1160], CelscoreKeysData[2859], CelscoreKeysData[359], CelscoreKeysData[1205], CelscoreKeysData[1457], CelscoreKeysData[1823], CelscoreKeysData[2646], CelscoreKeysData[2740], CelscoreKeysData[2488], CelscoreKeysData[975], CelscoreKeysData[155], CelscoreKeysData[1692], CelscoreKeysData[2886], CelscoreKeysData[1090], CelscoreKeysData[3326], CelscoreKeysData[3130], CelscoreKeysData[2543], CelscoreKeysData[209], CelscoreKeysData[2718], CelscoreKeysData[1519], CelscoreKeysData[634], CelscoreKeysData[853], CelscoreKeysData[934], CelscoreKeysData[3322], CelscoreKeysData[251], CelscoreKeysData[2492], CelscoreKeysData[3045], CelscoreKeysData[2361], CelscoreKeysData[113], CelscoreKeysData[1114], CelscoreKeysData[763], CelscoreKeysData[1187], CelscoreKeysData[3321], CelscoreKeysData[1140], CelscoreKeysData[288], CelscoreKeysData[408], CelscoreKeysData[2995], CelscoreKeysData[1684], CelscoreKeysData[1321], CelscoreKeysData[822], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[206], CelscoreKeysData[1540], CelscoreKeysData[1574], CelscoreKeysData[1072], CelscoreKeysData[438], CelscoreKeysData[1650], CelscoreKeysData[709], CelscoreKeysData[3165], CelscoreKeysData[3138], CelscoreKeysData[3245], CelscoreKeysData[693], CelscoreKeysData[138], CelscoreKeysData[526], CelscoreKeysData[1669], CelscoreKeysData[2844], CelscoreKeysData[121], CelscoreKeysData[684], CelscoreKeysData[2440], CelscoreKeysData[2693], CelscoreKeysData[1580], CelscoreKeysData[21], CelscoreKeysData[1792], CelscoreKeysData[3211], CelscoreKeysData[2486], CelscoreKeysData[1484], CelscoreKeysData[13], CelscoreKeysData[249], CelscoreKeysData[623], CelscoreKeysData[368], CelscoreKeysData[783], CelscoreKeysData[2318], CelscoreKeysData[3096], CelscoreKeysData[3145], CelscoreKeysData[3256], CelscoreKeysData[2799], CelscoreKeysData[435], CelscoreKeysData[1900], CelscoreKeysData[425], CelscoreKeysData[1382], CelscoreKeysData[3115], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "VxjgqC3aLuuVZe1YU9TwXa8Da9bfiBjswe3HWAJJEcS87+cLKgjlKRTF/Wg4e/L2d6pwVWOnu7rSZ4iwUGsBjgzDcOjzqzu6/IUI4bb42iLqpZLxu9PnK/0XVY5LMWR5h5GTM3VJVPiT46YNtIV6ri2D+K5e4viq6OFKEQK7LmKVBkiPiAkNKBE1d08oQ6Q/izFaYtvHuR6IX20cU-PU1YgMVmzPZtv/TIxcvs/8VPIQXuCL8D6bb68fdA/a7DkQ1QFWqed9elJQuIDLPU1d5zQoJXq66C4Y8zwGWjXIZMN45Su0bLKymONFOoEIiXYETQNM1zGzeyDfA24lyV/+V1iNOWJory35kuvQV/61RqTGwrNFMr2htHjvbSOSlWcNRQ0npwexOi+mUSEn+p3X7I0iaDLVBAS2UYybMbv5Y5XJ6XcDkrhjY07aVrviY4rwU3Y5Adr2bwoLgbN3jMPC8eP5QhqAR5c8ikDgdPFyzQs6m3FvwcuoSZAOF0/O5QJ0LmEkpsnaemCMh+Am9+vbgRq3cq9cv/LI/QORb9y04a07WG1m0uzDR3JcTyRtgVUe0F7YV1OQBlqhD1ByluqQD6YpEzhskUKimroBD+GGNPSHvplJMTdNoR/Fij5UY8x3RL6o6KP9vlmbUjO+lXtr1zZ90HOUtKwrGqfG+jiYbeVqfzCtqCTtd2NAqosyYe3wXgGAG0r1j4Smk5FB75Tqozi3sbfEIywVc9UP+f59RwGWqCqn/94oDf5xsOvc9wmQvM87UIuY0yz3IdtYStu+HtkelxenHtRuEVW8ycIi5RdDN5j9c6Q9GNcORT9vrpRunIRr4mCKfzZhRrWJzAZ6x9Ls5mGQ2uZffTkX4TJfPNZ1D4VBS1i2rPsEJhUW3U/au/wBL5fxMQ4yoL/Xly2FGwxLhg4oydUZ7cdvok-IeZgQIdvxh55wwt40dXR+Z4enEOVB844gYnMW+NoekkggqEsWOe4nS8aYtTgFsnbXWalcG6mum0t3HSMicfNs/Wz5IOYrDHD2kOgwSxL6ir2-slSCCz6Ple3TjTD8ijJVugGsaElrEoWiSw7PShPcVGzRLX7wUFA4IZXbZqfjgqjDtnM9gn1HA0WTH2pFPJW5d3bl8lxwxH9T0aJXONwFx1VP7PFfCu2Rtb5HLzGqcBB8XwIO8bUPdEO1Jhib8a834UzOqheieZMY+:l92DVGQL4fxdgWYtcik+bGES2RU7/Hu8KCLHl/dqqkiHV7LXkax5iR+NGai4g9vV6X1GvYkQ7SBXtgG0LR5Cf4T9KxwvFYLzQ/3POt0OAZl1rluXiHc6AEGZsXp/M4n+f2zIioM7FBvyQAGlMkocaKT/s1FIJTDMXpFBciYL+GBmio/juC7ErFqrCXjCKpsKlYwL0DyUOSoEcIOr5hhaubReeG0H9jAMGsEbnWQ1I3UKY1PEm5W5nu3+vYSdxenc/xA7mTC5wsh1PT6nEouKjqOR5I/MCfYWh9k9zJWiD+VWjckm9QBYFZneL4rpekVtlMhg5UYqDALboLXq5DkMCiQEEfil2tHQzpaFdJaygUbeKW66wsdpLGyPUJCIx4l7OplZfKTtTZSbeP4rh8FN6zChpT2GGDWogZv7rd2bgVlY5x3IGCX7WL28AnfH6EurZI7Lfi/AvfPrMIE9L6WL+ubz713IE118NxEWZnbBlGqxNRuf8YTxe1UiU6EPlpCkLor/ppmq8VdiIX7fxdv+AOgjkT0uUgbsWF1xEhjV2LNEw+zcNhRhaURoGsR5/QtPUFCiG7ADmw8kRsFC7RmkWvLsuIiAMxnSqRfxQKWDe0HdQhwpTLjD52aoHkAyVahR7gxPRJ7ZZv9inSsvKpDQXA2Z4R5pt5wHdswovB6OEIoQCaajaTwpiBKPbt5dX5sio+oInWJzF/jr6HtMa0Md3H6WrKY+OBTaSoA7PZrzZU0PTtHZIV10OL5FCkkSGCjpwjG9vaQqQMhSRklfWnxIpyU6ei2pVnuDFT9+XKHylis5dISUDXEdy/k+4NvIvCwQ7OyahSJvKNihqpQqNb0Rwi6rXmMHsWy2XKOpJvKFSrLXZVSEMcJOQyvgRBwgaiGjUzUdbqU5uOIn+QLDNh167AZdEsnPufkc7wTyDFgmE97Vo9Kj+ffCQo1phqNNRMLJ0FEkYmMpgJYm80Pgs3QUVeLqa4DN4PhUVoE/4WD2Xcaf/160cTmHbVMXH2iza8OIssn/AnAkz/Tt3sB+5CV6XgtXrfThlwYK0yd2UZH4Vbts1fm1vZUn0/nSQf4w7u+qaAHZHjjWwTLBgYIi+2VPWISantAJ6bHYX4sr4ND4/YGYW7aKIq62rE5RY6C16Puz5+q-BGvAGJUrYz476yXZ0l0rSbXN0FK7jbVBaW3+GD7YdlaDmjnwanFv2maPjoUZXPFQE9hIXtOG3X5667lX2RBLmxbdkl9l+22/AUxhOa8RcKNrwlijUWjzzq3igSmc8BdU248Qk9HFhB6bKZ+w7uOC5LP9V8kJw2IeeuRIv5hsyNubp4dzkOC6gbaLH0vx2xDjTKS8fsWU+gG6E5BajhniinfIU163Lg4SHeAkZHkqQZ5ujBUcSEtuHO7Cqzakf980QGikEYQw+VuP2EER7ATB24f0pnj88iVKIKVmGm+LBzdPifACAYdahX5uHv3PIsB0t21UTAjBMjy9BAyM6VrOwxZOV4loleGabzEC4jQhn6psa68ORSn7SPt2BLdRXA1VlHk1wrZADDbiBEENIqd4NkugagJM9ij9Pe3QFLuFUYTKVw2Ve4tZD96amHc3TPOpNMHmDC1U0OtqShd3r47ifWDJ1/bvem0QF1r8Bj/2omD0KbgFI-+ruEp2gNIwl/NgI5x6xNU6X/6x-tugI/cP7yfs637DXAWTzbeMXIzDAx+Fa/URRqzLnFHWpkcCHl3JKGtJwnn38i/OglCqBV0/8/nzKEe9JKNGbvb3MzObznbtHbsAjEwmGjXnu2cukcy9SxgnCMg5mOwoL+l90fzif0ElaWmSgzIOUNuBNTeADRHfjSWnE6+8NLGXs7T0nKAD6LQnhAj3bKNP4sE0wgrqr2FVEobPVwdoOMu0xUWY1mNECwUV2PK5bdbv2wseYIGw9W0xnUNTbpth6ug2HrPal8gTKZLxBsKfVrAYeG3N8HR1avMs5tBxZT7HuvlUnXz9nwpCYctpVaWE5FSKc9l3dG3tcM8jtIlEgDJJmTl/64MmO1W7aSZsrPmheXjeQoT/w38Otf5O0mbOnppZjZeBkKrY4NE/l5KjYcvmNAI3jF40oheTP/DuYmZ0UBT48Jb195/A1=\\\"";

- (NSString *)description
{
  return [@{
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
            @"kAPIKey": self.kAPIKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
