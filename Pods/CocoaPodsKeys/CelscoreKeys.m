//
// Generated by CocoaPods-Keys
// on 08/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[282], CelscoreKeysData[5], CelscoreKeysData[1114], CelscoreKeysData[489], CelscoreKeysData[2545], CelscoreKeysData[1213], CelscoreKeysData[1121], CelscoreKeysData[403], CelscoreKeysData[923], CelscoreKeysData[1026], CelscoreKeysData[1790], CelscoreKeysData[401], CelscoreKeysData[2534], CelscoreKeysData[418], CelscoreKeysData[3], CelscoreKeysData[2713], CelscoreKeysData[1022], CelscoreKeysData[781], CelscoreKeysData[2217], CelscoreKeysData[688], CelscoreKeysData[2296], CelscoreKeysData[888], CelscoreKeysData[203], CelscoreKeysData[352], CelscoreKeysData[8], CelscoreKeysData[602], CelscoreKeysData[2435], CelscoreKeysData[2168], CelscoreKeysData[1775], CelscoreKeysData[2209], CelscoreKeysData[2229], CelscoreKeysData[594], CelscoreKeysData[290], CelscoreKeysData[373], CelscoreKeysData[2009], CelscoreKeysData[157], CelscoreKeysData[840], CelscoreKeysData[196], CelscoreKeysData[151], CelscoreKeysData[563], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[576], CelscoreKeysData[360], CelscoreKeysData[1259], CelscoreKeysData[1676], CelscoreKeysData[2476], CelscoreKeysData[1210], CelscoreKeysData[2509], CelscoreKeysData[2031], CelscoreKeysData[2722], CelscoreKeysData[1990], CelscoreKeysData[471], CelscoreKeysData[1568], CelscoreKeysData[1772], CelscoreKeysData[293], CelscoreKeysData[2513], CelscoreKeysData[1766], CelscoreKeysData[1207], CelscoreKeysData[367], CelscoreKeysData[328], CelscoreKeysData[224], CelscoreKeysData[302], CelscoreKeysData[1305], CelscoreKeysData[1667], CelscoreKeysData[996], CelscoreKeysData[110], CelscoreKeysData[1528], CelscoreKeysData[1490], CelscoreKeysData[384], CelscoreKeysData[404], CelscoreKeysData[1982], CelscoreKeysData[27], CelscoreKeysData[2063], CelscoreKeysData[1673], CelscoreKeysData[1617], CelscoreKeysData[2528], CelscoreKeysData[1705], CelscoreKeysData[1634], CelscoreKeysData[817], CelscoreKeysData[1050], CelscoreKeysData[1152], CelscoreKeysData[2361], CelscoreKeysData[2607], CelscoreKeysData[1730], CelscoreKeysData[1963], CelscoreKeysData[2383], CelscoreKeysData[2625], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2754] = "3GPrwXv6OMyywIgzk4sqJVY8Yx9ardOPSBiHRwJw8SLy8adsuu7xg5B08eM/UMQDSDc+E3Uxg5ZRrM66PRtZ7vhebR21/ayp5DAMxV5w17vr3N4LXdz5VjO6cCl5YG2dp2r0neEtdH80ytZUx4ZRsCtuK2NmwjCxsmtjiAfRQ/+xlW7sT7YCs0hbVZ833Mf5bbzt5IdrN5q9DkN7zGWXQ0ooInW0mdTJ7qD5JoTtUzQpsK2Md6qckWMETwtU7ukyh8HdyJrlGtrcoyssewIhQLAZfM0AkPNESC2ktd6mWWFh721TLhoRH02qMLEzwAX/IvJr3c0K-xVbviP2O2uauEWtuwPGe4Mo8gC+FPHesnJMf+IbjQeE3Tzl/VMNFFXf9HmNc6oKCNX3n0AiriPY-V/PWLjEHHYj3Y9/zVExFpmGNOj5qVTzg4nYbQb23seKwd1HCTHZYxpnlVOfPMoSntYdDCm7kqFrfix7wV2ltEpRFvND7AxkuYTE4ntZhn5HW+U3nPad3e6zTRnhBkRs4CNZUhExkGwA/mPtBg8eSeUErRCvMFLPDenxxncJusMHue9EAA0fWRRUmnv+B6dBfki07WeF5AJzxAcLt7O9F6AgRWetXqQPyZ+TEf+GN4TszOWxsnUC4Vq4Z4xUc1rVAXEh+QSHFuu1n3a7K684vMMctrtwyOo4uxCY/Jas4bSf/1Q79gUstbuziGgi2Mw6agx7GpuCt5Q57P5UaLkdlyavFKEnYpwWBzJMqCye4dKoJFrJQrxWsnkQnlu5vMo0qI5eaxLMC/mFxj6kv//RZJ+C9Xn5jbSiGFUV2/0Fz2xG6Yp9S8Y3Ktal/9diP13b0r4OHIxGnDl9REfwkrANar66Y325on8XZAic8vTftB1pE9h9qHwqgcC4ShC4eK8icgeTCApbC+cRV4Y4JFpnyP9Pz9VQnZB3lH4HRQpm71N4q8nWny5Zn0kwCJt3WimsAlrfivwbggNsMzo4-cx/0xM46rKRK1zPaFb+66S6qSf5NgsRQ2NdBEvgDlt3xTJsR0tvyt1jV1Qxoa9cmPdxT9CZZViWPSatHVgDKrIB8aferFIH9vzRc1Ca7aNH2Fx8Aj+YhYw/rM6gk0nUIZgk9jHFxsn87IlZ/C5v3mNOraFw0Hm0T08BlmyhTBGYGKYU5LW9MV0vU6zPsGmVXPDiNdTd6rAzVM5ty11eLms5v6m0b6t1O/Km2ZohrMAIuMyOzJHQw7nb3qW6vZ0S+NTnjFa-sQXUwEZgVMcSCiyqonGZsAdEZ64mmQRQYfvHHEnDNFQI49EJF1mI3q5eBZYVDZnp7+7D9Mh3XkxD0//AhwCzP0LwFF8RohqOLsnssSuy8a6z55DTaV8xz0DKho/yt1loOFWie2nwc9MqNQV99qbRPZmrNtK6VnMhwRhjVszkyH9d762Pfh7aq6mNO1Qm+utheOmt6t3qxEnI85T+81dyfHTFmAOA/JCpXA37wA5tOpml/rh156IzKCJ+MmSCRra74S3QWl5ZDxpH4+VEyrYlG0lCGvUTO8L9+cVgswPBgXmtW5+mb7JW0/pAFrLOcyZR4iYQIwD/+MIL91reUxqDkQ9+6eVqCpyUAIWSt-Xri5df9M+ic5YAGccaHhyQj68qwcxmTddujIHVzrCDLMHM7GMbAlMC9f4beeeOP+cVYzfb5B64z0ywpdvOaYUv/1MmvoNFo4BMqd0g4p/odyAfqQ2c9SA4X7xXhRpfn5Wb/td+aVQSbdS3ihb60BedYUwM8heMmtL1oquW5nl2wn23JFzLi1t15T0ddO0bjJYP8voxtM8BQHu0W2ksTNOf1mC3I/zti//iO5pyHEYUPm94etUulI75/XhQvm1GCocFhnJQ8/Nb/JnR4df1xSPqH4ZCxBLvw3njwtvjG+l7oCJ3R2+5yAdCjn57ZqCYYMGHv4kzJsRIZ8EiopfFlUU+t6D19gWVAtYJ6jIAYp7Bvr9ubYoXlA:hrWtOZKwF/BAO+9zuK9n0veL5onWNfqeaxh6BL+s-hy5ayhaAwoWWxWbif2lGMGMLOWlaoff81hzd0bysUxs5RoPNqW5kla+wknUO0fBj8QnHGNpwT3ZYErnsxdjwhuwNP1h5iiA+R535vko7t2OFckUdJY2irpfDqUQfwX9eplqQ6LXcJ35yI7gg/jE96jFEiPDywTLo7mBJhZXO7uqvP517BYMd5yDD59yO+HUAsj9y6ntHHvsMvlOvwnfhgTFrphQSeH3JipIPu1P+epTUKSAfCPAOIVpDsbQaKelNjp37hQK6aweYxrkLnODcQKTXXGdBfAhv5fh4dbQDPxCMX/SlkvHTw6sDU+LsIKIqFU+ctDBb18mL80dlAKr/+fnvoPSPBW06fTPPHp6s0kYHk89nUhT9cXPdy8RTko76JoUkw2oSNIqH53KI5xzAIYOXYp/cldbudnFfaTE8oAoC5l2+He4A6zolYw8DazLz3etUWCwDB+qM7/dFlk2kIJ3LkDZbIt9JSdfdEmF/A+UaExp59Iq0g1ARnRYnSFBEj7VXFftZ8r8XU9zONHCUUkaZTjuCALK8aEI9NbqYjKRw184yzM2MSVGEMfAPS9taaTtntuf/nqdePmqDccFi+MrKTlhlqt7JvMp0rZW92YVFC332WFM9b+BveWLNvdT6EIU9XcmWqP8eC3f5pwDkO4B7NlVirqZgE1mJ3nd9vYEDJyN4dH1MLGxsEQQTVWa9AdPUXyHUdNz61RgQ\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
