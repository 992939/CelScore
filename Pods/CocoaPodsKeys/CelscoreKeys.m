//
// Generated by CocoaPods-Keys
// on 28/10/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1648], CelscoreKeysData[10], CelscoreKeysData[2459], CelscoreKeysData[98], CelscoreKeysData[1003], CelscoreKeysData[1773], CelscoreKeysData[1215], CelscoreKeysData[2246], CelscoreKeysData[1917], CelscoreKeysData[551], CelscoreKeysData[820], CelscoreKeysData[3308], CelscoreKeysData[2544], CelscoreKeysData[2944], CelscoreKeysData[1144], CelscoreKeysData[1771], CelscoreKeysData[1559], CelscoreKeysData[758], CelscoreKeysData[3207], CelscoreKeysData[56], CelscoreKeysData[891], CelscoreKeysData[2546], CelscoreKeysData[1990], CelscoreKeysData[1659], CelscoreKeysData[215], CelscoreKeysData[1413], CelscoreKeysData[1462], CelscoreKeysData[2401], CelscoreKeysData[1787], CelscoreKeysData[1849], CelscoreKeysData[923], CelscoreKeysData[2870], CelscoreKeysData[1570], CelscoreKeysData[3166], CelscoreKeysData[2700], CelscoreKeysData[2516], CelscoreKeysData[1766], CelscoreKeysData[2678], CelscoreKeysData[2226], CelscoreKeysData[422], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2410], CelscoreKeysData[1230], CelscoreKeysData[1806], CelscoreKeysData[1620], CelscoreKeysData[2625], CelscoreKeysData[2556], CelscoreKeysData[1166], CelscoreKeysData[2074], CelscoreKeysData[2], CelscoreKeysData[1468], CelscoreKeysData[732], CelscoreKeysData[1633], CelscoreKeysData[2123], CelscoreKeysData[2213], CelscoreKeysData[2319], CelscoreKeysData[1061], CelscoreKeysData[2773], CelscoreKeysData[2110], CelscoreKeysData[2771], CelscoreKeysData[1615], CelscoreKeysData[277], CelscoreKeysData[853], CelscoreKeysData[2466], CelscoreKeysData[2048], CelscoreKeysData[1484], CelscoreKeysData[2807], CelscoreKeysData[1909], CelscoreKeysData[1232], CelscoreKeysData[1530], CelscoreKeysData[2082], CelscoreKeysData[1928], CelscoreKeysData[2587], CelscoreKeysData[912], CelscoreKeysData[2468], CelscoreKeysData[465], CelscoreKeysData[2894], CelscoreKeysData[598], CelscoreKeysData[3272], CelscoreKeysData[1169], CelscoreKeysData[2193], CelscoreKeysData[198], CelscoreKeysData[859], CelscoreKeysData[3056], CelscoreKeysData[983], CelscoreKeysData[2636], CelscoreKeysData[2478], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "uW10pCLsiYXlV7ReTP/yFO9drC51FSBfi6DFMyMtDmG2oR//waVfz2qJyD/JSaEzTvqCEDAKQnvST7mW7wlcPiGgeqT9c5t0MYExuvbZ1kwu8z0TcQRAIgAe9aoFkwi5Amirn4TlptxBW4uoSaJZ9tWyuYlPGh1viP8xpyT1GLtUBgYLT2nwQGjwPWPl1xhL7stWCG8zKGUp09vEFGXZPcKOooIOKeZ4BVFnQOqdkH1AH58QjQlnqJriAF3t8glQzXO5oWRKuf7aN7pcPveJh1ddpuEyV3PfyZaUBd+DnuoLDrw0gQfBNglBM3xCr5H++aLr+xYI/DG02AU4iUBLoxMVo88zQf4+clbZ8yl+sooTPraqeNaH2g4oEGXCEtrwpP53mGOg20gfnLSq1BzReFQLKLeDb8FuERfEwMP1vcB/Pm4X1XsATFyUZYOHBEoPtZdnw91eRYq7ZHNQU9T2/NSJP64gsRBuKlPT86J8e+xpUzCkJLjSoKJOKgPBHhz7E5lHc95N0hawT/hJt1xMvuBJHkE28Fz1qAtzKvtsSsQ4cettLGWY85Qie3JfSDaCfi/dgORQ9bzz7QTRdPmDdjcBJ81M75/CgS7rSoX84jBGWC6jMcuMeLjhN/hW9tjZSVrEKZYQ7plGexOv2a+htWsco25NZoi8eqUhWcAtS2YhApmoflWXhEJinyHLT1E7e268VifbDihE17riwRRHkSTG87fod28PW0XpPool08RJkGD1Qbnq5Mlgf2ssBx4nnFRtAF4EbeS1IOoEcnJ9u/SBwhboiwRenYqe+v+13fam3QUemM7/2dGQvfrGglIyRh8YSoyjQlxUToeRBEpTp9SJy1UaJbnB4CesR7QSAzq7VV/OwNpqNNjs+DwafPX6/mTFacc6U2N1c/X7fHW2AbG/ZSnnURxTdlpVMdZPkBFmZamtyHB+U7BeL4UgVA2a+Jm/0Wv1PhiXcHecoFyVb6L1u0WKc80FL+G9oO1KTtZ7i5zzfvxVv3eaynwKvGCO20oIVCpZhI6/5lc3/Rzav6I0qErLVEZQW8z+0eBXds1+waacQ5NS6VqYgGj7NwkF0BIxB4UzD7Y/3h+/P6sjIaNbuqEbadeJNjIybFA6W8omfwM+gPWjnpzSrCkZVC3b5Zm0O0a7neCCCFtfv1umBmsYTbTcDoBBkm9MQtLbMxj+4jzbCADw1vXleoeTs6v0LMTp9sfbLeKsrKsg9EJdTk1hO8Obcp8Bh5g7K+p7NgcD88x3HRukeOljEO7E+ZBC9Yu+oA8edxmRpZE7Hte3HlRU/+rb0sf7d03tmGcAzoGSEdhtVDAz7944G47EXEpswQ1G6F5bx6yMPemk3yDywm3xjhBv6sYsg22enq5Wv6eQNrxOcwP9XOfX+05rG1u7hgao0eKq504xUJTMFoaot7ra/9p1oed7FkTK3TleYk8TZhG+tlPPKCAtQd8e:gYOSR3kTlWxa7eI4wzh02V2pZzxkOtA7to6jY/w6ggIBLRuP/DFwd0h0LoQAw-VRxEEEYT4rIjSEZJOSvY38qfTqzQfh/2XmPbyg72gPmigaUStXu0RyCssci/kD0d4DDZepDyGesUxE94cH+B70/X4e2wQuxIkfewBk0Lmq6GetniE61nK0o4eDfOkyrM8bbLvWWd8rWRoJe4yQqxkP9T+hjISkt5w2zY37/SeN8rVpmUxYNlX9WtDvtDd7eVdOWD7h0aPyBfmSV62bBIMn3+ARtQZIfReAwDTzP7sccKaDR4Yj69cLiFrjn8VadbMkBWDovVdrYwyk3vx/M-S03PgfPx059GIb5oOwr54UeWMuXkRPDX3RVIGC8K7wY9ACXwCKbscuyWrnYLR8sxaDv4izE0NcsVR03J1CaAvm4V3/wfKEPcUVdCqD57gB6rLRbYDof8yAZI1ak+6Be6hMP3XbWhFzl18z76yOYtKXZVA00j7emNRZqLWfGWSR1OIZCg5lBcBdx9l9RAPi0UnZh2YvrfRtl7A/u3KHxizi8OxIDohYjyAHyYeZI2KPjHq7of8-RwVEEXpzn0kSWxEVQ29/SQtAm-5d5Rag69Q4SmybKH+ev0NlrT1NxYfl1saxubYjk+eQy8edoo8bJyaLqxqG5aUPmIrlt/OKZUVOpCHEnRldyUp8GlGn6HaobSOI/xWKfvsy+Wkr9qk2E6lM0iiaeQ2p78ZbstmN1UMEdxD4KyGKaaW2/u19MvmLZpZSE9ZqZQRX4YJ6XdDuSYW/LgwmCzjz+Md+oYfjBWw4Y0Z6QkvUqPIfsxJ/x38kgCUCdkrabMtwm2HP/Ta/DbdwtvRJjs2NsW+A9jgf2QmE5HFK6yDy4/oWe337+CFxuJ3B9f3qii6V9pW+tVEIrLQugfEIv+LIaUP+bBPqJ+PgPMHaOuhlzLxSlRRSdVGDvqZuelxUGdeTdHElcBLNltFwYYtArZWaGqw6gfMDrbu-7/SyCK7QMcQioeeSrbTiCOnG3P1rTjDnbfOVVjyjtCohlQVj00yO53zMLaPcQ7NTQLD3gvcvZvTAr84LqgPpk44s/ta/PpgTWUckZZnPBIdjprTGkZiIwV8RlyHMLOAMQcRJG7uM47M8xaEaSM2oO/LOxItiaKb/IK94kaf6TBGukP3SI8bLm+ofbvt99rWK005e81plY0dtOHaFy5PWXiuj/42JduBFc3DQCUI94tsMKQwTFQwSl0KjEMFcuh0JaWado0tFmLrVbhJ9A0EmcAupTdlHXoUKEgc/NC9gu9v+Xp-ieCwKvFdbwTing5XLLTa6wQeBCRybIF3GLe4si8NJhTZnuMV4//KHGOSd1ZBPUdpsvUWM7WwpsPD+ZAg1su9AjRyBCLotrJYFpdUcfOz7cCM4h81zO2oDfEZ1B179YPryJDjGxlxMbIMpHpH5iWcY6umrFSQE2nI/KgWMWO9CIBK9Pi3MVPpSiIYyf2jovHkFhyWV4dZ5yuShuamlf476kpKJRPhA/AGO2jFj7AblE6A8cI57yeRm8KbIRu4Nf+JUEqcoxzQKb7IJCROuzujlDXnyLIm23y3tYsO/XuPRpVzmG4+glWb/hwqkA8EQsUfXY2hXOmJhcLT6JjhwiUt+GDSnzwCZ/HGqJCovJu/9hEv7lCAyvA1rekcMGbd1238u/HjBWsJssTTG5G6SrfWlde911MsebjcPjwk6NP+B8DT19094TO9G0MPEPLVWjyyYuw78bH49Keh7iJ2bsPfIiuCW41+M6jOerukGKMtMppbo7T/iuLSbYhWTm78a25Xrzb0R05LodTEY3UABHdpvkTDiYpBoB41NxuDBAaavQ==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
