//
// Generated by CocoaPods-Keys
// on 08/07/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[779], CelscoreKeysData[644], CelscoreKeysData[197], CelscoreKeysData[1796], CelscoreKeysData[593], CelscoreKeysData[2416], CelscoreKeysData[3075], CelscoreKeysData[1532], CelscoreKeysData[1257], CelscoreKeysData[968], CelscoreKeysData[2106], CelscoreKeysData[728], CelscoreKeysData[3029], CelscoreKeysData[2112], CelscoreKeysData[318], CelscoreKeysData[1118], CelscoreKeysData[2299], CelscoreKeysData[1158], CelscoreKeysData[2114], CelscoreKeysData[2478], CelscoreKeysData[2041], CelscoreKeysData[2040], CelscoreKeysData[830], CelscoreKeysData[1700], CelscoreKeysData[1810], CelscoreKeysData[690], CelscoreKeysData[594], CelscoreKeysData[2435], CelscoreKeysData[1007], CelscoreKeysData[112], CelscoreKeysData[43], CelscoreKeysData[1002], CelscoreKeysData[2541], CelscoreKeysData[124], CelscoreKeysData[2724], CelscoreKeysData[1128], CelscoreKeysData[1610], CelscoreKeysData[2369], CelscoreKeysData[2524], CelscoreKeysData[1696], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[59], CelscoreKeysData[2522], CelscoreKeysData[2129], CelscoreKeysData[2568], CelscoreKeysData[2447], CelscoreKeysData[1723], CelscoreKeysData[983], CelscoreKeysData[2655], CelscoreKeysData[2675], CelscoreKeysData[2198], CelscoreKeysData[1313], CelscoreKeysData[2073], CelscoreKeysData[2967], CelscoreKeysData[654], CelscoreKeysData[1066], CelscoreKeysData[225], CelscoreKeysData[2869], CelscoreKeysData[1295], CelscoreKeysData[2897], CelscoreKeysData[252], CelscoreKeysData[243], CelscoreKeysData[1394], CelscoreKeysData[96], CelscoreKeysData[2887], CelscoreKeysData[2919], CelscoreKeysData[646], CelscoreKeysData[1255], CelscoreKeysData[2016], CelscoreKeysData[125], CelscoreKeysData[2101], CelscoreKeysData[760], CelscoreKeysData[599], CelscoreKeysData[1960], CelscoreKeysData[220], CelscoreKeysData[972], CelscoreKeysData[2540], CelscoreKeysData[773], CelscoreKeysData[575], CelscoreKeysData[620], CelscoreKeysData[2950], CelscoreKeysData[1637], CelscoreKeysData[368], CelscoreKeysData[754], CelscoreKeysData[2238], CelscoreKeysData[1552], CelscoreKeysData[1943], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "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:6a3Xcp6YnZHJ+QLyhK/TlI7uZOrdz8Or3kl0FQB1iJTQYgyMWs4WASRHpshmDKwppSccwcjl4hYNkAaeL3hb/CPGR1mPz0sEpvW2f/uinAeWHz4+zdjePCaGYYKB4ceP9haP5Zwn8kOD9CZr9v0ZUjLn4yAIpGWBPkpgXo7Hxe5LG76O7+qEVLCCZC8xEUtaZwzO5gIKpYPZDqWWe7us/2v1e60Z76m13Wsg/aztHcvKJqeBGBA4nA/Ra9iAAmDVyrxkc5EElYoEzE+3H5Ey9oOyI2JdUI5+RZwYOK4kZ2a4coAG+4SkgcLvfU7L/wLr8fAsJu09tCm+NZvenH9Zf12TPxUiZCAYdzG2bOgo8xk1WpsFbeFUq1+icdUY6NBAp4SFNVl0/aW1xzgs+Z4ZqNi9TIzE1H2qZLNanZNDJkJ1t9JmUmuQZgIpEciT5/hSifYP8HzY-aNCt6oktjzWvcOgP6Po1lWfZOzDFMQJCWN83illKmMcX+N3jlTFyM2c+XXo94bFYNZ3f9vsfgQBEU1fg07GMYcBfP6PyBM9aABwBqxqllZ1KFU1XnuQPIBSdXc4tjeKjekPqKwIE/tLig44/R1SDFr2M3r6Lel3acjKdvveVxvX4dVnObv4F/23o3QStugqta1djRXDM1Dty6poHd4nudeYWokt/K5SRVu4/8Ts-miV8qMVDf-El1Ne+2WMJMrl5TKGuYaK4YbcdqN7DU0/GO7QINxRVlAjeNoB/YR0Bjg0m0Ohs+Ok8OHY8f8JfksQsnZbEQJsejBVuS409lNBW/syg3bTpFC5sKZbdf6vZAnFBMqo5IaUw0AMv/Au62MW+HAokPHztBmzd4ugp+99SOla65Z9BaAuSXu10YpBxQKjZbRyMgfp1p/gh\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
