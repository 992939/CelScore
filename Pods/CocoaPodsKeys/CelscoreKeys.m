//
// Generated by CocoaPods-Keys
// on 07/06/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2785], CelscoreKeysData[491], CelscoreKeysData[1133], CelscoreKeysData[3042], CelscoreKeysData[197], CelscoreKeysData[1981], CelscoreKeysData[605], CelscoreKeysData[1977], CelscoreKeysData[1516], CelscoreKeysData[2846], CelscoreKeysData[1324], CelscoreKeysData[1767], CelscoreKeysData[2271], CelscoreKeysData[734], CelscoreKeysData[3075], CelscoreKeysData[1718], CelscoreKeysData[432], CelscoreKeysData[285], CelscoreKeysData[705], CelscoreKeysData[2933], CelscoreKeysData[536], CelscoreKeysData[1120], CelscoreKeysData[114], CelscoreKeysData[1493], CelscoreKeysData[1428], CelscoreKeysData[559], CelscoreKeysData[1523], CelscoreKeysData[3309], CelscoreKeysData[50], CelscoreKeysData[2032], CelscoreKeysData[1601], CelscoreKeysData[2087], CelscoreKeysData[1580], CelscoreKeysData[3229], CelscoreKeysData[2528], CelscoreKeysData[3077], CelscoreKeysData[670], CelscoreKeysData[1566], CelscoreKeysData[503], CelscoreKeysData[731], CelscoreKeysData[3149], CelscoreKeysData[2017], CelscoreKeysData[3303], CelscoreKeysData[301], CelscoreKeysData[2729], CelscoreKeysData[1574], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1893], CelscoreKeysData[1160], CelscoreKeysData[269], CelscoreKeysData[726], CelscoreKeysData[1838], CelscoreKeysData[1326], CelscoreKeysData[1693], CelscoreKeysData[320], CelscoreKeysData[1488], CelscoreKeysData[335], CelscoreKeysData[2958], CelscoreKeysData[2442], CelscoreKeysData[1778], CelscoreKeysData[1400], CelscoreKeysData[870], CelscoreKeysData[524], CelscoreKeysData[416], CelscoreKeysData[1955], CelscoreKeysData[3244], CelscoreKeysData[425], CelscoreKeysData[948], CelscoreKeysData[2429], CelscoreKeysData[2655], CelscoreKeysData[31], CelscoreKeysData[247], CelscoreKeysData[1294], CelscoreKeysData[2021], CelscoreKeysData[1259], CelscoreKeysData[3316], CelscoreKeysData[1824], CelscoreKeysData[263], CelscoreKeysData[2864], CelscoreKeysData[1943], CelscoreKeysData[420], CelscoreKeysData[800], CelscoreKeysData[1884], CelscoreKeysData[1154], CelscoreKeysData[273], CelscoreKeysData[256], CelscoreKeysData[3260], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3330] = "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:EpDc33vX7yTXl6HybdJAbv075ZpPs9HqmKELYOOOBTMUUjtLIVO018jBJdr+T6c+8whEssM37igcuu07QRAXrM7CzuyAPrAfXHNwsp1bPxtsgvT2DQi3snqksQkjzBZo0bvMEvhaLy8+ab8E7UOKLbEwzcHvzcoM6UF658dPzKApkABoZ+TTZPPuDbbtvkX8JYreXSXtRxF16j+Ez/TXBuwuLuwMJtydYLtEdI1xwUzwRslFPdwSNJzRHJoa/G7++UqrywZ13UOilBI1tHiSJdZM+AOxVWjWAL7IRqo4CMfCXV8STq9ynPvqLHW7XOrs2nCG85JQgj2rJ4XEB2VubWZswbcyhXfwpGipWzzhmSs4RzXIfqqI69FZYLidSR-n5sgK69iOFbl2T9TGNnmEmGLYPR+m6PoX82vPtAFY9rPYwuAr4nU8xTNe348FGINkds3OyaxN2f1dsp9hpYTS2MAAiv7dRyw==\\\"";

- (NSString *)description
{
  return [@{
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
            @"kAPIKey": self.kAPIKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
