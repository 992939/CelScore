//
// Generated by CocoaPods-Keys
// on 22/10/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[1118], CelscoreKeysData[525], CelscoreKeysData[2610], CelscoreKeysData[1902], CelscoreKeysData[1298], CelscoreKeysData[520], CelscoreKeysData[1797], CelscoreKeysData[1369], CelscoreKeysData[2592], CelscoreKeysData[2538], CelscoreKeysData[2552], CelscoreKeysData[1878], CelscoreKeysData[539], CelscoreKeysData[2279], CelscoreKeysData[2483], CelscoreKeysData[1155], CelscoreKeysData[13], CelscoreKeysData[1163], CelscoreKeysData[668], CelscoreKeysData[882], CelscoreKeysData[1723], CelscoreKeysData[2443], CelscoreKeysData[229], CelscoreKeysData[1566], CelscoreKeysData[2540], CelscoreKeysData[21], CelscoreKeysData[1689], CelscoreKeysData[2250], CelscoreKeysData[1518], CelscoreKeysData[950], CelscoreKeysData[822], CelscoreKeysData[1749], CelscoreKeysData[754], CelscoreKeysData[1311], CelscoreKeysData[2201], CelscoreKeysData[1480], CelscoreKeysData[1472], CelscoreKeysData[1507], CelscoreKeysData[2181], CelscoreKeysData[851], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2400], CelscoreKeysData[445], CelscoreKeysData[482], CelscoreKeysData[1717], CelscoreKeysData[2009], CelscoreKeysData[2204], CelscoreKeysData[1624], CelscoreKeysData[1064], CelscoreKeysData[1374], CelscoreKeysData[237], CelscoreKeysData[1386], CelscoreKeysData[2384], CelscoreKeysData[1892], CelscoreKeysData[306], CelscoreKeysData[19], CelscoreKeysData[2072], CelscoreKeysData[1159], CelscoreKeysData[1825], CelscoreKeysData[344], CelscoreKeysData[2368], CelscoreKeysData[2544], CelscoreKeysData[1643], CelscoreKeysData[656], CelscoreKeysData[2356], CelscoreKeysData[847], CelscoreKeysData[637], CelscoreKeysData[1414], CelscoreKeysData[798], CelscoreKeysData[2415], CelscoreKeysData[110], CelscoreKeysData[2066], CelscoreKeysData[1422], CelscoreKeysData[139], CelscoreKeysData[227], CelscoreKeysData[648], CelscoreKeysData[2521], CelscoreKeysData[353], CelscoreKeysData[2219], CelscoreKeysData[2187], CelscoreKeysData[54], CelscoreKeysData[1516], CelscoreKeysData[667], CelscoreKeysData[316], CelscoreKeysData[1502], CelscoreKeysData[318], CelscoreKeysData[1493], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2642] = "HimWn9uSbDcqufpQSQydkeoO3iIGtQHqYazkD4al5dzu9/vyODU8Y00XScAD4uyHVzHlQymGBeG8TCVks+VA//STuO5fwQKZAMhwC36AS+ABf09UBynEFqz4C4LMf1ylqk4+bIHmB6ufitq+rRuleAT5nC2eirGw8+TT6as9JbUMXC+QtNidWsGSS8XVGQYjzphR+IJX6oVoCHbt22ElT/tb0quoBrNRHxC-u9qnLc9Mk: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\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
