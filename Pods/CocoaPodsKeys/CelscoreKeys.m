//
// Generated by CocoaPods-Keys
// on 29/09/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[750], CelscoreKeysData[895], CelscoreKeysData[1003], CelscoreKeysData[2812], CelscoreKeysData[117], CelscoreKeysData[1403], CelscoreKeysData[2444], CelscoreKeysData[2114], CelscoreKeysData[1207], CelscoreKeysData[150], CelscoreKeysData[2638], CelscoreKeysData[1560], CelscoreKeysData[288], CelscoreKeysData[1625], CelscoreKeysData[316], CelscoreKeysData[1520], CelscoreKeysData[887], CelscoreKeysData[1336], CelscoreKeysData[1375], CelscoreKeysData[1628], CelscoreKeysData[2319], CelscoreKeysData[719], CelscoreKeysData[2141], CelscoreKeysData[1324], CelscoreKeysData[755], CelscoreKeysData[2322], CelscoreKeysData[334], CelscoreKeysData[2382], CelscoreKeysData[1071], CelscoreKeysData[2691], CelscoreKeysData[1129], CelscoreKeysData[2707], CelscoreKeysData[3097], CelscoreKeysData[429], CelscoreKeysData[1826], CelscoreKeysData[199], CelscoreKeysData[131], CelscoreKeysData[3110], CelscoreKeysData[1289], CelscoreKeysData[2314], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[3167], CelscoreKeysData[2510], CelscoreKeysData[1594], CelscoreKeysData[97], CelscoreKeysData[18], CelscoreKeysData[1487], CelscoreKeysData[1652], CelscoreKeysData[72], CelscoreKeysData[982], CelscoreKeysData[92], CelscoreKeysData[634], CelscoreKeysData[598], CelscoreKeysData[968], CelscoreKeysData[126], CelscoreKeysData[2397], CelscoreKeysData[2977], CelscoreKeysData[1870], CelscoreKeysData[742], CelscoreKeysData[2954], CelscoreKeysData[1746], CelscoreKeysData[39], CelscoreKeysData[2053], CelscoreKeysData[1704], CelscoreKeysData[268], CelscoreKeysData[398], CelscoreKeysData[1953], CelscoreKeysData[764], CelscoreKeysData[2049], CelscoreKeysData[2928], CelscoreKeysData[2582], CelscoreKeysData[248], CelscoreKeysData[1468], CelscoreKeysData[1894], CelscoreKeysData[2273], CelscoreKeysData[1004], CelscoreKeysData[1934], CelscoreKeysData[1095], CelscoreKeysData[746], CelscoreKeysData[2011], CelscoreKeysData[1068], CelscoreKeysData[1657], CelscoreKeysData[2965], CelscoreKeysData[1073], CelscoreKeysData[2361], CelscoreKeysData[181], CelscoreKeysData[1371], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3214] = "fzbe0yTWNvFHBVkSFDa/Ui3z5PETzlfW8AelnkB1P375J906ca/xzRt+v05QmISqZxmQYpab-1A8R5AD+SyUdLNyCIHw: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-zxqyOh3uMRtUNxSdt/A5qJTOi-gsoUQ4w9ZVazaATlMI1Kg8e4RfNscRCCmix+vLqRr1BxlqtQwGJo4pbkAIxqbiJM8mqEw5gxTXMbKa2MImaiD3dCgprPS0dut5peXVwKc451m5kDdvZmXW9FpB3FiIiNxCHG7acr46VRDE2Qmu+HiZK6BpY5RiZJuXtEaFUof67nic08fJ2Jo3R4k78BLyj+52xhMi256RjwsYMPO1ZQuDhyxYNtgiA0sb3T6tcBXrT+AufMTD1NfVfJm+3D9W7I=\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
