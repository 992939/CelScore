//
// Generated by CocoaPods-Keys
// on 31/08/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[889], CelscoreKeysData[465], CelscoreKeysData[1913], CelscoreKeysData[584], CelscoreKeysData[962], CelscoreKeysData[2046], CelscoreKeysData[992], CelscoreKeysData[3046], CelscoreKeysData[2645], CelscoreKeysData[2176], CelscoreKeysData[1601], CelscoreKeysData[2942], CelscoreKeysData[2920], CelscoreKeysData[1832], CelscoreKeysData[232], CelscoreKeysData[2251], CelscoreKeysData[1922], CelscoreKeysData[830], CelscoreKeysData[821], CelscoreKeysData[2948], CelscoreKeysData[396], CelscoreKeysData[1915], CelscoreKeysData[1506], CelscoreKeysData[2780], CelscoreKeysData[1623], CelscoreKeysData[1822], CelscoreKeysData[2692], CelscoreKeysData[1666], CelscoreKeysData[2686], CelscoreKeysData[2185], CelscoreKeysData[795], CelscoreKeysData[2119], CelscoreKeysData[982], CelscoreKeysData[468], CelscoreKeysData[235], CelscoreKeysData[2840], CelscoreKeysData[258], CelscoreKeysData[2396], CelscoreKeysData[2727], CelscoreKeysData[2616], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[247], CelscoreKeysData[2320], CelscoreKeysData[1193], CelscoreKeysData[2897], CelscoreKeysData[1217], CelscoreKeysData[1606], CelscoreKeysData[2713], CelscoreKeysData[152], CelscoreKeysData[1807], CelscoreKeysData[660], CelscoreKeysData[1539], CelscoreKeysData[2852], CelscoreKeysData[546], CelscoreKeysData[1064], CelscoreKeysData[2588], CelscoreKeysData[260], CelscoreKeysData[2608], CelscoreKeysData[1640], CelscoreKeysData[2705], CelscoreKeysData[1172], CelscoreKeysData[131], CelscoreKeysData[2061], CelscoreKeysData[2409], CelscoreKeysData[1439], CelscoreKeysData[2985], CelscoreKeysData[2010], CelscoreKeysData[355], CelscoreKeysData[606], CelscoreKeysData[1443], CelscoreKeysData[99], CelscoreKeysData[1964], CelscoreKeysData[747], CelscoreKeysData[943], CelscoreKeysData[174], CelscoreKeysData[1939], CelscoreKeysData[2078], CelscoreKeysData[2375], CelscoreKeysData[115], CelscoreKeysData[752], CelscoreKeysData[908], CelscoreKeysData[316], CelscoreKeysData[1493], CelscoreKeysData[1651], CelscoreKeysData[627], CelscoreKeysData[1845], CelscoreKeysData[288], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "+x7xeOSHUG+J/vdRnyWB+bfkH6JmC8SnBUNrEEeEdmzkkQ7BgZPdvnWP7e7iQnFOwCZl7W/+LKo1pigRVkAJHRCkmkY4CC+3zlf957ILSe/VYgVefq8bS8yliQgbzce7zg41XRPOTa6VXFsCMkFCDY/c-fIhH4DcgwPd/fxigXACXy-eir3raSfuOCgNUxCTGQd9cA9Vop7WPtmliqg/lkXtlzvtTb9jcQbJXPKdrvq9LCeQWubR/tbuhG1Z2ytv1RKpe54iOvssCqzfAMl7ggiELikF6Twbc1KKUqPV4/q1SlXyoZk8oF8kgYTU87ihfuq1Hww2fiZOL2Rzwj5ZXb9y+5J+Zg3vgdy5O5kyk+r7Xk1yGY4P8UeTxjyi2qOzVQwmByULI7MRaRpJFL7VCaIZUb0JaF7dynlifko8sb9wjDMXI8LeFPiQEb5kyLYcqUqulBYzF0cvivaDTXQJT32JudGX8XQ0VlHERoaQshUwFbqSd/5O4EHpLVWaBQajhrZQjsBhPBIh4d0ZD3JK6rFApsRyF2BuHl8JAONBcapw4UiZGP5dJVhSzYkuhYmRukcN4aiqE1WZE/pwJ6kxYQ7mHF02qU9cb4TCrHcbN18iRP1fpRM1ATYO5TgHDrQNMUv9inWOVkKhlHUrXJ6T:xt3zFv2rOeg2S64YvgVu0LF5W3kJmAXbVLO5SbWQDf4MKCNo3AukO8BTjTqGY4kxXbkjICJWaAvAfq/XWukTwc8IhB71hKtmNw5jm03X794PYsNTT+j8O730+d+jFhwPka1PoQnHMPpGgO2VIVw1/I2kn3po7eE79qSkwYDiIlGjyg1lEuOydOCVOSuf3QJLtRGdi9G9BJ+cq/WxjhoGUMwjYye+wp+KRe0q0wHkkkizGN8iGZAQWpJ0/wMi50AHYb1xZ03JPhY11RdGPPKQFN+rPCfBISL/lSAxtmdwGgiuW7EBeQpLrOEU3XjVO6KJn2SO5KGirn80QEzZ+yb2L1tcw1cSpMtp0D1wF4WhsucsO739Y746Shvv7x+zSIOA4Lq7CT6jv+lHRaB/8OSd1r1iebwUw2HVsSfq/+4m6gGMA7IxS9OHJXx6FjH/mZkj8drZMdLcAtN76k6xpRWDgIb6vw6TPcRqOs7kUObZRrns6qR3mZk+iepE3+4hBGE7HQBPi51Y+J8V7st21hV2-/UTqi4O+GGT74dEB2kFw7UCadEBfZnnvLdyOrDvUUnliuO8ue5nXaTjm7KEeD1s99IP9pzE+Lmav41uEiKIev18sgkBZzIClhkOYmKqPtTEJUjqcEV99AKzwiAwDWkcW/Y6CtRwYsWXUMPcwCLDihOU7L/5aVuQiW6y1yEQLIkbiIVenfDiD+Kzlv6whVy/24emLFZiAhlOAUe3MR+A2qcumahPmCbaMTMRDmQGEirjT4VLdhMLqd-uLx-gBfYxVvSbOTP1dkEt2sd8Y5Sz3wN3ZdTmykAHFSDuq7GEwmbraKGz4rz+NDdd19yX47j9Qb4WoAOJ1ylrlaiwMJ7egVENcadyxZzyMaY/RWFs6khP/yGijxX0xx9ptbmWKrlM4BPMT6yKECcn37/k2+0IAUl/2HUYRso/nnBNtfcwGwTskzONo1gnLmz2GcL//3ubNq6XCnL8eZ29FeqALiuFeNd/YJrhNtxpDHfMiW/SjOemg+pNX8H3X5SSmF2MaGcrtpq3UZmnTtKCx5V+GbFBjxpqe5dgapB+T8Sh7tYdyhZ+C2EK4MeX0h2VnjJCqq5AlUWmss1M/etZavv6TqwSQD9feiDxPAbaWlIHvr1wyp2gs6wDh3GyuexuiVRKouH9a4BAQqQJp0vY61XiFrobGEhrZSLIyXW4PlTtPFCSSPrZxur3Hy9ZjkYGBj81nIyC3OQy7X31VKCn1djawC8Tv2fJXfiSRvdykWqq/TsPPk9g0zhCXoRlEvp35kSxQymuXT5auMii6Gmogm1+xk49jy6pJ3hjcCWRQJUIJrO5wZ3sswJ7n4f+nXTj0TRDb/ZHNZ6QAY8cUEkdh6TfBzekm6Hwt1HFm1y47SA99NNsbuP895T5d0wN01ZWH1M9rDfQpN6ds3zeIeLbmDJ1BDlxg7ukc4P2GAdExs3I85QUEXR6JInqkoJgBE0VSLwByd5XMNWPpgm5jLRl9ZmUX8xUrwHsO3AwurKGYVkySUWP5dt6kv11MJlFcVq33pzi6c2opX74NJgs+knAVjtiJ/XiW1xQuBK0UaZ2AJYH+vJd63oL4CknOAfsy5wBTqU/aIT/2WQImjA9Xw3KSCk198gnjyPsVX9Yq43BvpazQDLs+X72DoHzDHxNkH52neGd4rL8NaOczit/oQKnItktCb3FnVmJU1cNnYcNb3JsWLHCxAClm9g87IT5luE9TkP6nTlUbO834gF3Rvk5FmxM3LO4kcB4OVf2c5mpk/VX2/u3nd+uxdtL7U/e/ah8rAlK89rioJgpd3fFPLoYeCUGnfnh+l9JXCuiWiQww4G7xRXbEiREItJW29Tqdx895Dlb3aKmqrWvCvj3CFXf/bGgZW+DlWvinVfHfMAnVPa5jlZyjaQ+n6bMvd1dYPSw7Flr8qxTsrwwxMxeCJfEkLdP+0cUUOsi2qizMVssE22/36Yt3ILpb65STwtrRVT/lPrTcxpaV9ROmwE3/nPT//6mO4ckCMH4PiVAmAyV541C69II-qNTm/r6tyy/CDIYLlhkn2u2w8Y27DUVMydkkYYUdBcRHTI/AqVRC3d4wja8uohATm5Ir8gVsfR8cu6qDGKgWOw6i7ovGYnC9nlsNJfAheTViUiukf3Bl9WOwv6YoULe6PphFytj+hkf2ZFlj5M00awBaHb8rIwoPsvo6mqGRue0bGwQxqWPzBwN9/VnPLuUeIWIgoCSviuO6/8EPlJSZd1AbS6x9ya8Dc8A+rwBHh+hli9F2VWyFlZN3TVxaJhuK1wIftBiRkrTtxifPAiIlU174r++EY0rsjg4H34KnbbUlP1T3oKNlvga/NBFbpFA84oJWDDjhR6GOTRUDDusPY8VK3qAMxjjTdcCjIiNYe/f3eMmY8e/rZKejUIoBvMqWu3KBWh\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
