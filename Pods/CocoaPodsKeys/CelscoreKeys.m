//
// Generated by CocoaPods-Keys
// on 23/09/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[13], CelscoreKeysData[1731], CelscoreKeysData[573], CelscoreKeysData[175], CelscoreKeysData[1686], CelscoreKeysData[397], CelscoreKeysData[35], CelscoreKeysData[2285], CelscoreKeysData[775], CelscoreKeysData[1528], CelscoreKeysData[264], CelscoreKeysData[62], CelscoreKeysData[802], CelscoreKeysData[1278], CelscoreKeysData[875], CelscoreKeysData[2326], CelscoreKeysData[1282], CelscoreKeysData[1794], CelscoreKeysData[2786], CelscoreKeysData[1843], CelscoreKeysData[1026], CelscoreKeysData[150], CelscoreKeysData[853], CelscoreKeysData[1407], CelscoreKeysData[2763], CelscoreKeysData[414], CelscoreKeysData[843], CelscoreKeysData[1075], CelscoreKeysData[2211], CelscoreKeysData[699], CelscoreKeysData[939], CelscoreKeysData[2719], CelscoreKeysData[638], CelscoreKeysData[762], CelscoreKeysData[400], CelscoreKeysData[1916], CelscoreKeysData[1747], CelscoreKeysData[2770], CelscoreKeysData[1488], CelscoreKeysData[1593], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[2658], CelscoreKeysData[311], CelscoreKeysData[564], CelscoreKeysData[1909], CelscoreKeysData[579], CelscoreKeysData[1604], CelscoreKeysData[1526], CelscoreKeysData[1034], CelscoreKeysData[420], CelscoreKeysData[1685], CelscoreKeysData[2175], CelscoreKeysData[2172], CelscoreKeysData[1548], CelscoreKeysData[1658], CelscoreKeysData[198], CelscoreKeysData[1908], CelscoreKeysData[1342], CelscoreKeysData[2084], CelscoreKeysData[2074], CelscoreKeysData[886], CelscoreKeysData[1353], CelscoreKeysData[1021], CelscoreKeysData[1921], CelscoreKeysData[2228], CelscoreKeysData[149], CelscoreKeysData[2355], CelscoreKeysData[1135], CelscoreKeysData[1284], CelscoreKeysData[267], CelscoreKeysData[1188], CelscoreKeysData[816], CelscoreKeysData[2331], CelscoreKeysData[1902], CelscoreKeysData[485], CelscoreKeysData[1597], CelscoreKeysData[2562], CelscoreKeysData[500], CelscoreKeysData[1426], CelscoreKeysData[1824], CelscoreKeysData[522], CelscoreKeysData[2087], CelscoreKeysData[2589], CelscoreKeysData[139], CelscoreKeysData[1987], CelscoreKeysData[1415], CelscoreKeysData[1244], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2870] = "Zc6oRUYkyS9Ks0HiIiIMgeg/oikjFsojDO/0tO/SDUDCsuYA7L0BLZiScnaHcKitT/E9IrDpE21T55EwfR9mzK6TbAIdHzOgDsC6uORlvFvSbBSjE80LRjU/a40V426T9yuDn8PROlp2KmfU/Klfx48yV5V0cSEnJPmFD38ou5g2/14E+VfSNtSeaXEw92ZjFPz/8tdPCZu2QmJQzaJf9aZrBIf1Qu+aQxvK+IpbR9ydUaWtj3sh/adH+qza+okWfmrkLydy2qx-mZO4rV0rDwQuTKW4W7Ai+njbFT7pGN+j7mDwhoUTCRgsH0iP6WJ0zouqLiO3omWI73JEiOkwUwyrAZGtccaekE0CW7E3Ny1egJxpKdeanC892d0TgY5Iiii0K7cTOUBJY6Of9EfIUetfzLukLTeaxArR1luxCcDbwVEyYsO2frWYoItW6fxGlP6ALYDG9WM0+bwt6IjNOeJPy7vfE+pAjhjOO-f/z2Uk+3nsnPFVcx6lEe9iXqxeWO2pqkak4C0wDBs9YDVLkZNnxTc5odD1ubsKCFQcNCZax+ZfNE/e-JOSQx3i7wJAB8UatnsQUYVvLLgEUI32VPiRbdIXq3zB93qyysoZQY/IpQJ2Tn6FllLH1WJOR721kC224n7406Gf9b/vEMZ62q8g5KRIYz9JF7y3VsGfKTCCAow1MY3gZ+OfBxVY+Qlf9bWkWF07lwB41SK9A5ZNUEumG0Da37oDmQ5CJRSGPIU6SgIxeizALUo90ITyy8X4cZXeSqrbuHaTReFHNbP5VYQqzx8ip7HhBMA10IaS5UHX/4lcaQmOaIntj17hT2w7LyTq7sYZ2j8Ajpqc4YSsd9LqNXta+wH3YwPxCN+U3o6rEWHSzMP3dh7rj3LwXItpEg48dsE0o6KlUgAzQJxRwjQH0pent2PU24HsJCUKEkynbeVgmgFSij4BeN1TiZOpNFdhgwgN6NtTJDztaD9lxdJxD095mY4E0KIWqJFlf0QT0I47dcbV66lifIafA96E+maG07fcCB-DhlIytxQ7/LKOBgQ/eXk6x3HKcvELk+wU0ampEs4JOGbsa6Ew+BSmTmxn5TnsgVjfXftlmMwUT50TYoEHRMrSZBVHWVOyPjpw2yL5/aSBfmN2QyEGG1NPaSInwLR9IGTBPc2iEAzCnqf5l0zEhrUQvear94GzflPOTx+8a1DvAyH7mG1Ibf5jVorSh/WAN0LYDSXHa8EEWEffXYkCcms67cGnIl3zUn1k6L6UxjYefv1Oa1J6fL9biQfP9OTTkuVLTHnSWx3AmD1h/mdmkorV6V/qCII2A2UH+bFShlKxkFxqH9kUNBeJuGuSXq1Vd1GDGMqhqsJr0vsk1EEnCqmGUk1VWHrlALfgODuK/3GRrpmxV4nl7vo8lwim6Qn6k8+x8RZvzAbxJJa4SzcZ3UZdMDEtxEOjPsr7atcOXUJ37cfsxd4l/xxwcKI4STYALX31xGhsuRxMpSaD+VImZZHaua1ys+/RKGwBw9JmPkuO0kthsJ5NC8KcGzGlLEpl5OWb8HXNxtRWlq65kRrI7t6UceVgKQwJXjfrCzdqiB8Eb7Gh3PSun9g1MtMmsx7wxsUKY0Ju+yyB8cwx9bVe2VXvKWHYS2M+FTNp7O0uCjw0Schq+adnRk46DpEv28lXW9bOrP0f4VUPM:7AFDMhbyA31t+Zur9xUGtXFsbeabvb1G9o86XTctI/kDiXbq7uftHnY8/AxUtKKfyjaaEVEf0/39Hh/MtWpCoKPKKg5A+oiSivKTvg6jwpayl7VvGnrKh75hTeiJs+i+zjEEhXamUx1n6sPtUAijXekCUBRP5yOukGBmyYw8haSrGXcoDSeTqm5dztddJFSDZj2DDhI2R79ZW1zKj0gj0a4Qfjq9PYee2InnCNjz4isblDJZcLF9U3YSQwUiLZIxwHj12babhqWHn00WzvuonDu0slyf+iPvGCtS36w5uzVIv1rBhS2Ge7IZ0ylR7NVGCeA3yH1DdWvnaP7ZBe99eZvLPcKvAW4giO5gNDH6huFbTrkSGNksQEAqwgm/k/Yg4kJS-2OoopFl2TbxX8Ra2iuOd29VK7AMiawbpOy85D/7qPcWrbVkOL/Nv79fCd2ZLiqkPMvHoTxrLIsi/Viquf+LuatQqBm6CZURPd0iddSBamp5pEEbIB4M8BPDLLPYDGQpvbU5xswIdMZ6pwkAgtvMnoaWCb-+RQsSmG4gSJS+SdJpkfReZBYIoGH9bbMb6tt0TJlRymQZ9cW3YNpGqoeY2YyDeiwaHxKxvJL0lnEvORZewk3potq+rQNE8aQOYEV3h8FHDELWnzMRzY24w+loOuU1R4+Ns75VqLij4/3DoJuw596TRN51j/x0JLAJ/qqtKqJHcdYY8snPBGBtVGbfGlcC7TWYG3/Kd52G2Zy1N3t9anCZLnFaJ8p57doRMcfCnvQNJcNzHW7XdcreZY4Hy/KHiuZbXKpExJl2Ny5igIcaQS4pk+d4gxnpO5HWzB146hGwFb+PXFtSWuGS6EUX7+lJboVl7H5IyBsjXZQY1xCPd4KCtHOZQuqe2boHcdkIJe/aL1kLdWCHyG6HIr7P0IzqrBLckkd9OqEoP2cwQYM02UO2URDGK0CUZC6Upqlb+sZATe+AuuA43IDt/golCO7iveNEjqDTa9E0sDH75QUO9FIsakjN7XzW4DeLVjO1a3zSodegx7G0N2/ovDVjmOgE2yTPEPH1de/h6nLaD2UN6p7A/OM75mZI54U6R0AEpXjklRu69G3iNnz0MH7zzcts3YayUW4SIRh+CjBjsWiOp0WUn0O+z4jh6EALiFX4cHOKDWtvCyhYmgZm9JA9Jqp/0=\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
