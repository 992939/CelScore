//
// Generated by CocoaPods-Keys
// on 11/03/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[2148], CelscoreKeysData[567], CelscoreKeysData[1394], CelscoreKeysData[607], CelscoreKeysData[1478], CelscoreKeysData[1613], CelscoreKeysData[42], CelscoreKeysData[107], CelscoreKeysData[2048], CelscoreKeysData[176], CelscoreKeysData[1928], CelscoreKeysData[1252], CelscoreKeysData[622], CelscoreKeysData[1632], CelscoreKeysData[1247], CelscoreKeysData[1178], CelscoreKeysData[1310], CelscoreKeysData[998], CelscoreKeysData[121], CelscoreKeysData[1149], CelscoreKeysData[1027], CelscoreKeysData[1434], CelscoreKeysData[652], CelscoreKeysData[1894], CelscoreKeysData[1741], CelscoreKeysData[770], CelscoreKeysData[1448], CelscoreKeysData[598], CelscoreKeysData[1240], CelscoreKeysData[535], CelscoreKeysData[1446], CelscoreKeysData[542], CelscoreKeysData[1315], CelscoreKeysData[1842], CelscoreKeysData[443], CelscoreKeysData[977], CelscoreKeysData[1238], CelscoreKeysData[2104], CelscoreKeysData[1957], CelscoreKeysData[1900], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1127], CelscoreKeysData[1628], CelscoreKeysData[676], CelscoreKeysData[5], CelscoreKeysData[1378], CelscoreKeysData[804], CelscoreKeysData[1885], CelscoreKeysData[809], CelscoreKeysData[630], CelscoreKeysData[1534], CelscoreKeysData[372], CelscoreKeysData[603], CelscoreKeysData[715], CelscoreKeysData[2054], CelscoreKeysData[1723], CelscoreKeysData[283], CelscoreKeysData[1606], CelscoreKeysData[46], CelscoreKeysData[1742], CelscoreKeysData[2076], CelscoreKeysData[2113], CelscoreKeysData[767], CelscoreKeysData[2117], CelscoreKeysData[1133], CelscoreKeysData[427], CelscoreKeysData[1925], CelscoreKeysData[1524], CelscoreKeysData[495], CelscoreKeysData[1837], CelscoreKeysData[2049], CelscoreKeysData[1929], CelscoreKeysData[774], CelscoreKeysData[101], CelscoreKeysData[2131], CelscoreKeysData[316], CelscoreKeysData[1223], CelscoreKeysData[142], CelscoreKeysData[1450], CelscoreKeysData[76], CelscoreKeysData[2211], CelscoreKeysData[627], CelscoreKeysData[456], CelscoreKeysData[1994], CelscoreKeysData[1113], CelscoreKeysData[1249], CelscoreKeysData[1622], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[2298] = "OluIpeBUnElTmxsB83gOgljt/tsXQYpvvpYSibmHR30D2dbv039e23IXFN4S87fokkfDSi/FJtJY1N/sVuf+rW61MUl93vWCkAeYefZ4ze4Yzr3y2NK7jQ9wi9k9Okl510UIsLHHQvzQPNckxax18duZYTH4HmjjzYPE403PtBhU00M0s3ASCtrTtwKcnx8rGgUmdc05f0/47h1I5eCsJJKBu1A6vezPtjxoYfnhPIWyoRI4Sxt25J/gbzkyWpGfxq72g9u0c9qnY+ku3C3GjB5ivcceF1iEhxZuSRZUDVA1/5CZTFya9OzMdSug9ZrNGAkjJihsbnt0FFGIKRsJi3Aaj+vMuZDUbInMg91a9WsCb3EgX1fndjegmgB7jpdZVuCyU9o0QFaUAmIakNFL4h/eCUENuX5Yy0IMfEb+xRx4+MPVwJlZ9PhWLCv9jr7t8Sf22U0Eagu5lO+eVRTRvxTm2iTA2d7AhSf4jsnq9ktY5iR9m2BWciqB3ecwIPwQyknq4WeSOJWQddDE0h8xkFpY4tGY/KduIFB77dYhqIUxkyZYG6Wj05SXNSY70MOTPjOaa6Hxn0icPcEHCfV/MnJ6SuM0pyYE4ljnaKCYUx4vQAAKekO8qJ13vGhfUWcP3zFSUgsIRtLp9+Mlebn2S1gPsnt3PUmkL+uo-/7IA5TrvFGhRyoSXybvInr/zhSkFCBsJXN+D9h8SDb4COl0qSiXZoeC27M8vZGMm2rmiphQsmykvjLmoOcNSRDwJld9+QeBY+8VjJmcb1cMueuDl3z13JQtdIX3uc8Osi+p6-vsW51NUhU/kYXjpeiIrMU086EOXhOq1dugLFGheCtZi4HApcHZ1atqSaHl/om7DdD8DGAv14RiqIlagUgvwC0s3FCmFA8WCfeR/YDmC+o576FNP7yGZwZs9Q5teKqMNIGKiQq6wJQoWAOgM0zOtKW1jDzlPmf/wj6XIyk9CjKovw9Oq0ojRvU4Ngeo4WlMoOqZT6z/7yDXbPVihMhs+itIUGCacxuQqvKygzo5Ums4G0Vk8LGT01xrnE3j8oW9IpNHuVumPzfEJxNhSxFc43dlzOpP6JGXV7siHux1rUrOph26n17G8V+CKv8zU72uDx72R-Wu+VJx1cbbO5GyFyF6XrL37IZ9M5T4mONbYTADLBKDcqYBRaBVaBW1/wRZlLreDCag2XBGvZO5ZFDB1cDjwZWcwcA1eVNYjabBrXPZS4KnMSNKXHvrf60TiIK/UsKnMQtj8f1+xGXh4f5v2wWXoSTv9ab6akQFUSNasDjs4QLvf2EchmfA4S92mPy0Pg0fG1CA2SE+fXKGewICE/Su+OodHy3nx2B1628JiepC+UeeMXnmGBAiEYatSHJzoAyp7umRaAwYjI43xcbGr18v2PvPJkH8vuNya5Xkyzg5FNv7Ab8u0jdAyuFeq1nPAmbYj8Xclz9MyZEhohNWg2xIuW9XHX70CbFVm2Z68Q3lfwgSmSWvproQIq1YAoO2a+ZiMuWixvs/5YTt+cI6s3:htZiydISoCnnfksDgiJo49NkTDOoDiEwX/uwuKGyBAMrAn7MeWzH4wFtfDyABqfqONiBomYetBHHoJ6TFZ8rCWfcLp1Hcsnfc97KWv5KbnrCtKOTAW8zi6qBnS+PBHPNGsB3ZXDroY3SB5bHGCFFPnRWJg5WzkXEFUG+mO+KOq77eJnaEdbeGqE6krtFd8haTbaBpfwuuJ61KjO-sBt70qpfihSQs7VF/gcQTCRJM0ZAYd8I67QAlVp/CFQUgo9NUc0+hAVB4uOVOYIiSQHj6Yrd1gcj6O86gf0q4WNPB1q5En-DKn8TihRVJs8xm8iuXfP6QqETAcbECAAL/Eqm/cNee8ztkot6vrk5w+g8f8ZZiP0tsLbIc2mcAdDUotG7u+OTzy4Ko2aIN+YctNVTgS+/nP7ihJva3PJJSFujtzw6zC/KhHVbxopakr+BttaLJH8Qyd6O4Yc2jmxtlBkyaWNeaV24bi5HdzlnnQmgHzk/tVPXRIO5gEiwhc/bhkkHub9lK3BdXkR8oamPcmPua6lmRwbCB7O69pbt5DwgdbebHG5Hdx6W3bZoN5FBtSI1cU1upxbyfMF9jLCDPWgQ-vqWT4/CcmMx7O97v0HCmmuDiNsNR1fspwkJEuWoucLFv5L6Jlw8BG9H/AM2buwZpbxq1HVfEH5ROw7V07ihLExcG1TgP9rj92zVIQTBNLKq4T7wxdyHVkMvnh4LXHNjjxHivpcRHlrUSwP4/NAqLXfEqKsvo2wBjeQ==\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
