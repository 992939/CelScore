//
// Generated by CocoaPods-Keys
// on 29/09/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CelscoreKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CelscoreKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CelscoreKeys *, SEL) = NULL;

  if ([key isEqualToString:@"kAPIKey"]) {
    implementation = _podKeys234836460cea82ba58471234ccc965b5;
  }

  if ([key isEqualToString:@"kCognitoIdentityPoolId"]) {
    implementation = _podKeysb6696e6f261bafd4b95eb8d8ef681363;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys234836460cea82ba58471234ccc965b5(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CelscoreKeysData[819], CelscoreKeysData[2906], CelscoreKeysData[1761], CelscoreKeysData[65], CelscoreKeysData[1322], CelscoreKeysData[2450], CelscoreKeysData[1624], CelscoreKeysData[1326], CelscoreKeysData[429], CelscoreKeysData[266], CelscoreKeysData[2751], CelscoreKeysData[1556], CelscoreKeysData[161], CelscoreKeysData[2227], CelscoreKeysData[726], CelscoreKeysData[1229], CelscoreKeysData[1195], CelscoreKeysData[657], CelscoreKeysData[390], CelscoreKeysData[2096], CelscoreKeysData[2327], CelscoreKeysData[1995], CelscoreKeysData[704], CelscoreKeysData[3026], CelscoreKeysData[2972], CelscoreKeysData[3071], CelscoreKeysData[1911], CelscoreKeysData[790], CelscoreKeysData[2734], CelscoreKeysData[2782], CelscoreKeysData[975], CelscoreKeysData[1186], CelscoreKeysData[556], CelscoreKeysData[560], CelscoreKeysData[621], CelscoreKeysData[1755], CelscoreKeysData[946], CelscoreKeysData[1212], CelscoreKeysData[2582], CelscoreKeysData[1882], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb6696e6f261bafd4b95eb8d8ef681363(CelscoreKeys *self, SEL _cmd)
{
  
    
      char cString[47] = { CelscoreKeysData[1597], CelscoreKeysData[2832], CelscoreKeysData[2899], CelscoreKeysData[359], CelscoreKeysData[742], CelscoreKeysData[2441], CelscoreKeysData[729], CelscoreKeysData[86], CelscoreKeysData[2263], CelscoreKeysData[1425], CelscoreKeysData[2473], CelscoreKeysData[204], CelscoreKeysData[356], CelscoreKeysData[1943], CelscoreKeysData[208], CelscoreKeysData[1344], CelscoreKeysData[1600], CelscoreKeysData[592], CelscoreKeysData[1971], CelscoreKeysData[1048], CelscoreKeysData[1979], CelscoreKeysData[2010], CelscoreKeysData[974], CelscoreKeysData[1498], CelscoreKeysData[1438], CelscoreKeysData[169], CelscoreKeysData[2646], CelscoreKeysData[2956], CelscoreKeysData[1734], CelscoreKeysData[238], CelscoreKeysData[498], CelscoreKeysData[1543], CelscoreKeysData[525], CelscoreKeysData[3030], CelscoreKeysData[1775], CelscoreKeysData[1572], CelscoreKeysData[2254], CelscoreKeysData[30], CelscoreKeysData[1749], CelscoreKeysData[2653], CelscoreKeysData[1056], CelscoreKeysData[2040], CelscoreKeysData[405], CelscoreKeysData[2842], CelscoreKeysData[1285], CelscoreKeysData[1894], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CelscoreKeysData[3098] = "oiJ+m66tFbm/U9Ai4raGJoHtdFb5NBbV6mViRJQ9maJSZoCkwxGQsZStgwJ9Lq1ZGErNudTXM6CityBtGXeQ0G-02DWiFCOwfEzp2rlnltL1PxlOQbt7qNvjs3cGVGJCOMw7Nnfkw5qjyK8RVBYXdwB5wNmEDvEF1AQlHhs7e4LsWN/ogUPYANOEOsvCR8TtdQcAcXUwx0My0kDcdvOkz8RrK9hWsSSwt4QFsELUuECvJA9GWrp5+afjslbEi7ZyXraeXBC3VQsY7AEpETkIHaOoY6jinITCMPWQ3vpikevqcmXdZ1rZTgmwT5zIasikUxmgnGyftCgrgaZ3srTE/zZ9n1x2rDOPSTQq8vIeCAzNG5194XKi/p7JKZbFCI5UVl5HlN9FgK9tuepcRMyao2vxjubOszENOM60kbNrPiHGhbVx6BAUqgdTIF/5usChnP/zj7eXvWX+On2A8zEng2/6rEoYzhguARmtAnvFrEC6SULegda417qq5S6t7rAlcs1RPtymsh1jHf+Uw5/6XMshRPDmZa1wBkFMExYtfdej2t0pTBBBR79WYKJDMFOopYySJaWswPQF2h2wbJKCyTZic08LQeNSMdyO4QBziLzKj9TrfEdO5jJPqvSXMy0g2TulrgZl8UGy34CWmlzdAqB5SDUzF6rs9CTpL/k1uZUoEyKgRAFaGcxJYnEuysZm9ToNAwOGkq/fPj9FF/e4V0rugtZ30cH8tTKFp3a35K7KTgzy12QfDZMeZhZv5IAk1qftQKo+Tc/FvAiP2wHTK9JyU4KfmDvT5ms7FX8zVgWqgI10Jbq0BOP5bKKXjcUGBEtbluC1vfC59SEfT/p7pS78OiPH9dMF7tCzpmFEDSMMfbcOxSEzEtjnJF1GZ8YGWZmOmxwGOZ5cUAomukWRTH8mciPJHCdiCKqz4xknJkVIgNCpxwKq4p74ix9lL5zyFUyo8SAFv8Z/3kbnRZyeWilQw/0fVpIPEGn4JNth+lpamHFhWRHZV3rBevlqJSud7Bu64lsYVq91gFByUGVwkBVn77uUQnR28sxcxft2f47+/TRYA7NM4nlyLTMcuTH9HTu1TlEP5eFFo8BW/xxT0GH1gkk8a5bD2AtQFVvVNxBAEN3v6LPQEPxtMa9KX0E+ssyqiWBSgfCqG/nTa7aQvcdZSu9TnHRXEDd6Oo3qwtcfWO8BgzodRcH1/5Iu5tkrBZqlg6Bn/WIsOY1An2dIwDWURfJ+mdCn+34V2C7zbCQYco/8cXiO1jrvIwXrw3nZQL4/P6WuCj/yllUul8Yny6ih9S/3TqQwnn6DBVx4D07zlRYbxIbhyt/5N8eNwXuZecgZhQmI7q4PPlbHSF6DQioF6Ktwbc057yFXIyoRaSJ7/wSGOI2CL7aOUYTcIX1bGwvI2YEsO24B59SdC:4oX3Z9JoX//x4ZxtFrWWsoJ1hxp/NGITPaOf7S7hDB9kEz96DSVUk6VN0QZwDH4ZsFzgb7Hh-TLRD95nz3YipyQSbRAtXgLTT8ZVfarI9Toh7cHKWENXk8Fy6oCgTQYH0wiOrwE3WIF7klJx0q1lRG4DB3izEHCkGigr7Cqk2mYugveQpRMthLeMmZqGWZvdHsVSth0szKDoFQ0qxOZg6aC2tfojcmGEfbFhdgCdyjTiuSiTtGCVOom92061XFJYSGX9A2NuRaKsIaz8ykHPKGL+RycA2JsJit4PppyXCnV3bpp7w602-v9G+raEH9msUsM1U9hu/jJrR7KwCNaBHL5bIIjhW9HnvPG7r4g5tM2PJHK8p6ApdGb3CdOY1B3/izDQdKl1F+KZBkrhZRvIx0MEW/7S4SH3INDlihCzNKKw3BtUAqC0P8gZaJiJt4/5hfVh1zFJPqmAqeV6mMfFc7F9DJw2KBUnRQfSYAGH450fOhN9DBUyPCPrIjn9CvdYNGRyfdSjd9cREGTT6m4ZO/rIdLrijmqS9-vSCMbYw1L/5I27wgPBPiu+h8onnFvVJkfsLG/o9LunXDKEwUx41RYiAXyidM79CLHi7RaK1aT+YiMlIMLwJL0K7OREBi7t3+7xwHOuAir2pvaahU+1O7zlYCCoRqyNDHrdOY2Dpl+/I7DXMN55bZQFiQ4VWBZNwK5q/MwqInGjrpBZ/jix6GKGXIsHdaIJBz8+Xw1LO5e1EMMzhJ708Q0QwIPmfrI6vrdrNU0r0gtNy0gDwDv8MUUl7gTNdw5/79ANhMGrNfCEvGJ5CVoAX2Gu44pWc01rmSxYt1YL99tYKpczQvjlc64ELi10DSUFOwHXnMrxe63Pf0APzRZNCltdBuTIORjtJf4HAal4q4rc0T9S4m90WWwG8t+MRuHQWLlXL0mgH7VO2tE00bcVWmxhgTXkrsSxo78WXjqeaPZOrZplYYTIBVi42cwI+E+nPDfgxque5JP+DMcZ202I37WsFjl+pseW6YU0Vl25ibl9/smCZnLc4tTdhY5uMfLndtmTMzKZ+vgcuUbRgGFdwTvaL+P9OMY5Pk1D+EP1uhAUbx5OPzknQWFpxgxAGcrzWlzq94MjGUMLisuV1zYr0KovY5vU0GDmBvAculo1uE5cOOThx4z+LbftytzCqcJhuCuG/ng4NxEY7CwMEKPnat0bIZxyM3Ye8cIJ5UtCOtz0oeNQUzXIUcnscj5VHNb2yGdy2VjiDcOjPhFfpHAJ4iKvxZ/cPvGjii4DhXlKKOH1GF4h45CtGwslszqzMxq0qiJr6+V7RdTlR2W4vnCnv8tbKNFFZi8+Tne2EdVwTOfoYLW0Vu1hUlw8smwZhc3mR8MeHaQ0++WkdQeD7idJzyGcXXFjYjshZGzNgFvD1S9qEbVCBocB3cVdiuVlnJBbh7jbCjTHhExiGYz/nJ8jtX7IaeNnsTdBP-1kh4dxXwbpqNgIkT7GP3iTr+ezRuPB0poh9rwgO7s0ViwguiKpOs3uMV9Bt0jv05iUyALjHWOOdShu8BGd1MLOOAEjvo2mcvbIFJVSplk5ikYfkba6Y9P7r6kigOPQ8hXR-MQow3EesbP+lXk875Vqqaa3apuPo7KvK1bCXQaEyeuzcug34zXDzCA+kp6NyYSL1K\\\"";

- (NSString *)description
{
  return [@{
            @"kAPIKey": self.kAPIKey,
            @"kCognitoIdentityPoolId": self.kCognitoIdentityPoolId,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
